{"version":3,"sources":["components/Login/Login.jsx","components/useAuth.js","assets/Mac_Miller_Live_from_Space.jpg","components/Header/Header.jsx","components/Home/RecentlyPlayed/RecentlyPlayedMobile.jsx","assets/no-image1.jpg","components/AlbumTitle/AlbumTitle.jsx","components/AlbumTitle/AlbumTracks/AlbumTracks.jsx","components/Home/NewReleases/NewReleases.jsx","components/Home/MyTopTracks/MyTopTracks.jsx","components/Home/MyTopArtists/MyTopArtists.jsx","components/Home/MyCategories/MyCategories.jsx","components/Home/Home.jsx","components/SearchResults/SearchResults.jsx","components/FloatingPlayer/FloatingPlayer.jsx","components/CategoryPlaylist/CategoryPlaylist.jsx","components/ArtistDetails/RelatedArtists/RelatedArtists.jsx","components/ArtistDetails/ArtistDetails.jsx","components/Artists/Artists.jsx","components/Home/RecentlyPlayed/RecentlyPlayed.jsx","components/MySavedTracks/MySavedTracks.jsx","components/MyPlaylist/MyPlaylist.jsx","components/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["dotenv","config","Login","style","display","justifyContent","height","alignItems","sx","fontSize","margin","color","Typography","textAlign","Button","variant","width","href","url","convertUppercase","word","toUpperCase","allCategories","name","description","icon","myMusic","Header","props","searchTerm","setSearchTerm","setCategory","drawerWidth","mobileOpen","setMobileOpen","currentUser","useState","selectedCategory","setSelectedCategory","window","showStyledInputBaseMobile","setShowStyledInputBaseMobile","handleDrawerToggle","container","undefined","document","body","Search","styled","theme","position","backgroundColor","alpha","palette","common","white","SearchIconWrapper","padding","spacing","pointerEvents","SearchIconWrapperMobile","InputBase","paddingLeft","transition","transitions","create","breakpoints","up","useEffect","drawer","Divider","List","map","category","index","ListItem","selected","button","onClick","e","target","innerText","console","log","ListItemIcon","marginLeft","ListItemText","primary","letterSpacing","textTransform","music","Box","flexGrow","AppBar","sm","ml","Toolbar","lg","md","xs","noWrap","component","className","type","placeholder","value","onChange","right","top","IconButton","size","autoFocus","edge","marginRight","flexShrink","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","RecentlyPlayedMobile","recentlyPlayedSongs","filteredRecentlyPlayedSongs","noImage","floatingPlayerPlay","setFloatingPlayerPlay","currentSongPlayingId","setCurrentSongPlayingId","setChooseTrack","setPlayButtonPressedCount","playButtonPressedCount","recentlyPlayedLi","useRef","scroll","scrollOffset","current","scrollLeft","marginTop","marginBottom","length","overflowX","scrollBehavior","ref","song","cursor","listStyleType","track","album","images","src","alt","id","bottom","left","paddingRight","borderTopRightRadius","Tooltip","placement","title","str","substr","class","artists","AlbumTitle","playlistTracks","scrollTo","borderRadius","background","borderColor","borderWidth","paddingBottom","label","fontWeight","total_tracks","filter","artist","release_date","split","followers","total","popularity","fontStyle","msToTime","duration","seconds","Math","floor","minutes","truncateMobile","truncateArtistNameMobile","AlbumTracks","albumTracks","React","items","role","audio","duration_ms","CircularProgress","NewReleases","newReleases","selectAlbum","setShowAlbumList","searchTracks","setSearchData","setAlbumTracks","chooseTrack","isLoading","newReleasesLi","paddingTop","Item","Paper","typography","body2","text","secondary","MyTopTracks","myTopTracks","Grid","item","xl","MyTopArtists","myTopArtists","getArtist","getArtistRelatedArtists","artistDetails","artistLi","MyCategories","musicCategories","selectCategorySublist","musicLi","musCat","border","icons","Home","i","final","indexOf","obj","transform","bgcolor","boxShadow","p","SearchResults","searchData","addToSavedTracks","anchorEl","setAnchorEl","myPlaylist","addTracksToMyPlaylist","selectPlaylistOpen","setSelectPlaylistOpen","selectCurrentTrack","setSelectCurrentTrack","selectPlaylist","setSelectPlaylist","selectedTrack","setSelectedTrack","handleSelectPlaylistClose","Boolean","overflowY","event","currentTarget","handleClick","Popover","anchorOrigin","vertical","horizontal","dense","disablePadding","ListItemButton","Modal","playlist","uri","FloatingPlayer","accessToken","setPlayerDetails","pauseSong","findIndex","disableNextButton","some","next","token","callback","state","ontimeupdate","isPlaying","progressMs","find","styles","sliderColor","sliderTrackBorderRadius","autoPlay","play","uris","disabled","CategoryPlaylist","categorySublist","selectCategoryPlaylist","categorySublistTitle","categoryListLi","tracks","RelatedArtists","relatedArtists","intlFormat","num","Intl","NumberFormat","format","round","ArtistDetails","genres","genre","flex","Artists","RecentlyPlayed","recentSongsWidth","useTheme","MySavedTracks","createPlaylistSearchTerm","setCreatePlaylistSearchTerm","createPlaylistSearchData","mySavedTracks","removeTrackFromSavedTracks","selectTracksOpen","setSelectTracksOpen","handleSelectTracksClose","Fab","savedTrack","MyPlaylist","myPlaylistTitle","selectMyPlaylist","removeTracksFromMyPlaylist","createPlaylist","setOpen","setTitle","setDescription","displayImage","setDisplayImage","base64Uri","setBase64Uri","handleClose","htmlFor","files","file","reader","FileReader","onloadend","result","readAsDataURL","URL","createObjectURL","spotifyApi","SpotifyWebApi","clientId","process","SPOTIFY_CLIENT_ID","Dashboard","code","offsetWidth","setWidth","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","data","history","pushState","catch","err","message","interval","setInterval","clearInterval","useAuth","setNewReleases","showSearchSongs","setShowSearchSongs","setIsLoading","playerDetails","setAlbum","setCurrentSongArtistAlbums","setCurrentUser","setCategorySublist","setCategorySublistTitle","currentPlaylistPlayingId","setCurrentPlaylistPlayingId","setPlaylistTracks","setRecentlyPlayedSongs","setMyTopArtists","setMyTopTracks","setMusicCategories","setArtistDetails","artistTopTracks","setArtistTopTracks","showArtistDetails","setShowArtistDetails","setSongProgress","setShowArtistsCategory","setShowNewReleasesCategory","setShowSavedTracks","setShowMyPlaylists","setRelatedArtists","setMyPlaylist","setMyPlaylistTitle","setMySavedTracks","setCreatePlaylistSearchData","openSnackbar","setOpenSnackbar","openAlert","setOpenAlert","handleCloseAlert","getMe","addEventListener","getMyRecentPlayedSongs","getMyTopArtists","getMyTopTracks","getMySavedTracks","searchterm","cancel","res","createPlaylistSearchTracks","getNewReleases","getMusicCategories","getMyPlaylists","getMyPlaylistsForSearchResults","getAudioAnalysisForTrack","getPlaylist","getPlaylistTracks","offset","error","albumId","getAlbum","getArtistAlbums","t","trackIds","getTracks","get","headers","Authorization","response","limit","country","albums","getCategories","locale","categories","getMyRecentlyPlayedTracks","topArtists","topTracks","artistId","getArtistTopTracks","getMySavedAlbums","playlistId","spotifyUri","audioId","addTracksToPlaylist","snapshot_id","containsMySavedTracks","trackIsInYourMusic","addToMySavedTracks","handleCloseSnackbar","reason","action","Fragment","zIndex","alignContent","getPlaylistsForCategory","playlists","image","trackId","removeFromMySavedTracks","removeTracksFromPlaylist","longbase64uri","public","uploadCustomPlaylistCoverImage","pause","Snackbar","autoHideDuration","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","App","URLSearchParams","location","search","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ccc128b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport MusicNoteOutlinedIcon from \"@mui/icons-material/MusicNoteOutlined\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=8c278abff1454cee8821faaa5f55f753&response_type=code&redirect_uri=https://m-player13.herokuapp.com&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-read-recently-played%20user-top-read%20playlist-modify-private%20playlist-modify-public%20ugc-image-upload`;\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <MusicNoteOutlinedIcon\r\n            sx={{\r\n              fontSize: 160,\r\n              display: \"block\",\r\n              margin: \"0 auto\",\r\n              color: \"rgb(120, 120, 120)\",\r\n            }}\r\n          />\r\n          <MusicNoteOutlinedIcon\r\n            sx={{\r\n              fontSize: 160,\r\n              display: \"block\",\r\n              margin: \"0 auto\",\r\n              color: \"rgb(120, 120, 120)\",\r\n            }}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Typography style={{ textAlign: \"center\", fontSize: 17 }}>\r\n          A Web based Music Player created using SPOTIFY API\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{\r\n            display: \"block\",\r\n            width: \"60%\",\r\n            margin: \"0 auto\",\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          <a href={AUTH_URL}>Login with Spotify</a>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://m-player13.herokuapp.com\";\r\n\r\nexport default function useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [refreshToken, setRefreshToken] = useState(\"\");\r\n  const [expiresIn, setExpiresIn] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${url}/login`, {\r\n        code,\r\n      })\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        setAccessToken(data.data.accessToken);\r\n        setRefreshToken(data.data.refreshToken);\r\n        setExpiresIn(data.data.expiresIn);\r\n        window.history.pushState({}, null, \"/\");\r\n      })\r\n      .catch((err) => {\r\n        // window.location = \"/\";\r\n        console.log(err.message);\r\n      });\r\n  }, [code]);\r\n  useEffect(() => {\r\n    if (!accessToken || !expiresIn) return;\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post(`${url}/refresh`, {\r\n          refreshToken,\r\n        })\r\n        .then((data) => {\r\n          setAccessToken(data.data.accessToken);\r\n          setExpiresIn(data.data.expiresIn);\r\n        })\r\n        .catch((err) => {\r\n          // window.location = \"/\";\r\n          console.log(err);\r\n        });\r\n    }, (expiresIn - 60) * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  return accessToken;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Mac_Miller_Live_from_Space.6fa7f341.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Box,\r\n  Typography,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n} from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport MusicNoteOutlinedIcon from \"@mui/icons-material/MusicNoteOutlined\";\r\n\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\r\n\r\nimport noImage from \"../../assets/Mac_Miller_Live_from_Space.jpg\";\r\n\r\nfunction convertUppercase(word) {\r\n  return word.toUpperCase();\r\n}\r\n\r\nconst allCategories = [\r\n  {\r\n    name: \"Home\",\r\n    description:\r\n      \"Get a better understanding of where your traffic is coming from.\",\r\n    href: \"#\",\r\n    icon: <HomeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"New Releases\",\r\n    description: \"Speak directly to your customers in a more meaningful way.\",\r\n    href: \"#\",\r\n    icon: <TrendingUpIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"Artists\",\r\n    description: \"Your customers' data will be safe and secure.\",\r\n    href: \"#\",\r\n    icon: <PersonIcon fontSize=\"small\" />,\r\n  },\r\n  // {\r\n  //   name: \"Categories\",\r\n  //   description: \"Your customers' data will be safe and secure.\",\r\n  //   href: \"#\",\r\n  //   icon: <CategoryIcon />,\r\n  // },\r\n];\r\n\r\nconst myMusic = [\r\n  {\r\n    name: \"Saved Tracks\",\r\n    description:\r\n      \"Get a better understanding of where your traffic is coming from.\",\r\n    href: \"#\",\r\n    icon: <SaveAltIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"My Playlists\",\r\n    description: \"Speak directly to your customers in a more meaningful way.\",\r\n    href: \"#\",\r\n    icon: <PlaylistPlayIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst Header = (\r\n  {\r\n    searchTerm,\r\n    setSearchTerm,\r\n    setCategory,\r\n    drawerWidth,\r\n    mobileOpen,\r\n    setMobileOpen,\r\n    width,\r\n    currentUser,\r\n  },\r\n  props\r\n) => {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const { window } = props;\r\n  const [showStyledInputBaseMobile, setShowStyledInputBaseMobile] = useState(\r\n    false\r\n  );\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const SearchIconWrapperMobile = styled(\"div\")(({ theme }) => ({\r\n    margin: theme.spacing(0, 0),\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"40ch\",\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  const StyledInputBaseMobile = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(1)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (searchTerm !== \"\") {\r\n      setShowStyledInputBaseMobile(true);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  const drawer =\r\n    currentUser !== undefined ? (\r\n      <div>\r\n        <div\r\n          style={{\r\n            padding: \"20px 100px 20px 20px\",\r\n          }}\r\n        >\r\n          {/* <div\r\n            style={{\r\n              padding: 6,\r\n              border: \"1px solid rgb(200, 200, 200)\",\r\n              borderRadius: 14,\r\n            }}\r\n          >\r\n            <img\r\n              class=\" rounded-full\"\r\n              style={{ borderRadius: 10 }}\r\n              src={currentUser.images[0].url}\r\n              alt=\"\"\r\n            />\r\n          </div> */}\r\n        </div>\r\n        {/* <div style={{ padding: \"0 20px 20px 20px\" }}>\r\n          <Typography\r\n            style={{\r\n              fontSize: 14,\r\n              textTransform: \"uppercase\",\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            {currentUser.display_name}\r\n          </Typography>\r\n          <Typography style={{ marginTop: 6, fontSize: 13 }}>\r\n            {currentUser.email}\r\n          </Typography>\r\n        </div> */}\r\n        <Divider />\r\n        <List>\r\n          {allCategories.map((category, index) => (\r\n            <ListItem\r\n              selected={selectedCategory === convertUppercase(category.name)}\r\n              button\r\n              key={category.name}\r\n              onClick={(e) => {\r\n                setCategory(category.name);\r\n                setMobileOpen(false);\r\n                setSelectedCategory(e.target.innerText);\r\n                console.log(e.target.innerText, category.name);\r\n              }}\r\n            >\r\n              {console.log(category.name)}\r\n              <ListItemIcon style={{ marginLeft: 10 }}>\r\n                {category.icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 13,\r\n                      marginLeft: -2,\r\n                      color: \"black\",\r\n                      letterSpacing: 1.5,\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    {category.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography\r\n          style={{\r\n            margin: \"18px 0\",\r\n            marginLeft: 30,\r\n            fontSize: 15,\r\n            letterSpacing: 4,\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          MY MUSIC\r\n        </Typography>\r\n        <List>\r\n          {myMusic.map((music, index) => (\r\n            <ListItem\r\n              selected={selectedCategory === convertUppercase(music.name)}\r\n              button\r\n              key={music.name}\r\n              onClick={(e) => {\r\n                setCategory(music.name);\r\n                setMobileOpen(false);\r\n                setSelectedCategory(e.target.innerText);\r\n                console.log(e.target.innerText);\r\n              }}\r\n            >\r\n              <ListItemIcon style={{ marginLeft: 10 }}>\r\n                {music.icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 13,\r\n                      marginLeft: -2,\r\n                      color: \"black\",\r\n                      letterSpacing: 1.5,\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    {music.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    ) : null;\r\n\r\n  return currentUser !== undefined ? (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar\r\n          position=\"static\"\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          sx={{\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n            ml: { sm: `${drawerWidth}px` },\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  lg: \"flex\",\r\n                  md: \"flex\",\r\n                  sm: \"none\",\r\n                  xs: \"none\",\r\n                },\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <MusicNoteOutlinedIcon\r\n                  sx={{\r\n                    fontSize: 24,\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"rgb(120, 120, 120)\",\r\n                  }}\r\n                />\r\n                <Typography\r\n                  noWrap\r\n                  component=\"div\"\r\n                  sx={{ flexGrow: 1, display: \"block\", fontSize: 18 }}\r\n                >\r\n                  mPlayer\r\n                </Typography>\r\n              </div>\r\n              {/* <Search style={{ position: \"relative\" }}>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon color=\"primary\" />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                  autoFocus\r\n                  placeholder=\"Search for songs and artists..\"\r\n                  inputProps={{ \"aria-label\": \"search\" }}\r\n                  value={searchTerm}\r\n                  onChange={(e) => {\r\n                    setSearchTerm(e.target.value);\r\n                  }}\r\n                  style={{\r\n                    borderWidth: 1,\r\n                    borderColor: \"rgb(220, 220, 220)\",\r\n                    marginRight: 30,\r\n                    borderRadius: 10,\r\n                    fontSize: 15,\r\n                  }}\r\n                />\r\n                {searchTerm ? (\r\n                  <span style={{ position: \"absolute\", right: 40, top: 4 }}>\r\n                    <IconButton onClick={() => setSearchTerm(\"\")} size=\"small\">\r\n                      <ClearIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </span>\r\n                ) : null}\r\n              </Search> */}\r\n              <div style={{ position: \"relative\" }}>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon color=\"primary\" />\r\n                </SearchIconWrapper>\r\n                <input\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search for songs and artists\"\r\n                  value={searchTerm}\r\n                  style={{ width: 400, fontSize: 15 }}\r\n                  onChange={(e) => {\r\n                    setSearchTerm(e.target.value);\r\n                  }}\r\n                />\r\n                {searchTerm ? (\r\n                  <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                    <IconButton onClick={() => setSearchTerm(\"\")} size=\"small\">\r\n                      <ClearIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n\r\n              {/* <div className=\" md:flex items-center\">\r\n                <img\r\n                  class=\"w-10 h-10 rounded-full\"\r\n                  style={{ borderRadius: 10 }}\r\n                  src={currentUser.images[0].url}\r\n                  alt=\"\"\r\n                />\r\n              </div> */}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  lg: \"none\",\r\n                  md: \"none\",\r\n                  sm: \"block\",\r\n                  xs: \"block\",\r\n                },\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {showStyledInputBaseMobile ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Search\r\n                    onClick={() => {\r\n                      setShowStyledInputBaseMobile(false);\r\n                      setSearchTerm(\"\");\r\n                    }}\r\n                  >\r\n                    <ArrowBackIcon fontSize=\"small\" />\r\n                  </Search>\r\n                  <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                    <input\r\n                      autoFocus\r\n                      className=\" focus:outline-none text-black placeholder-gray-500  rounded-md py-2 pl-4\"\r\n                      type=\"text\"\r\n                      placeholder=\"Search for songs and artists\"\r\n                      value={searchTerm}\r\n                      style={{\r\n                        fontSize: 15,\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                      }}\r\n                    />\r\n                    {searchTerm ? (\r\n                      <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                        <IconButton\r\n                          onClick={() => setSearchTerm(\"\")}\r\n                          size=\"small\"\r\n                        >\r\n                          <ClearIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </span>\r\n                    ) : null}\r\n                  </div>\r\n                  {/* <Search\r\n                    onClick={() => {\r\n                      setShowStyledInputBaseMobile(false);\r\n                      setSearchTerm(\"\");\r\n                    }}\r\n                  >\r\n                    <ArrowBackIcon fontSize=\"small\" />\r\n                  </Search>\r\n                  <StyledInputBaseMobile\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Search for songs and artists..\"\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                    value={searchTerm}\r\n                    onChange={(e) => {\r\n                      setSearchTerm(e.target.value);\r\n                    }}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderRadius: 10,\r\n                      fontSize: 15,\r\n                    }}\r\n                  />\r\n                  {searchTerm ? (\r\n                    <span style={{ position: \"absolute\", right: 10, top: 5 }}>\r\n                      <IconButton\r\n                        onClick={() => setSearchTerm(\"\")}\r\n                        size=\"small\"\r\n                      >\r\n                        <ClearIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </span>\r\n                  ) : null} */}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {width < 582 ? (\r\n                    <IconButton\r\n                      size=\"large\"\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={handleDrawerToggle}\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                  ) : null}\r\n\r\n                  <MusicNoteOutlinedIcon\r\n                    sx={{\r\n                      fontSize: 22,\r\n                      display: \"block\",\r\n                      margin: \"0 auto\",\r\n                      color: \"rgb(120, 120, 120)\",\r\n                    }}\r\n                  />\r\n                  <Typography\r\n                    noWrap\r\n                    component=\"div\"\r\n                    sx={{ flexGrow: 1, display: \"block\", fontSize: 17 }}\r\n                  >\r\n                    mPlayer\r\n                  </Typography>\r\n\r\n                  <Search\r\n                    style={{ position: \"relative\", marginRight: 10 }}\r\n                    onClick={() => setShowStyledInputBaseMobile(true)}\r\n                  >\r\n                    <IconButton>\r\n                      <SearchIconWrapperMobile>\r\n                        <SearchIcon color=\"primary\" />\r\n                      </SearchIconWrapperMobile>\r\n                    </IconButton>\r\n                  </Search>\r\n                  {/* <div className=\" md:flex items-center\">\r\n                    <img\r\n                      class=\"w-10 h-10 rounded-full\"\r\n                      style={{ borderRadius: 10 }}\r\n                      src={currentUser.images[0].url}\r\n                      alt=\"\"\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              )}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        style={{ backgroundColor: \"rgb(240, 240, 240)\" }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", sm: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default Header;\r\n","import { useRef } from \"react\";\r\nimport { IconButton, Divider, Tooltip } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst RecentlyPlayedMobile = ({\r\n  recentlyPlayedSongs,\r\n  filteredRecentlyPlayedSongs,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  const recentlyPlayedLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    recentlyPlayedLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5%\" }}>\r\n      <Divider />\r\n      <div style={{ marginTop: \"5%\" }}>\r\n        <div\r\n          style={{\r\n            margin: 12,\r\n            marginBottom: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <p\r\n            className=\"text-gray-900\"\r\n            style={{\r\n              fontSize: 13,\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            RECENTLY PLAYED ({recentlyPlayedSongs.length})\r\n          </p>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <IconButton onClick={() => scroll(-360)}>\r\n              <ArrowLeftIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => scroll(360)}>\r\n              <ArrowRightIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <ul\r\n          style={{\r\n            display: \"flex\",\r\n            overflowX: \"scroll\",\r\n            width: \"100%\",\r\n            scrollBehavior: \"smooth\",\r\n          }}\r\n          ref={recentlyPlayedLi}\r\n          className=\"sidebar\"\r\n        >\r\n          {recentlyPlayedSongs &&\r\n            filteredRecentlyPlayedSongs?.map((song, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    position: \"relative\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <li\r\n                    key={song.track.id}\r\n                    style={{\r\n                      marginRight: 10,\r\n                      padding: 10,\r\n                      alignItems: \"center\",\r\n                      listStyleType: \"none\",\r\n                    }}\r\n                    className=\"py-1 rounded-md overflow-hidden border border-gray-200 cardHover\"\r\n                  >\r\n                    <div\r\n                      // style={{ padding: 6 }}\r\n                      className=\"ml-1 mr-1 mb-2 w-36 h-36 rounded-md overflow-hidden \"\r\n                    >\r\n                      {song.track.album.images[0] !== undefined ? (\r\n                        <img\r\n                          src={song.track.album.images[0].url}\r\n                          // alt={album.id ? album.images[0].url : noImage}\r\n                          className=\"w-full h-full object-center object-cover\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={noImage}\r\n                          alt={\r\n                            song.track.album.id\r\n                              ? song.track.album.images[0].url\r\n                              : noImage\r\n                          }\r\n                          className=\"w-full h-full object-center object-cover\"\r\n                        />\r\n                      )}\r\n\r\n                      {floatingPlayerPlay &&\r\n                      song.track.id === currentSongPlayingId ? (\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            bottom: 1,\r\n                            left: 9,\r\n                            // backgroundColor: \"white\",\r\n                            padding: 17,\r\n                            paddingRight: 19,\r\n                            borderTopRightRadius: 10,\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: 6,\r\n                              bottom: 2,\r\n                            }}\r\n                          >\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                          </span>\r\n                        </div>\r\n                      ) : null}\r\n\r\n                      <div\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 6,\r\n                          right: 20,\r\n                        }}\r\n                      >\r\n                        {song.track.id === currentSongPlayingId ? (\r\n                          floatingPlayerPlay ? (\r\n                            <Tooltip placement=\"top\" title=\"Pause\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  song.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Pause\");\r\n                                  setFloatingPlayerPlay(false);\r\n                                }}\r\n                              >\r\n                                <PauseIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip placement=\"top\" title=\"Play\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  song.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Play\");\r\n                                  setFloatingPlayerPlay(true);\r\n                                }}\r\n                              >\r\n                                <PlayArrowIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          )\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(240, 240, 240)\",\r\n                              }}\r\n                              color={\r\n                                song.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                setChooseTrack(song.track);\r\n                                setCurrentSongPlayingId(song.track.id);\r\n                                setPlayButtonPressedCount(\r\n                                  (playButtonPressedCount += 1)\r\n                                );\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                      </div>\r\n                      {/* <p\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: 16,\r\n                          bottom: 70,\r\n                        }}\r\n                      >\r\n                        {song.track.popularity}\r\n                      </p> */}\r\n                    </div>\r\n\r\n                    <div className=\"ml-1 flex-1 flex flex-col mr-2\">\r\n                      <div>\r\n                        <div\r\n                          className={`flex justify-between text-${\r\n                            song.track.id === currentSongPlayingId\r\n                              ? \"blue\"\r\n                              : \"gray\"\r\n                          }-900`}\r\n                          style={{ fontSize: 13.5, alignItems: \"center\" }}\r\n                        >\r\n                          <p>{`${truncate(song.track.name)}`}</p>\r\n                        </div>\r\n\r\n                        <div class=\"mt-1 mb-3 flex items-center text-sm text-gray-500\">\r\n                          <p\r\n                            className={`flex items-center text-sm text-${\r\n                              song.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-400`}\r\n                            style={{ fontSize: 13.4 }}\r\n                          >\r\n                            {song.track.album.artists[0].name}\r\n                          </p>\r\n                        </div>\r\n\r\n                        {/* <div\r\n                          style={{ fontSize: 12.6 }}\r\n                          className=\"mt-1 flex items-center\"\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                              fontSize: 12.6,\r\n                            }}\r\n                          >\r\n                            {song.track.album.album_type}\r\n                          </div>\r\n                          <div\r\n                            class=\"text-base font-normal mx-1\"\r\n                            style={{ fontSize: 40 }}\r\n                          >\r\n                            ·\r\n                          </div>\r\n\r\n                          <span>\r\n                            {song.track.album.total_tracks}{\" \"}\r\n                            {song.track.album.total_tracks > 1\r\n                              ? \"tracks\"\r\n                              : \"track\"}\r\n                          </span>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentlyPlayedMobile;\r\n","export default __webpack_public_path__ + \"static/media/no-image1.cbfa1c9f.jpg\";","import React, { useEffect } from \"react\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 23 ? str.substr(0, 23) + \"...\" : str;\r\n};\r\n\r\nconst AlbumTitle = ({ album, playlistTracks }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(album);\r\n\r\n  return album ? (\r\n    <>\r\n      <div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              padding: \"0 22%\",\r\n              width: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n              height: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n              borderRadius: \"50%\",\r\n            }}\r\n            src={album.images ? album.images[0].url : noImage}\r\n            alt=\"\"\r\n            className=\"\"\r\n          />\r\n\r\n          <div\r\n            className=\"px-4 pt-4 mt-4 \"\r\n            style={{\r\n              background: \"white\",\r\n              borderColor: \"rgb(220, 220, 220)\",\r\n              borderWidth: 1,\r\n              bottom: 0,\r\n              right: 0,\r\n              left: 0,\r\n              color: \"white\",\r\n              paddingBottom: 20,\r\n              borderRadius: 6,\r\n            }}\r\n          >\r\n            {album.label ? (\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: 24,\r\n                    fontWeight: \"bold\",\r\n                    textTransform: \"capitalize\",\r\n                    letterSpacing: 1,\r\n                    color: \"grey\",\r\n                  }}\r\n                >\r\n                  {truncate(album.name)}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div\r\n              style={{\r\n                color: \"black\",\r\n                margin: \"8px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n                className=\"text-gray-400\"\r\n              >\r\n                <span style={{ fontSize: 13 }}>{album.label}</span>\r\n                {album.label ? (\r\n                  <div\r\n                    class=\"text-base font-normal mx-2\"\r\n                    style={{ fontSize: 40 }}\r\n                  >\r\n                    ·\r\n                  </div>\r\n                ) : null}\r\n                {album.total_tracks ? (\r\n                  album.total_tracks > 1 ? (\r\n                    <div style={{ fontSize: 13 }}>\r\n                      {album.total_tracks} tracks\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ fontSize: 13 }}>\r\n                      {\" \"}\r\n                      {album.total_tracks} track\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div style={{ fontSize: 13 }}>{playlistTracks} tracks</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                fontSize: 13,\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {album.artists && album.artists.length < 4 ? (\r\n                  <span>{album.artists[0].name}</span>\r\n                ) : (\r\n                  <>\r\n                    {album.artists &&\r\n                      album.artists\r\n                        .filter((artist, index) => index < 3)\r\n                        .map((artist, index) =>\r\n                          index >= 2 ? (\r\n                            <span key={artist.id}>and more...</span>\r\n                          ) : (\r\n                            <span\r\n                              key={artist.id}\r\n                              style={\r\n                                index !== 1\r\n                                  ? { marginLeft: 0 }\r\n                                  : { marginLeft: 3 }\r\n                              }\r\n                            >\r\n                              {artist.name}\r\n                              {index !== 1 ? \", \" : \" \"}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                  </>\r\n                )}\r\n                {album.label ? (\r\n                  <div\r\n                    class=\"text-base font-normal mx-2\"\r\n                    style={{ fontSize: 40 }}\r\n                  >\r\n                    ·\r\n                  </div>\r\n                ) : null}\r\n                {album.release_date ? (\r\n                  <div style={{ fontSize: 13 }}>\r\n                    {`${album.release_date.split(\"-\")[2]}-${\r\n                      album.release_date.split(\"-\")[1]\r\n                    }-${album.release_date.split(\"-\")[0]}`}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <span>\r\n                {album.followers ? (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <PeopleAltIcon fontSize=\"small\" />\r\n                    <span style={{ marginLeft: 6 }}>\r\n                      {album.followers.total} followers\r\n                    </span>\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <ThumbUpIcon fontSize=\"small\" />\r\n                    <span style={{ fontSize: 13, marginLeft: 6 }}>\r\n                      {album.popularity}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </span>\r\n            </div>\r\n            <span\r\n              style={{\r\n                fontSize: 13,\r\n                fontStyle: \"italic\",\r\n              }}\r\n            >\r\n              {album.description}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default AlbumTitle;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst AlbumTracks = ({\r\n  albumTracks,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return albumTracks ? (\r\n    <div>\r\n      {albumTracks.length !== 0 ? (\r\n        albumTracks.items ? (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div className={albumTracks.length > 5 ? \"songsBox\" : null}>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={albumTracks ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {/* {console.log(albumTracks)} */}\r\n                      {albumTracks.items?.map((audio) =>\r\n                        audio.track !== null ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.track.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                // onClick={() => selectAlbum(audio.track.track.id)}\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.track.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.track.album.images[0].url}\r\n                                    // alt={album.id ? album.images[0].url : noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    // alt={album.id ? album.images[0].url : noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.track.name\r\n                                        ? truncateMobile(audio.track.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.track.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.track.artists[0].name\r\n                                          ? audio.track.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.track.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    className={`text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      display: \"flex\",\r\n                                      position: \"relative\",\r\n                                      justifyContent: \"space-between\",\r\n                                    }}\r\n                                  >\r\n                                    {msToTime(audio.track.duration_ms)}\r\n                                    {audio.track.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <span id=\"bars\">\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                        </span>\r\n                                      ) : null\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 6,\r\n                                    top: 14,\r\n                                  }}\r\n                                >\r\n                                  {audio.track.id === currentSongPlayingId ? (\r\n                                    floatingPlayerPlay ? (\r\n                                      <Tooltip placement=\"top\" title=\"Pause\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Pause\");\r\n                                            setFloatingPlayerPlay(false);\r\n                                          }}\r\n                                        >\r\n                                          <PauseIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Play\");\r\n                                            setFloatingPlayerPlay(true);\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          setChooseTrack(audio.track);\r\n                                          setCurrentSongPlayingId(\r\n                                            audio.track.id\r\n                                          );\r\n                                          setPlayButtonPressedCount(\r\n                                            (playButtonPressedCount += 1)\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ) : null\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div className={albumTracks.length > 5 ? \"songsBox\" : null}>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={albumTracks ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {/* {console.log(albumTracks)} */}\r\n                      {albumTracks?.map((audio) => (\r\n                        <div\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"0 auto\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          key={audio.id}\r\n                        >\r\n                          <li\r\n                            style={{ alignItems: \"center\" }}\r\n                            className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                          >\r\n                            <div\r\n                              // onClick={() => selectAlbum(audio.track.id)}\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              {audio.album.images[0] !== undefined ? (\r\n                                <img\r\n                                  src={audio.album.images[0].url}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  src={noImage}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                              style={{ position: \"relative\" }}\r\n                            >\r\n                              <div>\r\n                                <div\r\n                                  className={`flex justify-between text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-600`}\r\n                                >\r\n                                  <Typography\r\n                                    style={{\r\n                                      fontSize: 13,\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {audio.name\r\n                                      ? truncateMobile(audio.name)\r\n                                      : \"No name\"}\r\n                                  </Typography>\r\n                                </div>\r\n\r\n                                <div\r\n                                  className={`mt-1 mb-1 flex items-center  text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-400`}\r\n                                >\r\n                                  {audio.artists.length < 2 ? (\r\n                                    <span\r\n                                      style={{ fontSize: 12 }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"\"\r\n                                      }\r\n                                    >\r\n                                      {audio.artists[0].name\r\n                                        ? audio.artists[0].name\r\n                                        : \"No artist name\"}\r\n                                    </span>\r\n                                  ) : (\r\n                                    <>\r\n                                      <span style={{ fontSize: 12 }}>\r\n                                        {audio.artists\r\n                                          .filter((artist, index) => index < 3)\r\n                                          .map((artist, index) =>\r\n                                            index >= 2 ? null : (\r\n                                              <span\r\n                                                key={artist.id}\r\n                                                style={\r\n                                                  index === 1\r\n                                                    ? {\r\n                                                        fontSize: 12,\r\n                                                        marginLeft: 4,\r\n                                                      }\r\n                                                    : { fontSize: 12 }\r\n                                                }\r\n                                              >\r\n                                                {index === 1\r\n                                                  ? truncateArtistNameMobile(\r\n                                                      artist.name\r\n                                                    )\r\n                                                  : artist.name}\r\n\r\n                                                {index !== 1 ? \",\" : \"\"}\r\n                                              </span>\r\n                                            )\r\n                                          )}\r\n                                      </span>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                  </div>\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <span id=\"bars\">\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                        </span>\r\n                                      ) : null\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  right: 6,\r\n                                  top: 14,\r\n                                }}\r\n                              >\r\n                                {audio.id === currentSongPlayingId ? (\r\n                                  floatingPlayerPlay ? (\r\n                                    <Tooltip placement=\"top\" title=\"Pause\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Pause\");\r\n                                          setFloatingPlayerPlay(false);\r\n                                        }}\r\n                                      >\r\n                                        <PauseIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Play\");\r\n                                          setFloatingPlayerPlay(true);\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )\r\n                                ) : (\r\n                                  <Tooltip placement=\"top\" title=\"Play\">\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      style={{\r\n                                        backgroundColor: \"rgb(240, 240, 240)\",\r\n                                      }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"primary\"\r\n                                          : \"inherit\"\r\n                                      }\r\n                                      onClick={() => {\r\n                                        setChooseTrack(audio);\r\n                                        setCurrentSongPlayingId(audio.id);\r\n                                        setPlayButtonPressedCount(\r\n                                          (playButtonPressedCount += 1)\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      <PlayArrowIcon />\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={28} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default AlbumTracks;\r\n","import { useRef } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport AlbumTitle from \"../../AlbumTitle/AlbumTitle\";\r\nimport AlbumTracks from \"../../AlbumTitle/AlbumTracks/AlbumTracks\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 20) + \"...\" : str;\r\n};\r\n\r\nconst NewReleases = ({\r\n  newReleases,\r\n  selectAlbum,\r\n  album,\r\n  setShowAlbumList,\r\n  searchTerm,\r\n  searchTracks,\r\n  playlistTracks,\r\n  setSearchData,\r\n  setAlbumTracks,\r\n  albumTracks,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  isLoading,\r\n}) => {\r\n  const newReleasesLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    newReleasesLi.current.scrollLeft += scrollOffset;\r\n  };\r\n  console.log(albumTracks);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          NEW RELEASES ({newReleases.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"sidebar\"\r\n        ref={newReleasesLi}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginLeft: 12,\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {newReleases?.map((song) => (\r\n          <li\r\n            key={song.id}\r\n            onClick={() => selectAlbum(song.id)}\r\n            style={\r\n              album.id === song.id\r\n                ? {\r\n                    marginRight: 20,\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"rgb(240, 240, 240)\",\r\n                  }\r\n                : { marginRight: 20, alignItems: \"center\" }\r\n            }\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-32 h-32 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              <img\r\n                src={song.images ? song.images[0].url : noImage}\r\n                className=\"w-full h-full object-center object-cover\"\r\n                style={{\r\n                  borderRadius: 100,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(song.name)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {!isLoading ? (\r\n        <div\r\n          style={{\r\n            paddingTop: \"6%\",\r\n            paddingBottom: \"2%\",\r\n            alignItems: \"center\",\r\n          }}\r\n          className=\"\"\r\n        >\r\n          <AlbumTitle\r\n            album={album}\r\n            setShowAlbumList={setShowAlbumList}\r\n            searchTerm={searchTerm}\r\n            searchTracks={searchTracks}\r\n            playlistTracks={playlistTracks}\r\n            setSearchData={setSearchData}\r\n            setAlbumTracks={setAlbumTracks}\r\n          />\r\n          <div className=\"mt-6\">\r\n            <AlbumTracks\r\n              albumTracks={albumTracks}\r\n              chooseTrack={chooseTrack}\r\n              setChooseTrack={setChooseTrack}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={30} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","import { Hidden, IconButton, Grid, Paper, Tooltip } from \"@mui/material\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport React from \"react\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst MyTopTracks = ({\r\n  myTopTracks,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div style={{ margin: 12, marginTop: 30 }}>\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY TOP TRACKS ({myTopTracks.length})\r\n        </p>\r\n      </div>\r\n      {/* {console.log(myTopTracks)} */}\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        // columns={{ xs: 4, sm: 8, md: 12 }}\r\n      >\r\n        {myTopTracks?.map((track, index) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\r\n            <Item\r\n              variant=\"outlined\"\r\n              style={{ cursor: \"pointer\", position: \"relative\" }}\r\n              className=\"cardHover\"\r\n            >\r\n              <li\r\n                key={track.id}\r\n                style={{\r\n                  marginRight: 10,\r\n                  alignItems: \"center\",\r\n                  listStyleType: \"none\",\r\n                }}\r\n                className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden\"\r\n              >\r\n                <div className=\"ml-1 mr-1 mb-2 flex-shrink-0   rounded-md overflow-hidden\">\r\n                  {track.album.images[0] !== undefined ? (\r\n                    <img\r\n                      src={track.album.images[0].url}\r\n                      // alt={album.id ? album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={noImage}\r\n                      alt={track.album.id ? track.album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  )}\r\n                  {floatingPlayerPlay && track.id === currentSongPlayingId ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 1,\r\n                        left: 14,\r\n                        // backgroundColor: \"white\",\r\n                        padding: 17,\r\n                        paddingRight: 19,\r\n                        borderTopRightRadius: 10,\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: 6,\r\n                          bottom: 8,\r\n                        }}\r\n                      >\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                      </span>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  <div style={{ position: \"absolute\", bottom: 10, right: 10 }}>\r\n                    {track.id === currentSongPlayingId ? (\r\n                      floatingPlayerPlay ? (\r\n                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              console.log(\"Pause\");\r\n                              setFloatingPlayerPlay(false);\r\n                            }}\r\n                          >\r\n                            <PauseIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip placement=\"top\" title=\"Play\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              console.log(\"Play\");\r\n                              setFloatingPlayerPlay(true);\r\n                            }}\r\n                          >\r\n                            <PlayArrowIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )\r\n                    ) : (\r\n                      <Tooltip placement=\"top\" title=\"Play\">\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          style={{\r\n                            backgroundColor: \"rgb(220, 220, 220)\",\r\n                          }}\r\n                          color={\r\n                            track.id === currentSongPlayingId\r\n                              ? \"primary\"\r\n                              : \"inherit\"\r\n                          }\r\n                          onClick={() => {\r\n                            setChooseTrack(track);\r\n                            setCurrentSongPlayingId(track.id);\r\n                            setPlayButtonPressedCount(\r\n                              (playButtonPressedCount += 1)\r\n                            );\r\n                          }}\r\n                        >\r\n                          <PlayArrowIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </div>\r\n                  <p\r\n                    className={`flex justify-between text-${\r\n                      track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                    }-600`}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 16,\r\n                      bottom: 52,\r\n                      fontSize: 13,\r\n                    }}\r\n                  >\r\n                    {track.popularity}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"ml-1 mt-2 mb-2 flex-1 flex flex-col mr-2\">\r\n                  <div>\r\n                    <div\r\n                      className={`flex justify-between text-${\r\n                        track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                      }-600`}\r\n                      style={{ fontSize: 13, alignItems: \"center\" }}\r\n                    >\r\n                      <p>{`${truncate(track.name)}`}</p>\r\n                    </div>\r\n\r\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\r\n                      <p\r\n                        className={`text-sm text-${\r\n                          track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                        }-400`}\r\n                        style={{ fontSize: 12 }}\r\n                      >\r\n                        {track.album.artists[0].name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* <div\r\n                      style={{ fontSize: 12.6 }}\r\n                      className=\"mt-1 flex items-center\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: 12.6,\r\n                        }}\r\n                      >\r\n                        {track.album.album_type}\r\n                      </div>\r\n                      <div\r\n                        class=\"text-base font-normal mx-1\"\r\n                        style={{ fontSize: 40 }}\r\n                      >\r\n                        ·\r\n                      </div>\r\n\r\n                      <span>\r\n                        {track.album.total_tracks}{\" \"}\r\n                        {track.album.total_tracks > 1 ? \"tracks\" : \"track\"}\r\n                      </span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTopTracks;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst MyTopArtists = ({\r\n  myTopArtists,\r\n  noImage,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n  artistDetails,\r\n}) => {\r\n  const artistLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  console.log(artistDetails);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY TOP ARTISTS ({myTopArtists.length})\r\n        </p>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <ul\r\n        role=\"list\"\r\n        ref={artistLi}\r\n        className=\"sidebar\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginLeft: 12,\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {myTopArtists?.map((artist) => (\r\n          <li\r\n            key={artist.id}\r\n            onClick={() => {\r\n              getArtist(artist.id);\r\n              getArtistRelatedArtists(artist.id);\r\n            }}\r\n            style={\r\n              artistDetails.id === artist.id\r\n                ? {\r\n                    marginRight: 10,\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"rgb(240, 240, 240)\",\r\n                  }\r\n                : { marginRight: 10, alignItems: \"center\" }\r\n            }\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              {artist.images[0] !== undefined ? (\r\n                <img\r\n                  src={artist.images[0].url}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={noImage}\r\n                  alt={artist.id ? artist.images[0].url : noImage}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{ borderRadius: 100 }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(artist.name)}</p>\r\n                  {/* <p style={{ fontSize: 13 }}>{artist.popularity}</p> */}\r\n                </div>\r\n\r\n                {/* <div\r\n                    style={{ fontSize: 13, marginTop: 6, marginBottom: 4 }}\r\n                    className=\"mt-1 flex items-center text-gray-500\"\r\n                  >\r\n                    <PeopleAltIcon fontSize=\"small\" />{\" \"}\r\n                    <span style={{ marginLeft: 4 }}>\r\n                      {formatFollowersCount(artist.followers.total)} followers\r\n                    </span>\r\n                  </div> */}\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTopArtists;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst MyCategories = ({\r\n  musicCategories,\r\n  selectAlbum,\r\n  selectCategorySublist,\r\n}) => {\r\n  const musicLi = useRef();\r\n  // console.log(musicLi.current.scrollLeft);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    musicLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          CATEGORIES ({musicCategories.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"sidebar\"\r\n        ref={musicLi}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {musicCategories?.map((musCat) => (\r\n          <li\r\n            key={musCat.id}\r\n            onClick={() => {\r\n              musCat.href.split(\"/\")[4] === \"albums\"\r\n                ? selectAlbum(musCat.id)\r\n                : selectCategorySublist(musCat);\r\n            }}\r\n            style={{ marginRight: 20, alignItems: \"center\" }}\r\n            className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                border: \"1px solid rgb(220, 220, 220)\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              <img\r\n                src={musCat.icons ? musCat.icons[0].url : noImage}\r\n                // alt={album.id ? album.images[0].url : noImage}\r\n                className=\"w-full h-full object-center object-cover\"\r\n                style={{ borderRadius: 100 }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    textTransform: \"uppercase\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    letterSpacing: 0.5,\r\n                  }}\r\n                >\r\n                  <p>{musCat.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n        <div></div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCategories;\r\n","import { Hidden, Box } from \"@mui/material\";\r\n\r\nimport RecentlyPlayedMobile from \"./RecentlyPlayed/RecentlyPlayedMobile\";\r\nimport NewReleases from \"./NewReleases/NewReleases\";\r\nimport MyTopTracks from \"./MyTopTracks/MyTopTracks\";\r\nimport MyTopArtists from \"./MyTopArtists/MyTopArtists\";\r\nimport MyCategories from \"./MyCategories/MyCategories\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst Home = ({\r\n  album,\r\n  setShowAlbumList,\r\n  searchTerm,\r\n  searchTracks,\r\n  playlistTracks,\r\n  setSearchData,\r\n  setAlbumTracks,\r\n  setChooseTrack,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  recentlyPlayedSongs,\r\n  newReleases,\r\n  myTopArtists,\r\n  myTopTracks,\r\n  selectAlbum,\r\n  musicCategories,\r\n  selectCategorySublist,\r\n  getArtist,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  albumTracks,\r\n  chooseTrack,\r\n}) => {\r\n  // console.log(albumTracks);\r\n  //Removing duplicate entries from recently played songs array\r\n  let filteredRecentlyPlayedSongs = recentlyPlayedSongs\r\n    .map((e) => e.track[\"id\"])\r\n    .map((e, i, final) => final.indexOf(e) === i && i)\r\n    .filter((obj) => recentlyPlayedSongs[obj])\r\n    .map((e) => recentlyPlayedSongs[e]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Hidden lgDown> */}\r\n      <div className=\"flex flex-col \">\r\n        <div className=\"\">\r\n          <MyCategories\r\n            musicCategories={musicCategories}\r\n            selectAlbum={selectAlbum}\r\n            selectCategorySublist={selectCategorySublist}\r\n            noImage={noImage}\r\n          />\r\n          <MyTopTracks\r\n            myTopTracks={myTopTracks}\r\n            noImage={noImage}\r\n            floatingPlayerPlay={floatingPlayerPlay}\r\n            setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n            currentSongPlayingId={currentSongPlayingId}\r\n            setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n            setChooseTrack={setChooseTrack}\r\n            setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n            playButtonPressedCount={playButtonPressedCount}\r\n          />\r\n          {/* <Box\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"block\", md: \"block\", lg: \"none\" },\r\n            }}\r\n          >\r\n            <RecentlyPlayedMobile\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n          </Box> */}\r\n        </div>\r\n      </div>\r\n      {/* </Hidden> */}\r\n      {/* <Hidden lgUp>\r\n        <div className=\"flex flex-col \">\r\n          <div className=\"lg:flex md:block sm:block\">\r\n            <MyTopTracks\r\n              myTopTracks={myTopTracks}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </Hidden> */}\r\n\r\n      {/* <div className=\"bg-white \">\r\n          <div className=\"flow-root\">\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <NewReleases\r\n              newReleases={newReleases}\r\n              selectAlbum={selectAlbum}\r\n              noImage={noImage}\r\n              album={album}\r\n              setShowAlbumList={setShowAlbumList}\r\n              searchTerm={searchTerm}\r\n              searchTracks={searchTracks}\r\n              playlistTracks={playlistTracks}\r\n              setSearchData={setSearchData}\r\n              setAlbumTracks={setAlbumTracks}\r\n              albumTracks={albumTracks}\r\n              chooseTrack={chooseTrack}\r\n              setChooseTrack={setChooseTrack}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <MyTopTracks\r\n              myTopTracks={myTopTracks}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <MyTopArtists\r\n              myTopArtists={myTopArtists}\r\n              noImage={noImage}\r\n              getArtist={getArtist}\r\n            />\r\n            <MyCategories\r\n              musicCategories={musicCategories}\r\n              selectAlbum={selectAlbum}\r\n              selectCategorySublist={selectCategorySublist}\r\n              noImage={noImage}\r\n            />\r\n          </div>\r\n        </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Popover,\r\n  Modal,\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst SearchResults = ({\r\n  searchTerm,\r\n  searchData,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  playButtonPressedCount,\r\n  setPlayButtonPressedCount,\r\n  addToSavedTracks,\r\n  anchorEl,\r\n  setAnchorEl,\r\n  myPlaylist,\r\n  addTracksToMyPlaylist,\r\n  selectPlaylistOpen,\r\n  setSelectPlaylistOpen,\r\n}) => {\r\n  const [selectCurrentTrack, setSelectCurrentTrack] = useState(null);\r\n\r\n  const [selectPlaylist, setSelectPlaylist] = useState(null);\r\n  const [selectedTrack, setSelectedTrack] = useState({});\r\n\r\n  const handleClick = (event, audio) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectCurrentTrack(audio);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelectPlaylistClose = () => {\r\n    setSelectPlaylistOpen(false);\r\n  };\r\n\r\n  console.log(myPlaylist);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <div>\r\n      <div style={{ margin: 2, marginBottom: 20, fontSize: 14 }}>\r\n        <span className=\"text-gray-400\">Showing top 20 results for</span>{\" \"}\r\n        {searchTerm ? `\"${searchTerm}\"` : null}\r\n      </div>\r\n\r\n      {searchData.length !== 0 ? (\r\n        searchData.items ? (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div\r\n                // className={searchData.items.length > 5 ? \"songsBox\" : null}\r\n                style={\r\n                  chooseTrack\r\n                    ? searchData.items.length > 4\r\n                      ? { overflowY: \"scroll\" }\r\n                      : null\r\n                    : searchData.items.length > 4\r\n                    ? { overflowY: \"scroll\" }\r\n                    : null\r\n                }\r\n              >\r\n                <div className=\"align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={searchData.items ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {searchData.items?.map((audio) => (\r\n                        <div\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"0 auto\",\r\n                            width: \"92.6vw\",\r\n                          }}\r\n                          key={audio.track.id}\r\n                        >\r\n                          <li\r\n                            style={\r\n                              audio.track.id === currentSongPlayingId\r\n                                ? {\r\n                                    backgroundColor: \"rgb(210, 210, 210)\",\r\n                                  }\r\n                                : {\r\n                                    backgroundColor: \"white\",\r\n                                  }\r\n                            }\r\n                            className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                          >\r\n                            <div\r\n                              // onClick={() => selectAlbum(audio.track.id)}\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              {audio.track.album.images[0] !== undefined ? (\r\n                                <img\r\n                                  src={audio.track.album.images[0].url}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  src={noImage}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                              style={{ position: \"relative\" }}\r\n                            >\r\n                              <div>\r\n                                <div\r\n                                  className=\"flex justify-between text-gray-900\"\r\n                                  style={{ fontSize: 13 }}\r\n                                >\r\n                                  <p>\r\n                                    {audio.track.name\r\n                                      ? truncateMobile(audio.track.name)\r\n                                      : \"No name\"}{\" \"}\r\n                                  </p>\r\n                                </div>\r\n\r\n                                <div class=\"mt-1 flex items-center text-sm text-gray-500\">\r\n                                  {audio.track.artists.length < 2 ? (\r\n                                    <span style={{ fontSize: 12.5 }}>\r\n                                      {audio.track.artists[0].name\r\n                                        ? audio.track.artists[0].name\r\n                                        : \"No artist name\"}\r\n                                    </span>\r\n                                  ) : (\r\n                                    <>\r\n                                      {audio.track.artists\r\n                                        .filter((artist, index) => index < 3)\r\n                                        .map((artist, index) =>\r\n                                          index >= 2 ? null : (\r\n                                            <span\r\n                                              key={artist.id}\r\n                                              style={\r\n                                                index === 1\r\n                                                  ? {\r\n                                                      fontSize: 12,\r\n                                                      marginLeft: 4,\r\n                                                    }\r\n                                                  : { fontSize: 12 }\r\n                                              }\r\n                                            >\r\n                                              {index === 1\r\n                                                ? truncateArtistNameMobile(\r\n                                                    artist.name\r\n                                                  )\r\n                                                : artist.name}\r\n\r\n                                              {index !== 1 ? \", \" : \"\"}\r\n                                            </span>\r\n                                          )\r\n                                        )}\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                                <div\r\n                                  className=\"text-sm text-gray-900\"\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    display: \"flex\",\r\n                                    position: \"relative\",\r\n                                    justifyContent: \"space-between\",\r\n                                  }}\r\n                                >\r\n                                  {msToTime(audio.track.duration_ms)}\r\n                                  {audio.track.id === currentSongPlayingId ? (\r\n                                    floatingPlayerPlay ? (\r\n                                      <span id=\"bars\">\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                      </span>\r\n                                    ) : null\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                              <div\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  right: 6,\r\n                                  top: 12,\r\n                                }}\r\n                              >\r\n                                {audio.track.id === currentSongPlayingId ? (\r\n                                  floatingPlayerPlay ? (\r\n                                    <IconButton\r\n                                      sx={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? {\r\n                                              backgroundColor:\r\n                                                \"rgb(150, 150, 150)\",\r\n                                            }\r\n                                          : {\r\n                                              backgroundColor:\r\n                                                \"rgb(220, 220, 220)\",\r\n                                            }\r\n                                      }\r\n                                      color=\"inherit\"\r\n                                      onClick={() => {\r\n                                        console.log(\"Pause\");\r\n                                        setFloatingPlayerPlay(false);\r\n                                      }}\r\n                                    >\r\n                                      <PauseIcon />\r\n                                    </IconButton>\r\n                                  ) : (\r\n                                    <IconButton\r\n                                      sx={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? {\r\n                                              backgroundColor:\r\n                                                \"rgb(150, 150, 150)\",\r\n                                            }\r\n                                          : {\r\n                                              backgroundColor:\r\n                                                \"rgb(220, 220, 220)\",\r\n                                            }\r\n                                      }\r\n                                      color=\"inherit\"\r\n                                      onClick={() => {\r\n                                        console.log(\"Play\");\r\n                                        setFloatingPlayerPlay(true);\r\n                                      }}\r\n                                    >\r\n                                      <PlayArrowIcon />\r\n                                    </IconButton>\r\n                                  )\r\n                                ) : (\r\n                                  <IconButton\r\n                                    sx={\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? {\r\n                                            backgroundColor:\r\n                                              \"rgb(150, 150, 150)\",\r\n                                          }\r\n                                        : {\r\n                                            backgroundColor:\r\n                                              \"rgb(220, 220, 220)\",\r\n                                          }\r\n                                    }\r\n                                    color=\"inherit\"\r\n                                    onClick={() => {\r\n                                      setChooseTrack(audio.track);\r\n                                      setCurrentSongPlayingId(audio.track.id);\r\n                                      setPlayButtonPressedCount(\r\n                                        (playButtonPressedCount += 1)\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <PlayArrowIcon />\r\n                                  </IconButton>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div className={searchData.length > 5 ? \"songsBox\" : null}>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={searchData ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {/* {console.log(searchData)} */}\r\n                      {searchData?.map((audio) => (\r\n                        <div\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"0 auto\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          key={audio.id}\r\n                        >\r\n                          <li\r\n                            style={{ alignItems: \"center\" }}\r\n                            className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                          >\r\n                            <div\r\n                              // onClick={() => selectAlbum(audio.track.id)}\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              {audio.album.images[0] !== undefined ? (\r\n                                <img\r\n                                  src={audio.album.images[0].url}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  src={noImage}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                              style={{ position: \"relative\" }}\r\n                            >\r\n                              <div>\r\n                                <div\r\n                                  className={`flex justify-between text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-600`}\r\n                                >\r\n                                  <Typography\r\n                                    style={{\r\n                                      fontSize: 13,\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {audio.name\r\n                                      ? truncateMobile(audio.name)\r\n                                      : \"No name\"}\r\n                                  </Typography>\r\n                                </div>\r\n\r\n                                <div\r\n                                  className={`mt-1 mb-1 flex items-center  text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-400`}\r\n                                >\r\n                                  {audio.artists.length < 2 ? (\r\n                                    <span\r\n                                      style={{ fontSize: 12 }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"\"\r\n                                      }\r\n                                    >\r\n                                      {audio.artists[0].name\r\n                                        ? audio.artists[0].name\r\n                                        : \"No artist name\"}\r\n                                    </span>\r\n                                  ) : (\r\n                                    <>\r\n                                      <span style={{ fontSize: 12 }}>\r\n                                        {audio.artists\r\n                                          .filter((artist, index) => index < 3)\r\n                                          .map((artist, index) =>\r\n                                            index >= 2 ? null : (\r\n                                              <span\r\n                                                key={artist.id}\r\n                                                style={\r\n                                                  index === 1\r\n                                                    ? {\r\n                                                        fontSize: 12,\r\n                                                        marginLeft: 4,\r\n                                                      }\r\n                                                    : { fontSize: 12 }\r\n                                                }\r\n                                              >\r\n                                                {index === 1\r\n                                                  ? truncateArtistNameMobile(\r\n                                                      artist.name\r\n                                                    )\r\n                                                  : artist.name}\r\n\r\n                                                {index !== 1 ? \",\" : \"\"}\r\n                                              </span>\r\n                                            )\r\n                                          )}\r\n                                      </span>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    position: \"relative\",\r\n                                  }}\r\n                                  className={`text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-700`}\r\n                                >\r\n                                  {msToTime(audio.duration_ms)}\r\n                                  <div\r\n                                  // style={{\r\n                                  //   position: \"absolute\",\r\n                                  //   right: 100,\r\n                                  //   top: 12,\r\n                                  // }}\r\n                                  >\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <span id=\"bars\">\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                        </span>\r\n                                      ) : null\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  right: 6,\r\n                                  top: 14,\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div>\r\n                                  {audio.id === currentSongPlayingId ? (\r\n                                    floatingPlayerPlay ? (\r\n                                      <Tooltip placement=\"top\" title=\"Pause\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Pause\");\r\n                                            setFloatingPlayerPlay(false);\r\n                                          }}\r\n                                        >\r\n                                          <PauseIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Play\");\r\n                                            setFloatingPlayerPlay(true);\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          setChooseTrack(audio);\r\n                                          setCurrentSongPlayingId(audio.id);\r\n                                          setPlayButtonPressedCount(\r\n                                            (playButtonPressedCount += 1)\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    marginLeft: 8,\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                  onClick={(event) => {\r\n                                    handleClick(event, audio);\r\n                                  }}\r\n                                >\r\n                                  <Tooltip placement=\"top\" title=\"More\">\r\n                                    <MoreHorizIcon\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"primary\"\r\n                                          : \"action\"\r\n                                      }\r\n                                    />\r\n                                  </Tooltip>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Popover\r\n              id={id}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              onClose={handleClose}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n            >\r\n              {/* <Typography sx={{ p: 1.5, fontSize: 14 }}>\r\n                The content of the Popover.\r\n              </Typography> */}\r\n              <List sx={{ fontSize: 14 }} dense>\r\n                <ListItem disablePadding>\r\n                  <ListItemButton>\r\n                    <ListItemText\r\n                      onClick={() => {\r\n                        addToSavedTracks(selectCurrentTrack);\r\n                      }}\r\n                      primary={\r\n                        <Typography style={{ fontSize: 13 }}>\r\n                          Add to Saved Tracks\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n                <ListItem disablePadding>\r\n                  <ListItemButton component=\"a\" href=\"#simple-list\">\r\n                    <ListItemText\r\n                      onClick={() => {\r\n                        setSelectPlaylistOpen(true);\r\n                        setAnchorEl(null);\r\n                      }}\r\n                      primary={\r\n                        <Typography style={{ fontSize: 13 }}>\r\n                          Add to My Playlist\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              </List>\r\n            </Popover>\r\n            <Modal\r\n              open={selectPlaylistOpen}\r\n              onClose={handleSelectPlaylistClose}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box sx={style}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"text-gray-900\"\r\n                    style={{\r\n                      fontSize: 15,\r\n                      letterSpacing: 1,\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    Select a Playlist\r\n                  </div>\r\n                  <IconButton onClick={handleSelectPlaylistClose} size=\"small\">\r\n                    <ClearIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </div>\r\n\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  // columns={{ xs: 4, sm: 8, md: 12 }}\r\n                  style={{ marginTop: 10, height: 400, overflowY: \"scroll\" }}\r\n                >\r\n                  {myPlaylist?.map((playlist, index) => (\r\n                    <Grid\r\n                      item\r\n                      xs={6}\r\n                      sm={6}\r\n                      md={6}\r\n                      lg={6}\r\n                      xl={6}\r\n                      key={playlist.id}\r\n                    >\r\n                      <Item\r\n                        variant=\"outlined\"\r\n                        style={{ cursor: \"pointer\", position: \"relative\" }}\r\n                        className=\"cardHover\"\r\n                        onClick={() => {\r\n                          setSelectPlaylist(playlist);\r\n                          setSelectedTrack(selectCurrentTrack);\r\n                        }}\r\n                      >\r\n                        <li\r\n                          key={playlist.id}\r\n                          style={{\r\n                            marginRight: 10,\r\n\r\n                            listStyleType: \"none\",\r\n                          }}\r\n                          className=\"py-1 flex-shrink-0 w-28 rounded-md overflow-hidden\"\r\n                        >\r\n                          <div className=\" mr-1 mb-2 flex-shrink-0 h-28 align-center rounded-md overflow-hidden\">\r\n                            {playlist.images[0] !== undefined ? (\r\n                              <img\r\n                                src={playlist.images[0].url}\r\n                                // alt={album.id ? album.images[0].url : noImage}\r\n                                className=\"w-full h-full object-center object-cover\"\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src={noImage}\r\n                                alt={\r\n                                  playlist.id ? playlist.images[0].url : noImage\r\n                                }\r\n                                className=\"w-full h-full object-center object-cover\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </li>\r\n                        <div style={{ fontSize: 13 }} className=\"mt-1\">\r\n                          <div\r\n                            style={{\r\n                              textTransform: \"uppercase\",\r\n                              fontSize: 13,\r\n                            }}\r\n                          >\r\n                            {playlist.name}\r\n                          </div>\r\n\r\n                          {/* <span>\r\n                            {playlist.tracks.total}{\" \"}\r\n                            {playlist.tracks.total > 1 ? \"tracks\" : \"track\"}\r\n                          </span> */}\r\n                        </div>\r\n                      </Item>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <div\r\n                  style={{\r\n                    marginTop: 20,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <button\r\n                    class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      addTracksToMyPlaylist(\r\n                        selectPlaylist.id,\r\n                        selectPlaylist,\r\n                        selectedTrack.uri,\r\n                        selectedTrack.id\r\n                      );\r\n                    }}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </div>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n        )\r\n      ) : (\r\n        // <div\r\n        //   style={{\r\n        //     display: \"flex\",\r\n        //     justifyContent: \"center\",\r\n        //     alignItems: \"center\",\r\n        //     marginTop: 200,\r\n        //   }}\r\n        // >\r\n        //   <CircularProgress size={28} />\r\n        // </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 200,\r\n          }}\r\n        >\r\n          <span>No results found...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport { Hidden, IconButton } from \"@mui/material\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\n\r\nfunction msToTime(duration) {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n}\r\n\r\nconst FloatingPlayer = ({\r\n  accessToken,\r\n  searchTerm,\r\n  searchData,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setPlayerDetails,\r\n  pauseSong,\r\n  playButtonPressedCount,\r\n  setPlayButtonPressedCount,\r\n  albumTracks,\r\n}) => {\r\n  if (!accessToken) return null;\r\n  console.log(albumTracks);\r\n\r\n  let obj =\r\n    albumTracks.items && albumTracks.items.length >= 0\r\n      ? albumTracks.items.findIndex((item) => item.track.id === chooseTrack.id)\r\n      : albumTracks &&\r\n        albumTracks.findIndex((item) => item.id === chooseTrack.id);\r\n\r\n  console.log(obj);\r\n\r\n  const disableNextButton =\r\n    albumTracks.items && albumTracks.items.length > 0\r\n      ? albumTracks.items.length > 0 &&\r\n        albumTracks.items.some(\r\n          (track) => track.track.id === currentSongPlayingId\r\n        )\r\n      : albumTracks.length > 0 &&\r\n        albumTracks.some((track) => track.id === currentSongPlayingId);\r\n\r\n  console.log(disableNextButton);\r\n\r\n  const next = () => {\r\n    if (playButtonPressedCount !== 1) {\r\n      obj += 1;\r\n    }\r\n    console.log(albumTracks, obj);\r\n    setPlayButtonPressedCount((playButtonPressedCount += 1));\r\n    if (albumTracks !== null && albumTracks.length > 0) {\r\n      setChooseTrack(albumTracks[obj]);\r\n      setCurrentSongPlayingId(albumTracks[obj].id);\r\n    } else {\r\n      setChooseTrack(albumTracks.items[obj].track);\r\n      setCurrentSongPlayingId(albumTracks.items[obj].track.id);\r\n    }\r\n\r\n    console.log(obj);\r\n  };\r\n\r\n  const prev = () => {\r\n    obj -= 1;\r\n    if (albumTracks.length > 0) {\r\n      setChooseTrack(albumTracks[obj]);\r\n      setCurrentSongPlayingId(albumTracks[obj].id);\r\n    } else {\r\n      setChooseTrack(albumTracks.items[obj].track);\r\n      setCurrentSongPlayingId(albumTracks.items[obj].track.id);\r\n    }\r\n\r\n    console.log(obj);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"floatingPlayer bg-white shadow overflow-hidden sm:rounded-lg \"\r\n        style={{\r\n          marginTop: 12,\r\n          borderColor: \"black\",\r\n          borderRadius: 6,\r\n          paddingBottom: 10,\r\n        }}\r\n      >\r\n        <div className=\"text-gray-500 dark:text-gray-600 flex justify-between text-sm font-medium tabular-nums\">\r\n          <div style={{ fontSize: 13 }}>00:00</div>\r\n          <div style={{ fontSize: 13 }}>\r\n            {msToTime(chooseTrack.duration_ms)}\r\n          </div>\r\n        </div>\r\n        <audio id=\"audio\"></audio>\r\n        <div className=\"flex \" style={{ position: \"relative\" }}>\r\n          <SpotifyPlayer\r\n            className=\"relative\"\r\n            id=\"spotifyPlayer\"\r\n            name=\"Spotify Web Player\"\r\n            token={accessToken}\r\n            // showSaveIcon={true}\r\n            callback={(state) => {\r\n              ontimeupdate = () => console.log(\"lol\");\r\n              console.log(state);\r\n\r\n              if (!state.isPlaying) {\r\n                setFloatingPlayerPlay(false);\r\n                setCurrentSongPlayingId(chooseTrack.id);\r\n                setPlayerDetails(state);\r\n                if (searchTerm !== \"\") {\r\n                  pauseSong();\r\n                } else if (\r\n                  albumTracks.items?.length > 0\r\n                    ? albumTracks.items?.length > 0 &&\r\n                      obj === albumTracks.items.length - 1\r\n                    : albumTracks.length > 0 && obj === albumTracks.length - 1\r\n                ) {\r\n                  pauseSong();\r\n                } else {\r\n                  if (\r\n                    albumTracks.items?.length > 0\r\n                      ? state.progressMs === 0 &&\r\n                        albumTracks.items.length > 0 &&\r\n                        albumTracks.items.find(\r\n                          (track) => track.track.id === currentSongPlayingId\r\n                        )\r\n                      : state.progressMs === 0 &&\r\n                        albumTracks.length > 0 &&\r\n                        albumTracks.find(\r\n                          (track) => track.id === currentSongPlayingId\r\n                        )\r\n                  ) {\r\n                    next();\r\n                    setFloatingPlayerPlay(true);\r\n                  }\r\n                }\r\n              } else {\r\n                setFloatingPlayerPlay(true);\r\n                setCurrentSongPlayingId(chooseTrack.id);\r\n                setPlayerDetails(state);\r\n              }\r\n            }}\r\n            styles={{\r\n              sliderColor: \"rgb(160, 160, 160)\",\r\n              sliderTrackBorderRadius: 25,\r\n              // sliderHandleColor: \"#005168\",\r\n              color: \"rgb(80, 80, 80)\",\r\n              fontSize: 13,\r\n            }}\r\n            autoPlay={true}\r\n            play={floatingPlayerPlay}\r\n            uris={chooseTrack.uri ? [chooseTrack.uri] : []}\r\n          />\r\n          {chooseTrack ? (\r\n            <div\r\n            // style={{\r\n            //   position: \"absolute\",\r\n            //   bottom: 6,\r\n            //   left: \"50%\",\r\n            //   marginLeft: -80,\r\n            // }}\r\n            >\r\n              <div\r\n              // style={{\r\n              //   display: \"flex\",\r\n              //   width: 160,\r\n              //   justifyContent: \"space-between\",\r\n              // }}\r\n              >\r\n                <IconButton\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: 6,\r\n                    left: \"50%\",\r\n                    marginLeft: -90,\r\n                  }}\r\n                  disabled={obj <= 0 || searchData.length > 0 ? true : false}\r\n                  onClick={prev}\r\n                  color=\"inherit\"\r\n                >\r\n                  <SkipPreviousIcon />\r\n                </IconButton>\r\n                {albumTracks.length > 0 ? (\r\n                  <IconButton\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 6,\r\n                      left: \"50%\",\r\n                      marginLeft: 50,\r\n                    }}\r\n                    color=\"inherit\"\r\n                    disabled={\r\n                      obj >= albumTracks.length - 1 ||\r\n                      disableNextButton === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 6,\r\n                      left: \"50%\",\r\n                      marginLeft: 50,\r\n                    }}\r\n                    color=\"inherit\"\r\n                    disabled={\r\n                      (albumTracks.items &&\r\n                        obj >= albumTracks.items.length - 1) ||\r\n                      disableNextButton === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div\r\n          className=\"floatingPlayer bg-white shadow overflow-hidden sm:rounded-lg mb-3\"\r\n          style={{\r\n            borderColor: \"black\",\r\n            borderRadius: 6,\r\n            color: \"rgb(210, 210, 210)\",\r\n          }}\r\n        >\r\n          <div className=\"text-gray-500 dark:text-gray-400 flex justify-between text-sm font-medium tabular-nums\">\r\n            <div style={{ fontSize: 13 }}>00:00</div>\r\n            <div style={{ fontSize: 13 }}>\r\n              {msToTime(chooseTrack.duration_ms)}\r\n            </div>\r\n          </div>\r\n          <audio id=\"audio\"></audio>\r\n          <div className=\"flex justify-between\">\r\n            <SpotifyPlayer\r\n              id=\"spotifyPlayer\"\r\n              name=\"Spotify Web Player\"\r\n              token={accessToken}\r\n              callback={(state) => {\r\n                console.log(state);\r\n                setSongProgress(state.progressMs);\r\n\r\n                if (!state.isPlaying) {\r\n                  setFloatingPlayerPlay(false);\r\n                  setCurrentSongPlayingId(chooseTrack.id);\r\n                  setPlayerDetails(state);\r\n\r\n                  if (searchData.items && obj === searchData.items.length - 1) {\r\n                    pauseSong();\r\n                  } else if (searchData && obj === searchData.length - 1) {\r\n                    pauseSong();\r\n                  } else if (\r\n                    albumTracks.length > 0 &&\r\n                    obj === albumTracks.length - 1\r\n                  ) {\r\n                    pauseSong();\r\n                  } else {\r\n                    if (state.progressMs === 0) {\r\n                      next();\r\n                      setFloatingPlayerPlay(true);\r\n                    }\r\n                  }\r\n                } else {\r\n                  setFloatingPlayerPlay(true);\r\n                  setCurrentSongPlayingId(chooseTrack.id);\r\n                  setPlayerDetails(state);\r\n                }\r\n              }}\r\n              styles={{\r\n                sliderColor: \"#80e2fd\",\r\n                sliderTrackBorderRadius: 25,\r\n                sliderHandleColor: \"#005168\",\r\n                color: \"rgb(80, 80, 80)\",\r\n                fontSize: 13,\r\n              }}\r\n              autoPlay={true}\r\n              play={floatingPlayerPlay}\r\n              uris={chooseTrack.uri ? [chooseTrack.uri] : []}\r\n            />\r\n            {chooseTrack ? (\r\n              <div>\r\n                <IconButton\r\n                  style={{ position: \"absolute\", bottom: 22, left: 90 }}\r\n                  disabled={obj <= 0 ? true : false}\r\n                  onClick={prev}\r\n                  color=\"default\"\r\n                >\r\n                  <SkipPreviousIcon />\r\n                </IconButton>\r\n                {searchData.items ? (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= searchData.items.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : albumTracks.length > 0 ? (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= albumTracks.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= searchData.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FloatingPlayer;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport { IconButton, CircularProgress } from \"@mui/material\";\r\n\r\nimport AlbumTracks from \"../AlbumTitle/AlbumTracks/AlbumTracks\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 18) + \"...\" : str;\r\n};\r\n\r\nconst CategoryPlaylist = ({\r\n  categorySublist,\r\n  album,\r\n  selectCategoryPlaylist,\r\n  categorySublistTitle,\r\n  setChooseTrack,\r\n  albumTracks,\r\n  chooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  isLoading,\r\n  playButtonPressedCount,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const categoryListLi = useRef();\r\n  console.log(album);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    categoryListLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return categorySublist ? (\r\n    <>\r\n      {categorySublist.length > 0 && categorySublistTitle.id ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              marginTop: 30,\r\n              marginBottom: 16,\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <p\r\n              className=\"text-gray-500\"\r\n              style={{\r\n                fontSize: 14,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 2,\r\n              }}\r\n            >\r\n              {categorySublistTitle.name}\r\n            </p>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <IconButton onClick={() => scroll(-360)}>\r\n                <ArrowLeftIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => scroll(360)}>\r\n                <ArrowRightIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <ul\r\n            className=\"sidebar\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n            ref={categoryListLi}\r\n          >\r\n            {categorySublist?.map((playlist) => (\r\n              <div key={playlist.id}>\r\n                <div\r\n                  variant=\"outlined\"\r\n                  style={\r\n                    album.id === playlist.id\r\n                      ? {\r\n                          cursor: \"pointer\",\r\n                          position: \"relative\",\r\n                          marginRight: 20,\r\n                          borderRadius: 6,\r\n                          backgroundColor: \"rgb(230, 230, 230)\",\r\n                        }\r\n                      : {\r\n                          cursor: \"pointer\",\r\n                          position: \"relative\",\r\n                          borderRadius: 6,\r\n                          marginRight: 20,\r\n                        }\r\n                  }\r\n                  className=\"cardHover\"\r\n                  onClick={() => selectCategoryPlaylist(playlist)}\r\n                >\r\n                  <li\r\n                    key={playlist.id}\r\n                    style={{\r\n                      marginRight: 0,\r\n                      alignItems: \"center\",\r\n                      listStyleType: \"none\",\r\n                      padding: 10,\r\n                    }}\r\n                    className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden border border-gray-200\"\r\n                  >\r\n                    <div className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-36 h-36  rounded-md overflow-hidden\">\r\n                      <img\r\n                        src={playlist.images[0].url}\r\n                        // alt={album.id ? album.images[0].url : noImage}\r\n                        className=\"w-full h-full object-center object-cover\"\r\n                      />\r\n\r\n                      {/* <p\r\n                        style={{ position: \"absolute\", right: 16, bottom: 70 }}\r\n                      >\r\n                        {song.track.popularity}\r\n                      </p> */}\r\n                    </div>\r\n\r\n                    <div className=\"ml-1 flex-1 flex flex-col mr-2\">\r\n                      <div>\r\n                        <div\r\n                          className=\"flex justify-between text-gray-900\"\r\n                          style={{\r\n                            fontSize: 13.5,\r\n                            alignItems: \"center\",\r\n                            textTransform: \"capitalize\",\r\n                          }}\r\n                        >\r\n                          <p>{`${truncate(playlist.name)}`}</p>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{ fontSize: 12.6 }}\r\n                          className=\"mt-1 flex items-center text-gray-400\"\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                              fontSize: 12.6,\r\n                            }}\r\n                          >\r\n                            {playlist.type}\r\n                          </div>\r\n                          <div\r\n                            class=\"text-base font-normal mx-1\"\r\n                            style={{ fontSize: 40 }}\r\n                          >\r\n                            ·\r\n                          </div>\r\n\r\n                          <span>\r\n                            {playlist.tracks.total}{\" \"}\r\n                            {playlist.tracks.total > 1 ? \"tracks\" : \"track\"}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n\r\n          <div className=\"mt-6\">\r\n            {!isLoading ? (\r\n              <div>\r\n                {album.id ? (\r\n                  <div className=\"text-gray-500 text-sm mb-4\">\r\n                    <span\r\n                      style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: 13.6,\r\n                        letterSpacing: 1,\r\n                        color: \"black\",\r\n                      }}\r\n                    >\r\n                      {album.name}\r\n                    </span>{\" \"}\r\n                    ({album.tracks.total} tracks)\r\n                  </div>\r\n                ) : null}\r\n                <AlbumTracks\r\n                  albumTracks={albumTracks}\r\n                  chooseTrack={chooseTrack}\r\n                  setChooseTrack={setChooseTrack}\r\n                  currentSongPlayingId={currentSongPlayingId}\r\n                  floatingPlayerPlay={floatingPlayerPlay}\r\n                  setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                  setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                  setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                  playButtonPressedCount={playButtonPressedCount}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginTop: 70,\r\n                  marginBottom: 100,\r\n                }}\r\n              >\r\n                <CircularProgress size={28} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default CategoryPlaylist;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 36 ? str.substr(0, 40) + \"...\" : str;\r\n};\r\n\r\nconst RelatedArtists = ({\r\n  relatedArtists,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n}) => {\r\n  const artistLi = useRef();\r\n  // console.log(artistLi.current.scrollLeft);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return relatedArtists.length > 0 ? (\r\n    <div className=\"\">\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 0,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          RELATED ARTISTS ({relatedArtists.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        ref={artistLi}\r\n        className=\"sidebar\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {relatedArtists?.map((artist) => (\r\n          <li\r\n            key={artist.id}\r\n            onClick={() => {\r\n              getArtist(artist.id);\r\n              getArtistRelatedArtists(artist.id);\r\n            }}\r\n            style={{ marginRight: 20, alignItems: \"center\" }}\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              {artist.images[0] !== undefined ? (\r\n                <img\r\n                  src={artist.images[0].url}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={noImage}\r\n                  // alt={artist.id ? artist.images[0].url : noImage}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(artist.name)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RelatedArtists;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, CircularProgress } from \"@mui/material\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport ThumbUpAltIcon from \"@mui/icons-material/ThumbUpAlt\";\r\n\r\nimport AlbumTracks from \"../AlbumTitle/AlbumTracks/AlbumTracks\";\r\nimport RelatedArtists from \"./RelatedArtists/RelatedArtists\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 36 ? str.substr(0, 40) + \"...\" : str;\r\n};\r\n\r\nfunction intlFormat(num) {\r\n  return new Intl.NumberFormat().format(Math.round(num * 10) / 10);\r\n}\r\n\r\nfunction formatFollowersCount(num) {\r\n  if (num >= 1000000) return intlFormat(num / 1000000) + \"M\";\r\n  if (num >= 1000) return intlFormat(num / 1000) + \"k\";\r\n  return intlFormat(num);\r\n}\r\n\r\nconst ArtistDetails = ({\r\n  floatingPlayerPlay,\r\n  artistDetails,\r\n  getArtist,\r\n  albumTracks,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  isLoading,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  relatedArtists,\r\n  getArtistRelatedArtists,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(albumTracks);\r\n\r\n  return artistDetails.id ? (\r\n    <>\r\n      {!isLoading ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"6%\",\r\n              paddingBottom: \"2%\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    padding: \"0 22%\",\r\n                    width: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n                    height: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                  src={\r\n                    artistDetails.images ? artistDetails.images[0].url : null\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <Box\r\n                  className=\"px-4 pt-4 mt-4 \"\r\n                  sx={{\r\n                    background: \"white\",\r\n                    borderColor: \"rgb(220, 220, 220)\",\r\n                    borderWidth: 1,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    color: \"white\",\r\n                    paddingBottom: 2,\r\n                    borderRadius: 2,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      fontSize: 24,\r\n                      fontWeight: \"bold\",\r\n                      textTransform: \"\",\r\n                      letterSpacing: 2,\r\n                      color: \"grey\",\r\n                    }}\r\n                  >\r\n                    {artistDetails.name ? truncate(artistDetails.name) : null}\r\n                  </div>\r\n                  <div className=\"flex\" style={{ margin: \"8px 0\" }}>\r\n                    {artistDetails.genres?.map((genre, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"flex items-center text-gray-400\"\r\n                      >\r\n                        {index <= 2 ? (\r\n                          <>\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"capitalize\",\r\n                                fontSize: 12,\r\n                              }}\r\n                            >\r\n                              {genre}\r\n                            </span>\r\n\r\n                            {index !== artistDetails.genres.length - 1 ? (\r\n                              index === 2 ? null : (\r\n                                <span\r\n                                  class=\"text-base font-normal mx-1\"\r\n                                  style={{ fontSize: 30 }}\r\n                                >\r\n                                  ·\r\n                                </span>\r\n                              )\r\n                            ) : null}\r\n                          </>\r\n                        ) : null}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      color: \"black\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <PeopleAltIcon fontSize=\"small\" />{\" \"}\r\n                      <span style={{ fontSize: 13, marginLeft: 4 }}>\r\n                        {formatFollowersCount(artistDetails.followers.total)}{\" \"}\r\n                        followers\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <ThumbUpAltIcon fontSize=\"small\" />\r\n                      <span style={{ fontSize: 13, marginLeft: 6 }}>\r\n                        {artistDetails.popularity}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-6\">\r\n              <AlbumTracks\r\n                albumTracks={albumTracks}\r\n                chooseTrack={chooseTrack}\r\n                setChooseTrack={setChooseTrack}\r\n                currentSongPlayingId={currentSongPlayingId}\r\n                floatingPlayerPlay={floatingPlayerPlay}\r\n                setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                playButtonPressedCount={playButtonPressedCount}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: 20, flex: 1, width: \"100%\" }}>\r\n            <RelatedArtists\r\n              relatedArtists={relatedArtists}\r\n              getArtist={getArtist}\r\n              getArtistRelatedArtists={getArtistRelatedArtists}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={30} />\r\n        </div>\r\n      )}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default ArtistDetails;\r\n","import React from \"react\";\r\nimport MyTopArtists from \"../Home/MyTopArtists/MyTopArtists\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst Artists = ({\r\n  myTopArtists,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n  width,\r\n  artistDetails,\r\n}) => {\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <MyTopArtists\r\n        myTopArtists={myTopArtists}\r\n        width={width}\r\n        noImage={noImage}\r\n        getArtist={getArtist}\r\n        getArtistRelatedArtists={getArtistRelatedArtists}\r\n        artistDetails={artistDetails}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artists;\r\n","import { Hidden, IconButton, Paper, Tooltip } from \"@mui/material\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Typography,\r\n  CardMedia,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst RecentlyPlayed = ({\r\n  recentlyPlayedSongs,\r\n  filteredRecentlyPlayedSongs,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  recentSongsWidth,\r\n}) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"fixed\", right: 20 }}>\r\n        <div style={{ margin: 12, marginTop: 60, marginBottom: 10 }}>\r\n          <p\r\n            className=\"text-gray-900\"\r\n            style={{\r\n              fontSize: 13,\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            RECENTLY PLAYED ({recentlyPlayedSongs.length})\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <div className=\" align-middle\">\r\n            <ul role=\"list\" style={{ width: recentSongsWidth }}>\r\n              {recentlyPlayedSongs &&\r\n                filteredRecentlyPlayedSongs?.map((audio) => (\r\n                  <div className=\"w-full \" key={audio.track.id}>\r\n                    <li className=\"py-3 flex  rounded-md overflow-hidden\">\r\n                      <div className=\"ml-3\">\r\n                        {audio.track.id === currentSongPlayingId ? (\r\n                          floatingPlayerPlay ? (\r\n                            <Tooltip placement=\"top\" title=\"Pause\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  audio.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Pause\");\r\n                                  setFloatingPlayerPlay(false);\r\n                                }}\r\n                              >\r\n                                <PauseIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip placement=\"top\" title=\"Play\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  audio.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Play\");\r\n                                  setFloatingPlayerPlay(true);\r\n                                }}\r\n                              >\r\n                                <PlayArrowIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          )\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(240, 240, 240)\",\r\n                              }}\r\n                              color={\r\n                                audio.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                setChooseTrack(audio.track);\r\n                                setCurrentSongPlayingId(audio.track.id);\r\n                                setPlayButtonPressedCount(\r\n                                  (playButtonPressedCount += 1)\r\n                                );\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                        style={{ position: \"relative\" }}\r\n                      >\r\n                        <div>\r\n                          <div\r\n                            className={`flex justify-between text-${\r\n                              audio.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-900`}\r\n                            style={{\r\n                              fontSize: 13.6,\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            <p>\r\n                              {audio.track.name\r\n                                ? truncateMobile(audio.track.name)\r\n                                : \"No name\"}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div\r\n                            className={`flex items-center text-sm text-${\r\n                              audio.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-400`}\r\n                          >\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {audio.track.artists.length < 2 ? (\r\n                                <span style={{ fontSize: 12 }}>\r\n                                  {audio.track.artists[0].name\r\n                                    ? audio.track.artists[0].name\r\n                                    : \"No artist name\"}\r\n                                </span>\r\n                              ) : (\r\n                                <>\r\n                                  {audio.track.artists\r\n                                    .filter((artist, index) => index < 3)\r\n                                    .map((artist, index) =>\r\n                                      index >= 2 ? null : (\r\n                                        <span\r\n                                          key={artist.id}\r\n                                          style={\r\n                                            index === 1\r\n                                              ? {\r\n                                                  fontSize: 12,\r\n                                                  marginLeft: 4,\r\n                                                }\r\n                                              : { fontSize: 12 }\r\n                                          }\r\n                                        >\r\n                                          {index === 1\r\n                                            ? truncateArtistNameMobile(\r\n                                                artist.name\r\n                                              )\r\n                                            : artist.name}\r\n\r\n                                          {index !== 1 ? \",\" : \"\"}\r\n                                        </span>\r\n                                      )\r\n                                    )}\r\n                                </>\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n\r\n                          {/* <div\r\n                            className=\"text-sm text-gray-900\"\r\n                            style={{\r\n                              fontSize: 12,\r\n                              display: \"flex\",\r\n                              position: \"relative\",\r\n                              marginTop: 6,\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                          >\r\n                            {audio.track.id === currentSongPlayingId ? (\r\n                              floatingPlayerPlay ? (\r\n                                <span id=\"bars\">\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                </span>\r\n                              ) : null\r\n                            ) : null}\r\n                          </div> */}\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            right: 6,\r\n                            fontSize: 12.6,\r\n                            top: 18,\r\n                          }}\r\n                          className={`text-${\r\n                            audio.track.id === currentSongPlayingId\r\n                              ? \"blue\"\r\n                              : \"gray\"\r\n                          }-900`}\r\n                        >\r\n                          {msToTime(audio.track.duration_ms)}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </div>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  Fab,\r\n  Tooltip,\r\n  Modal,\r\n  Box,\r\n  InputBase,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 3,\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst MySavedTracks = ({\r\n  createPlaylistSearchTerm,\r\n  setCreatePlaylistSearchTerm,\r\n  createPlaylistSearchData,\r\n  addToSavedTracks,\r\n  mySavedTracks,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  removeTrackFromSavedTracks,\r\n}) => {\r\n  const [selectTracksOpen, setSelectTracksOpen] = useState(false);\r\n  const handleSelectTracksClose = () => setSelectTracksOpen(false);\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    // borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    // marginLeft: 0,\r\n    width: \"auto\",\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   marginLeft: theme.spacing(1),\r\n    //   width: \"auto\",\r\n    // },\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(mySavedTracks);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY SAVED TRACKS ({mySavedTracks.length})\r\n        </p>\r\n        <Tooltip placement=\"top\" title=\"Add Tracks\">\r\n          <Fab\r\n            color=\"inherit\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            style={{ marginRight: 8 }}\r\n            onClick={setSelectTracksOpen}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </div>\r\n      {/* {console.log(myTopTracks)} */}\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        // columns={{ xs: 4, sm: 8, md: 12 }}\r\n      >\r\n        {mySavedTracks?.map((savedTrack, index) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={4}\r\n            xl={3}\r\n            key={savedTrack.track.id}\r\n          >\r\n            <Item\r\n              variant=\"outlined\"\r\n              style={{ cursor: \"pointer\", position: \"relative\" }}\r\n              className=\"cardHover\"\r\n            >\r\n              {console.log(savedTrack)}\r\n              <li\r\n                key={savedTrack.track.id}\r\n                style={{\r\n                  marginRight: 10,\r\n                  alignItems: \"center\",\r\n                  listStyleType: \"none\",\r\n                }}\r\n                className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden\"\r\n              >\r\n                <div className=\"ml-1 mr-1 mb-2 flex-shrink-0   rounded-md overflow-hidden\">\r\n                  {savedTrack.track.album.images[0] !== undefined ? (\r\n                    <img\r\n                      src={savedTrack.track.album.images[0].url}\r\n                      // alt={album.id ? album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={noImage}\r\n                      alt={\r\n                        savedTrack.track.album.id\r\n                          ? savedTrack.track.album.images[0].url\r\n                          : noImage\r\n                      }\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  )}\r\n                  {floatingPlayerPlay &&\r\n                  savedTrack.track.id === currentSongPlayingId ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 1,\r\n                        left: 14,\r\n                        // backgroundColor: \"white\",\r\n                        padding: 17,\r\n                        paddingRight: 19,\r\n                        borderTopRightRadius: 10,\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: 6,\r\n                          bottom: 8,\r\n                        }}\r\n                      >\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                      </span>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      bottom: 10,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      {savedTrack.track.id === currentSongPlayingId ? (\r\n                        floatingPlayerPlay ? (\r\n                          <Tooltip placement=\"top\" title=\"Pause\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(220, 220, 220)\",\r\n                              }}\r\n                              color={\r\n                                savedTrack.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                console.log(\"Pause\");\r\n                                setFloatingPlayerPlay(false);\r\n                              }}\r\n                            >\r\n                              <PauseIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(220, 220, 220)\",\r\n                              }}\r\n                              color={\r\n                                savedTrack.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                console.log(\"Play\");\r\n                                setFloatingPlayerPlay(true);\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )\r\n                      ) : (\r\n                        <Tooltip placement=\"top\" title=\"Play\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              savedTrack.track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              setChooseTrack(savedTrack.track);\r\n                              setCurrentSongPlayingId(savedTrack.track.id);\r\n                              setPlayButtonPressedCount(\r\n                                (playButtonPressedCount += 1)\r\n                              );\r\n                            }}\r\n                          >\r\n                            <PlayArrowIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        marginLeft: 14,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() =>\r\n                        removeTrackFromSavedTracks(savedTrack.track.id)\r\n                      }\r\n                    >\r\n                      <Tooltip placement=\"top\" title=\"Remove\">\r\n                        <RemoveCircleOutlineIcon\r\n                          color={\r\n                            savedTrack.track.id === currentSongPlayingId\r\n                              ? \"primary\"\r\n                              : \"action\"\r\n                          }\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p\r\n                    className={`flex justify-between text-${\r\n                      savedTrack.track.id === currentSongPlayingId\r\n                        ? \"blue\"\r\n                        : \"gray\"\r\n                    }-600`}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 16,\r\n                      bottom: 52,\r\n                      fontSize: 13,\r\n                    }}\r\n                  >\r\n                    {savedTrack.track.popularity}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"ml-1 mt-2 mb-2 flex-1 flex flex-col mr-2\">\r\n                  <div>\r\n                    <div\r\n                      className={`flex justify-between text-${\r\n                        savedTrack.track.id === currentSongPlayingId\r\n                          ? \"blue\"\r\n                          : \"gray\"\r\n                      }-600`}\r\n                      style={{ fontSize: 13, alignItems: \"center\" }}\r\n                    >\r\n                      <p>{`${truncate(savedTrack.track.name)}`}</p>\r\n                    </div>\r\n\r\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\r\n                      <p\r\n                        className={`text-sm text-${\r\n                          savedTrack.track.id === currentSongPlayingId\r\n                            ? \"blue\"\r\n                            : \"gray\"\r\n                        }-400`}\r\n                        style={{ fontSize: 12 }}\r\n                      >\r\n                        {savedTrack.track.album.artists[0].name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* <div\r\n                      style={{ fontSize: 12.6 }}\r\n                      className=\"mt-1 flex items-center\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: 12.6,\r\n                        }}\r\n                      >\r\n                        {track.album.album_type}\r\n                      </div>\r\n                      <div\r\n                        class=\"text-base font-normal mx-1\"\r\n                        style={{ fontSize: 40 }}\r\n                      >\r\n                        ·\r\n                      </div>\r\n\r\n                      <span>\r\n                        {track.album.total_tracks}{\" \"}\r\n                        {track.album.total_tracks > 1 ? \"tracks\" : \"track\"}\r\n                      </span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Modal\r\n        open={selectTracksOpen}\r\n        onClose={handleSelectTracksClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 15,\r\n                letterSpacing: 1,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Add Tracks\r\n            </div>\r\n            <IconButton onClick={handleSelectTracksClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div style={{ position: \"relative\", marginTop: 20 }}>\r\n            <SearchIconWrapper>\r\n              <SearchIcon color=\"primary\" />\r\n            </SearchIconWrapper>\r\n            <input\r\n              className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n              type=\"text\"\r\n              placeholder=\"Search for tracks to add..\"\r\n              style={{ width: \"100%\", fontSize: 15 }}\r\n              value={createPlaylistSearchTerm}\r\n              onChange={(e) => {\r\n                setCreatePlaylistSearchTerm(e.target.value);\r\n              }}\r\n            />\r\n            {createPlaylistSearchTerm ? (\r\n              <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                <IconButton\r\n                  onClick={() => setCreatePlaylistSearchTerm(\"\")}\r\n                  size=\"small\"\r\n                >\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n\r\n          {createPlaylistSearchData.length > 0 ? (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"body2\"\r\n                component=\"h2\"\r\n                style={{ letterSpacing: 1 }}\r\n              >\r\n                Search results\r\n              </Typography>\r\n            </div>\r\n          ) : null}\r\n          <div style={{ marginTop: 20 }}>\r\n            <div className=\"flex flex-col mt-2 mb-2\">\r\n              <div>\r\n                <div>\r\n                  <div className=\" align-middle \">\r\n                    <div>\r\n                      <ul\r\n                        className={\r\n                          createPlaylistSearchData.length > 0\r\n                            ? \"createPlaylistSongsBox\"\r\n                            : null\r\n                        }\r\n                        role=\"list\"\r\n                      >\r\n                        {createPlaylistSearchData?.map((audio) => (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.album.images[0].url}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.name\r\n                                        ? truncateMobile(audio.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.artists[0].name\r\n                                          ? audio.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      position: \"relative\",\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                    <div>\r\n                                      {audio.id === currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <span id=\"bars\">\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                          </span>\r\n                                        ) : null\r\n                                      ) : null}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 0,\r\n                                    top: 14,\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Pause\");\r\n                                              setFloatingPlayerPlay(false);\r\n                                            }}\r\n                                          >\r\n                                            <PauseIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      ) : (\r\n                                        <Tooltip placement=\"top\" title=\"Play\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Play\");\r\n                                              setFloatingPlayerPlay(true);\r\n                                            }}\r\n                                          >\r\n                                            <PlayArrowIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      )\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            setChooseTrack(audio);\r\n                                            setCurrentSongPlayingId(audio.id);\r\n                                            setPlayButtonPressedCount(\r\n                                              (playButtonPressedCount += 1)\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      marginLeft: 14,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => addToSavedTracks(audio)}\r\n                                  >\r\n                                    <Tooltip placement=\"top\" title=\"Add\">\r\n                                      <AddCircleOutlinedIcon\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"action\"\r\n                                        }\r\n                                      />\r\n                                    </Tooltip>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ marginTop: 20, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              onClick={handleSelectTracksClose}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySavedTracks;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Modal,\r\n  Box,\r\n  InputBase,\r\n  Fab,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 3,\r\n};\r\n\r\nconst MyPlaylist = ({\r\n  createPlaylistSearchTerm,\r\n  setCreatePlaylistSearchTerm,\r\n  createPlaylistSearchData,\r\n  myPlaylist,\r\n  myPlaylistTitle,\r\n  selectMyPlaylist,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  addTracksToMyPlaylist,\r\n  removeTracksFromMyPlaylist,\r\n  createPlaylist,\r\n  albumTracks,\r\n  isLoading,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectTracksOpen, setSelectTracksOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [displayImage, setDisplayImage] = useState(null);\r\n  const [base64Uri, setBase64Uri] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleSelectTracksClose = () => setSelectTracksOpen(false);\r\n\r\n  const artistLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  console.log(myPlaylistTitle);\r\n\r\n  const onImageSelect = (e) => {\r\n    if (e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        console.log(\"Reader result\", reader.result);\r\n        setBase64Uri(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      console.log(reader);\r\n      setDisplayImage(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    width: \"auto\",\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  console.log(myPlaylist);\r\n  console.log(albumTracks);\r\n\r\n  return albumTracks !== null ? (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY PLAYLISTS ({myPlaylist.length})\r\n        </p>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <ul\r\n          role=\"list\"\r\n          ref={artistLi}\r\n          className=\"sidebar\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            overflowX: \"scroll\",\r\n            transition: \"0.3s\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Tooltip placement=\"top\" title=\"Create a Playlist\">\r\n            <li\r\n              style={{ marginRight: 10, alignItems: \"center\" }}\r\n              className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden \"\r\n            >\r\n              <div\r\n                onClick={handleOpen}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  padding: 6,\r\n                  borderRadius: 20,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                className=\"ml-1 mr-1 flex-shrink-0 w-24 h-24 border border-gray-200 rounded-md overflow-hidden cardHover\"\r\n              >\r\n                <AddIcon fontSize=\"large\" color=\"primary\" />\r\n              </div>\r\n            </li>\r\n          </Tooltip>\r\n          {myPlaylist?.map((playlist) => (\r\n            <li\r\n              key={playlist.id}\r\n              onClick={() => selectMyPlaylist(playlist)}\r\n              style={\r\n                myPlaylistTitle.id === playlist.id\r\n                  ? {\r\n                      marginRight: 10,\r\n                      cursor: \"pointer\",\r\n                      alignItems: \"center\",\r\n                      backgroundColor: \"rgb(240, 240, 240)\",\r\n                    }\r\n                  : { marginRight: 10, cursor: \"pointer\", alignItems: \"center\" }\r\n              }\r\n              className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover \"\r\n            >\r\n              <div\r\n                style={{\r\n                  padding: 6,\r\n                  borderRadius: 20,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-32 h-32 border border-gray-200 rounded-md overflow-hidden cardHover\"\r\n              >\r\n                {playlist.images[0] !== undefined ? (\r\n                  <img\r\n                    src={playlist.images[0].url}\r\n                    className=\"w-full h-full object-center object-cover\"\r\n                    style={{\r\n                      borderRadius: 16,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={noImage}\r\n                    // alt={playlist.id ? playlist.images[0].url : noImage}\r\n                    className=\"w-full h-full object-center object-cover\"\r\n                    style={{ borderRadius: 100 }}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n                <div>\r\n                  <div\r\n                    className=\"flex justify-between text-gray-900\"\r\n                    style={{\r\n                      fontSize: 13.6,\r\n                      justifyContent: \"center\",\r\n                      textTransform: \"uppercase\",\r\n                      letterSpacing: 1,\r\n                      marginBottom: 10,\r\n                    }}\r\n                  >\r\n                    <p>{truncate(playlist.name)}</p>\r\n                    {/* <p style={{ fontSize: 13 }}>{artist.popularity}</p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {console.log(myPlaylistTitle)}\r\n\r\n      {!isLoading ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n            className=\"mb-4 mt-4\"\r\n          >\r\n            <div className=\"text-gray-500 text-sm \">\r\n              <span\r\n                style={{\r\n                  textTransform: \"uppercase\",\r\n                  fontSize: 13.6,\r\n                  letterSpacing: 1,\r\n                  color: \"black\",\r\n                }}\r\n              >\r\n                {myPlaylistTitle.name}\r\n              </span>{\" \"}\r\n              {myPlaylist.tracks && myPlaylistTitle.tracks.total > 0 ? (\r\n                <span>\r\n                  ({myPlaylistTitle.tracks.total}{\" \"}\r\n                  {myPlaylistTitle.tracks.total > 1 ? \"tracks\" : \"track\"})\r\n                </span>\r\n              ) : null}\r\n            </div>\r\n\r\n            <Tooltip placement=\"top\" title=\"Add Tracks\">\r\n              <Fab\r\n                color=\"inherit\"\r\n                aria-label=\"add\"\r\n                size=\"small\"\r\n                style={{ marginRight: 8 }}\r\n                onClick={setSelectTracksOpen}\r\n              >\r\n                <AddIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col mt-4 mb-2\">\r\n            <div>\r\n              <div>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul role=\"list\">\r\n                      {/* {console.log(albumTracks)} */}\r\n                      {albumTracks.items && albumTracks.items.length === 0 ? (\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 14,\r\n                            margin: \"80px 0\",\r\n                          }}\r\n                        >\r\n                          No Tracks in this Playlist\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          {albumTracks.items?.map((audio) => (\r\n                            <div\r\n                              style={{\r\n                                display: \"block\",\r\n                                margin: \"0 auto\",\r\n                                width: \"100%\",\r\n                              }}\r\n                              key={audio.track.id}\r\n                            >\r\n                              <li\r\n                                style={{ alignItems: \"center\" }}\r\n                                className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                <div\r\n                                  // onClick={() => selectAlbum(audio.track.track.id)}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                                >\r\n                                  {audio.track.album.images[0] !== undefined ? (\r\n                                    <img\r\n                                      src={audio.track.album.images[0].url}\r\n                                      // alt={album.id ? album.images[0].url : noImage}\r\n                                      className=\"w-full h-full object-center object-cover\"\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      src={noImage}\r\n                                      // alt={album.id ? album.images[0].url : noImage}\r\n                                      className=\"w-full h-full object-center object-cover\"\r\n                                    />\r\n                                  )}\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div>\r\n                                    <div\r\n                                      className={`flex justify-between text-${\r\n                                        audio.track.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"gray\"\r\n                                      }-600`}\r\n                                    >\r\n                                      <Typography style={{ fontSize: 13 }}>\r\n                                        {audio.track.name\r\n                                          ? truncateMobile(audio.track.name)\r\n                                          : \"No name\"}\r\n                                      </Typography>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                      className={`mt-1 mb-1 flex items-center  text-${\r\n                                        audio.track.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"gray\"\r\n                                      }-400`}\r\n                                    >\r\n                                      {audio.track.artists.length < 2 ? (\r\n                                        <span\r\n                                          style={{ fontSize: 12 }}\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"blue\"\r\n                                              : \"\"\r\n                                          }\r\n                                        >\r\n                                          {audio.track.artists[0].name\r\n                                            ? audio.track.artists[0].name\r\n                                            : \"No artist name\"}\r\n                                        </span>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span style={{ fontSize: 12 }}>\r\n                                            {audio.track.artists\r\n                                              .filter(\r\n                                                (artist, index) => index < 3\r\n                                              )\r\n                                              .map((artist, index) =>\r\n                                                index >= 2 ? null : (\r\n                                                  <span\r\n                                                    key={artist.id}\r\n                                                    style={\r\n                                                      index === 1\r\n                                                        ? {\r\n                                                            fontSize: 12,\r\n                                                            marginLeft: 4,\r\n                                                          }\r\n                                                        : { fontSize: 12 }\r\n                                                    }\r\n                                                  >\r\n                                                    {index === 1\r\n                                                      ? truncateArtistNameMobile(\r\n                                                          artist.name\r\n                                                        )\r\n                                                      : artist.name}\r\n\r\n                                                    {index !== 1 ? \",\" : \"\"}\r\n                                                  </span>\r\n                                                )\r\n                                              )}\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </div>\r\n                                    <div\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        display: \"flex\",\r\n                                        position: \"relative\",\r\n                                        justifyContent: \"space-between\",\r\n                                      }}\r\n                                      className={`text-${\r\n                                        audio.track.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"gray\"\r\n                                      }-700`}\r\n                                    >\r\n                                      {msToTime(audio.track.duration_ms)}\r\n                                      {audio.track.id ===\r\n                                      currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <span id=\"bars\">\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                          </span>\r\n                                        ) : null\r\n                                      ) : null}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      right: 6,\r\n                                      top: 14,\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <div>\r\n                                      {audio.track.id ===\r\n                                      currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <Tooltip\r\n                                            placement=\"top\"\r\n                                            title=\"Pause\"\r\n                                          >\r\n                                            <IconButton\r\n                                              size=\"small\"\r\n                                              style={{\r\n                                                backgroundColor:\r\n                                                  \"rgb(240, 240, 240)\",\r\n                                              }}\r\n                                              color={\r\n                                                audio.track.id ===\r\n                                                currentSongPlayingId\r\n                                                  ? \"primary\"\r\n                                                  : \"inherit\"\r\n                                              }\r\n                                              onClick={() => {\r\n                                                console.log(\"Pause\");\r\n                                                setFloatingPlayerPlay(false);\r\n                                              }}\r\n                                            >\r\n                                              <PauseIcon />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                        ) : (\r\n                                          <Tooltip placement=\"top\" title=\"Play\">\r\n                                            <IconButton\r\n                                              size=\"small\"\r\n                                              style={{\r\n                                                backgroundColor:\r\n                                                  \"rgb(240, 240, 240)\",\r\n                                              }}\r\n                                              color={\r\n                                                audio.track.id ===\r\n                                                currentSongPlayingId\r\n                                                  ? \"primary\"\r\n                                                  : \"inherit\"\r\n                                              }\r\n                                              onClick={() => {\r\n                                                console.log(\"Play\");\r\n                                                setFloatingPlayerPlay(true);\r\n                                              }}\r\n                                            >\r\n                                              <PlayArrowIcon />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                        )\r\n                                      ) : (\r\n                                        <Tooltip placement=\"top\" title=\"Play\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.track.id ===\r\n                                              currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              setChooseTrack(audio.track);\r\n                                              setCurrentSongPlayingId(\r\n                                                audio.track.id\r\n                                              );\r\n                                              setPlayButtonPressedCount(\r\n                                                (playButtonPressedCount += 1)\r\n                                              );\r\n                                            }}\r\n                                          >\r\n                                            <PlayArrowIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      )}\r\n                                    </div>\r\n                                    <div\r\n                                      style={{\r\n                                        marginLeft: 14,\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                      onClick={() =>\r\n                                        removeTracksFromMyPlaylist(\r\n                                          myPlaylistTitle.id,\r\n                                          audio.track.uri\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Tooltip placement=\"top\" title=\"Remove\">\r\n                                        <RemoveCircleOutlineIcon\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"action\"\r\n                                          }\r\n                                        />\r\n                                      </Tooltip>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={28} />\r\n        </div>\r\n      )}\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 16,\r\n                letterSpacing: 2,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Create new Playlist\r\n            </div>\r\n            <IconButton onClick={handleClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n          {/* <div\r\n            style={{\r\n              marginTop: 10,\r\n              borderRadius: 4,\r\n              border: \"1px solid rgb(180, 180, 180)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <AddPhotoAlternateOutlinedIcon\r\n              color=\"disabled\"\r\n              style={{ height: 160, width: 160 }}\r\n            />\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              borderRadius: 6,\r\n              border: \"1.2px solid rgb(200, 200, 200)\",\r\n            }}\r\n          >\r\n            <label\r\n              htmlFor=\"myImage\"\r\n              className=\"fileInput\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img\r\n                className=\"product-image\"\r\n                src={displayImage ? displayImage : noImage}\r\n                alt=\"\"\r\n                style={{ height: 160 }}\r\n              />\r\n            </label>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              id=\"myImage\"\r\n              name=\"myImage\"\r\n              onChange={onImageSelect}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 20 }}>\r\n            <Typography id=\"modal-modal-title\" variant=\"body2\" component=\"h2\">\r\n              Title\r\n            </Typography>\r\n            <input\r\n              className=\" focus:border-light-gray-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-3\"\r\n              type=\"text\"\r\n              style={{\r\n                borderColor: \"rgb(180, 180, 180)\",\r\n                borderWidth: 1,\r\n                marginTop: 10,\r\n              }}\r\n              aria-label=\"Search for songs...\"\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <Typography id=\"modal-modal-title\" variant=\"body2\" component=\"h2\">\r\n              Description\r\n            </Typography>\r\n            <textarea\r\n              className=\" focus:border-light-gray-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-3\"\r\n              type=\"text\"\r\n              style={{\r\n                borderColor: \"rgb(180, 180, 180)\",\r\n                borderWidth: 1,\r\n                marginTop: 10,\r\n              }}\r\n              aria-label=\"Search for songs...\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{ marginTop: 10, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              disabled={title === \"\" ? true : false}\r\n              onClick={() => {\r\n                createPlaylist(title, description, base64Uri);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={selectTracksOpen}\r\n        onClose={handleSelectTracksClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 15,\r\n                letterSpacing: 1,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Add Tracks\r\n            </div>\r\n            <IconButton onClick={handleSelectTracksClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div style={{ position: \"relative\", marginTop: 20 }}>\r\n            <SearchIconWrapper>\r\n              <SearchIcon color=\"primary\" />\r\n            </SearchIconWrapper>\r\n            <input\r\n              className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n              type=\"text\"\r\n              placeholder=\"Search for tracks to add..\"\r\n              style={{ width: \"100%\", fontSize: 15 }}\r\n              value={createPlaylistSearchTerm}\r\n              onChange={(e) => {\r\n                setCreatePlaylistSearchTerm(e.target.value);\r\n              }}\r\n            />\r\n            {createPlaylistSearchTerm ? (\r\n              <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                <IconButton\r\n                  onClick={() => setCreatePlaylistSearchTerm(\"\")}\r\n                  size=\"small\"\r\n                >\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n\r\n          {createPlaylistSearchData.length > 0 ? (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"body2\"\r\n                component=\"h2\"\r\n                style={{ letterSpacing: 1 }}\r\n              >\r\n                Search results\r\n              </Typography>\r\n            </div>\r\n          ) : null}\r\n          <div style={{ marginTop: 20 }}>\r\n            <div className=\"flex flex-col mt-2 mb-2\">\r\n              <div>\r\n                <div>\r\n                  <div className=\" align-middle \">\r\n                    <div>\r\n                      <ul\r\n                        className={\r\n                          createPlaylistSearchData.length > 0\r\n                            ? \"createPlaylistSongsBox\"\r\n                            : null\r\n                        }\r\n                        role=\"list\"\r\n                      >\r\n                        {createPlaylistSearchData?.map((audio) => (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.album.images[0].url}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.name\r\n                                        ? truncateMobile(audio.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.artists[0].name\r\n                                          ? audio.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      position: \"relative\",\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                    <div>\r\n                                      {audio.id === currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <span id=\"bars\">\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                          </span>\r\n                                        ) : null\r\n                                      ) : null}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 0,\r\n                                    top: 14,\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Pause\");\r\n                                              setFloatingPlayerPlay(false);\r\n                                            }}\r\n                                          >\r\n                                            <PauseIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      ) : (\r\n                                        <Tooltip placement=\"top\" title=\"Play\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Play\");\r\n                                              setFloatingPlayerPlay(true);\r\n                                            }}\r\n                                          >\r\n                                            <PlayArrowIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      )\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            setChooseTrack(audio);\r\n                                            setCurrentSongPlayingId(audio.id);\r\n                                            setPlayButtonPressedCount(\r\n                                              (playButtonPressedCount += 1)\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      marginLeft: 14,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      addTracksToMyPlaylist(\r\n                                        myPlaylistTitle.id,\r\n                                        myPlaylistTitle,\r\n                                        audio.uri,\r\n                                        audio.id\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip placement=\"top\" title=\"Add\">\r\n                                      <AddCircleOutlinedIcon\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"action\"\r\n                                        }\r\n                                      />\r\n                                    </Tooltip>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ marginTop: 20, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              onClick={handleSelectTracksClose}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default MyPlaylist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Snackbar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport useAuth from \"../useAuth\";\r\nimport Header from \"../Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport FloatingPlayer from \"../FloatingPlayer/FloatingPlayer\";\r\nimport CategoryPlaylist from \"../CategoryPlaylist/CategoryPlaylist\";\r\nimport ArtistDetails from \"../ArtistDetails/ArtistDetails\";\r\nimport Artists from \"../Artists/Artists\";\r\nimport NewReleases from \"../Home/NewReleases/NewReleases\";\r\nimport RecentlyPlayed from \"../Home/RecentlyPlayed/RecentlyPlayed\";\r\nimport RecentlyPlayedMobile from \"../Home/RecentlyPlayed/RecentlyPlayedMobile\";\r\nimport MySavedTracks from \"../MySavedTracks/MySavedTracks\";\r\nimport MyPlaylist from \"../MyPlaylist/MyPlaylist\";\r\n\r\ndotenv.config();\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: process.env.SPOTIFY_CLIENT_ID,\r\n});\r\n\r\nconst drawerWidth = 240;\r\nconst recentSongsWidth = 320;\r\n\r\nconst Dashboard = ({ code }) => {\r\n  const [width, setWidth] = useState(document.body.offsetWidth);\r\n  const accessToken = useAuth(code);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [chooseTrack, setChooseTrack] = useState(\"\");\r\n  const [newReleases, setNewReleases] = useState([]);\r\n  const [showSearchSongs, setShowSearchSongs] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showAlbumList, setShowAlbumList] = useState(false);\r\n  const [currentSongPlayingId, setCurrentSongPlayingId] = useState(\"\");\r\n  const [floatingPlayerPlay, setFloatingPlayerPlay] = useState(false);\r\n  const [playerDetails, setPlayerDetails] = useState({});\r\n  const [album, setAlbum] = useState({});\r\n  const [currentSongArtistAlbums, setCurrentSongArtistAlbums] = useState([]);\r\n  const [category, setCategory] = useState(\"Home\");\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [categorySublist, setCategorySublist] = useState([]);\r\n  const [categorySublistTitle, setCategorySublistTitle] = useState({});\r\n  const [currentPlaylistPlayingId, setCurrentPlaylistPlayingId] = useState(\"\");\r\n  const [playlistTracks, setPlaylistTracks] = useState(\"\");\r\n  const [albumTracks, setAlbumTracks] = useState([]);\r\n  const [recentlyPlayedSongs, setRecentlyPlayedSongs] = useState([]);\r\n  const [myTopArtists, setMyTopArtists] = useState([]);\r\n  const [myTopTracks, setMyTopTracks] = useState([]);\r\n  const [musicCategories, setMusicCategories] = useState([]);\r\n  const [artistDetails, setArtistDetails] = useState([]);\r\n  const [artistTopTracks, setArtistTopTracks] = useState([]);\r\n  const [showArtistDetails, setShowArtistDetails] = useState(false);\r\n  const [songProgress, setSongProgress] = useState(null);\r\n  const [playButtonPressedCount, setPlayButtonPressedCount] = useState(0);\r\n  const [showArtistsCategory, setShowArtistsCategory] = useState(false);\r\n  const [showNewReleasesCategory, setShowNewReleasesCategory] = useState(false);\r\n  const [showSavedTracks, setShowSavedTracks] = useState(false);\r\n  const [showMyPlaylists, setShowMyPlaylists] = useState(false);\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [relatedArtists, setRelatedArtists] = useState([]);\r\n  const [myPlaylist, setMyPlaylist] = useState([]);\r\n  const [myPlaylistTitle, setMyPlaylistTitle] = useState(\"\");\r\n  const [mySavedTracks, setMySavedTracks] = useState([]);\r\n  const [createPlaylistSearchTerm, setCreatePlaylistSearchTerm] = useState(\"\");\r\n  const [createPlaylistSearchData, setCreatePlaylistSearchData] = useState([]);\r\n  const [openSnackbar, setOpenSnackbar] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openAlert, setOpenAlert] = useState({});\r\n  const [selectPlaylistOpen, setSelectPlaylistOpen] = useState(false);\r\n\r\n  const handleCloseAlert = () => {\r\n    setOpenAlert({\r\n      message: openAlert.message,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n    setCategory(\"Home\");\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMe().then(\r\n      function (data) {\r\n        console.log(\"Some information about the authenticated user\", data.body);\r\n        setCurrentUser(data.body);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    setWidth(document.body.offsetWidth);\r\n  });\r\n\r\n  // console.log(relatedArtists);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    getMyRecentPlayedSongs();\r\n    getMyTopArtists();\r\n    getMyTopTracks();\r\n    getMySavedTracks();\r\n\r\n    // window.onSpotifyWebPlaybackSDKReady = () => {\r\n    //   const player = new window.Spotify.Player({\r\n    //     name: \"Carly Rae Jepsen Player\",\r\n    //     getOAuthToken: (callback) => {\r\n    //       callback(accessToken);\r\n    //     },\r\n    //     volume: 0.5,\r\n    //   });\r\n\r\n    //   const playTrack = () => {\r\n    //     console.log(\"lol\");\r\n\r\n    //     player.connect().then((success) => {\r\n    //       if (success) {\r\n    //         console.log(\r\n    //           \"The Web Playback SDK successfully connected to Spotify!\"\r\n    //         );\r\n    //       }\r\n    //     });\r\n\r\n    //     player.addListener(\"ready\", async ({ device_id }) => {\r\n    //       const spotify_uri = \"spotify:track:7xGfFoTpQ2E7fRF5lN10tr\";\r\n    //       console.log(\"Connected with Device ID\", device_id);\r\n\r\n    //       const response = await fetch(\r\n    //         `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\r\n    //         {\r\n    //           method: \"PUT\",\r\n    //           body: JSON.stringify({ uris: [spotify_uri] }),\r\n    //           headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Authorization: `Bearer ${accessToken}`,\r\n    //           },\r\n    //         }\r\n    //       );\r\n\r\n    //       const data = await response.text();\r\n    //       console.log(data ? JSON.parse(data) : response);\r\n    //     });\r\n    //   };\r\n\r\n    //   const button = document.createElement(\"button\");\r\n    //   button.innerHTML = \"Play\";\r\n    //   button.addEventListener(\"click\", playTrack);\r\n    //   document.getElementById(\"root\").append(button);\r\n\r\n    //   const play = ({\r\n    //     spotify_uri,\r\n    //     playerInstance: {\r\n    //       _options: { getOAuthToken },\r\n    //     },\r\n    //   }) => {\r\n    //     getOAuthToken((access_token) => {\r\n    //   fetch(\r\n    //     `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\r\n    //     {\r\n    //       method: \"PUT\",\r\n    //       body: JSON.stringify({ uris: [spotify_uri] }),\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //         Authorization: `Bearer ${access_token}`,\r\n    //       },\r\n    //     }\r\n    //   );\r\n    //     });\r\n    //   };\r\n    // };\r\n  }, [accessToken]);\r\n\r\n  const searchTracks = (searchterm) => {\r\n    if (!searchTerm) return;\r\n    let cancel = false;\r\n\r\n    spotifyApi.searchTracks(searchterm).then((res) => {\r\n      if (cancel) return;\r\n      setSearchData(res.body.tracks.items);\r\n      setCurrentSongPlayingId(currentSongPlayingId);\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (!searchTerm) return setSearchData([]);\r\n    if (!accessToken) return;\r\n    // let cancel = false;\r\n    searchTracks(searchTerm);\r\n    setShowSearchSongs(true);\r\n\r\n    // return () => (cancel = true);\r\n  }, [searchTerm, accessToken]);\r\n\r\n  const createPlaylistSearchTracks = (searchterm) => {\r\n    if (!searchterm) return;\r\n    let cancel = false;\r\n\r\n    spotifyApi.searchTracks(searchterm).then((res) => {\r\n      if (cancel) return;\r\n      setCreatePlaylistSearchData(res.body.tracks.items);\r\n      // console.log(res.body.tracks);\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    if (createPlaylistSearchTerm === \"\") setCreatePlaylistSearchData([]);\r\n    console.log(createPlaylistSearchTerm);\r\n    createPlaylistSearchTracks(createPlaylistSearchTerm);\r\n  }, [createPlaylistSearchTerm, accessToken]);\r\n\r\n  // console.log(newReleases);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    if (searchTerm === \"\") setSearchData([]);\r\n\r\n    if (category === \"Home\") {\r\n      getNewReleases();\r\n      getMusicCategories();\r\n      getMyRecentPlayedSongs();\r\n      getMyTopArtists();\r\n      getMyTopTracks();\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"Artists\") {\r\n      setShowArtistsCategory(true);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(false);\r\n      getArtist(myTopArtists[0].id);\r\n      getArtistRelatedArtists(artistDetails.id);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"New Releases\") {\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(true);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(false);\r\n      setAlbum(newReleases[0].id);\r\n      selectAlbum(newReleases[0].id);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"Saved Tracks\") {\r\n      getMySavedTracks();\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(true);\r\n      setShowMyPlaylists(false);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"My Playlists\") {\r\n      getMyPlaylists();\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(true);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    }\r\n    getMyPlaylistsForSearchResults();\r\n    getMyRecentPlayedSongs();\r\n  }, [accessToken, category, currentUser]);\r\n\r\n  const selectCategorySublist = (album) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getPlaylistsForCategory(album.id, {\r\n        country: \"IN\",\r\n        limit: 20,\r\n        offset: 2,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          setCategorySublist(data.body.playlists.items);\r\n          setCategorySublistTitle({\r\n            id: album.id,\r\n            name: album.name,\r\n            image: album.icons[0].url,\r\n          });\r\n          selectCategoryPlaylist(data.body.playlists.items[0]);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getAudioAnalysisForTrack(\"3Qm86XLflmIXVm1wcwkgDK\").then(\r\n      function (data) {\r\n        console.log(data.body);\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n\r\n  const selectCategoryPlaylist = (playlist) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    spotifyApi\r\n      .getPlaylist(playlist.id)\r\n      .then(function (data) {\r\n        setAlbum(data.body);\r\n        setPlaylistTracks(playlist.tracks.total);\r\n\r\n        spotifyApi\r\n          .getPlaylistTracks(playlist.id, {\r\n            offset: 1,\r\n          })\r\n          .then((data) => {\r\n            setShowAlbumList(true);\r\n            setAlbumTracks(data.body);\r\n            setSearchData([]);\r\n            setIsLoading(false);\r\n          });\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const selectAlbum = (albumId) => {\r\n    if (!accessToken) return;\r\n    // console.log(albumId);\r\n    setIsLoading(true);\r\n\r\n    spotifyApi\r\n      .getAlbum(albumId)\r\n      .then(function (data) {\r\n        // console.log(data);\r\n        spotifyApi.getArtistAlbums(data.body.artists[0].id).then(\r\n          (data) => {\r\n            setCurrentSongArtistAlbums(data.body);\r\n            setIsLoading(false);\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n          }\r\n        );\r\n        setAlbum(data.body);\r\n        return data.body.tracks.items.map(function (t) {\r\n          return t.id;\r\n        });\r\n      })\r\n      .then(function (trackIds) {\r\n        return spotifyApi.getTracks(trackIds);\r\n      })\r\n      .then(function (data) {\r\n        // console.log(data.body);\r\n        // setShowAlbumList(true);\r\n\r\n        setAlbumTracks(data.body.tracks);\r\n        // setSearchData([]);\r\n        // setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchData.length > 0) {\r\n      spotifyApi\r\n        .getArtistAlbums(\r\n          chooseTrack ? chooseTrack.artists[0].id : searchData[0].artists[0].id\r\n        )\r\n        .then(\r\n          (data) => {\r\n            setCurrentSongArtistAlbums(data.body);\r\n            // console.log(searchData);\r\n            // setFloatingPlayerPlay(true);\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n          }\r\n        );\r\n    }\r\n  }, [searchData, chooseTrack]);\r\n\r\n  useEffect(() => {\r\n    if (!chooseTrack) return;\r\n    setFloatingPlayerPlay(true);\r\n  }, [chooseTrack]);\r\n\r\n  const getMyPlaylistsForSearchResults = () => {\r\n    if (!accessToken) return;\r\n    console.log(currentUser);\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me/playlists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.items);\r\n        setMyPlaylist(response.data.items);\r\n      });\r\n  };\r\n\r\n  const getNewReleases = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getNewReleases({ limit: 45, offset: 0, country: \"US\" })\r\n      .then((res) => {\r\n        setNewReleases(res.body.albums.items);\r\n        // console.log(res.body.albums.items);\r\n      });\r\n  };\r\n\r\n  const getMusicCategories = () => {\r\n    setShowArtistDetails(false);\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getCategories({\r\n        limit: 20,\r\n        offset: 0,\r\n        country: \"AU\",\r\n        locale: \"en_AU\",\r\n      })\r\n      .then(\r\n        function (data) {\r\n          // console.log(\"get categories\", data.body);\r\n\r\n          setMusicCategories(data.body.categories.items);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  const getMyRecentPlayedSongs = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getMyRecentlyPlayedTracks({\r\n        limit: 7,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          // Output items\r\n          // console.log(\"Your 40 most recently played tracks are:\");\r\n          setRecentlyPlayedSongs(data.body.items);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  let filteredRecentlyPlayedSongs = recentlyPlayedSongs\r\n    .map((e) => e.track[\"id\"])\r\n    .map((e, i, final) => final.indexOf(e) === i && i)\r\n    .filter((obj) => recentlyPlayedSongs[obj])\r\n    .map((e) => recentlyPlayedSongs[e]);\r\n\r\n  const getMyTopArtists = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMyTopArtists({ limit: 32 }).then(\r\n      function (data) {\r\n        let topArtists = data.body.items;\r\n        setMyTopArtists(topArtists);\r\n        setArtistDetails(topArtists[0]);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMyTopTracks = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMyTopTracks({ limit: 30, offset: 1 }).then(\r\n      function (data) {\r\n        let topTracks = data.body.items;\r\n        // console.log(topTracks);\r\n        setMyTopTracks(topTracks);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getArtist = (artistId) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    // setShowArtistDetails(true);\r\n    spotifyApi.getArtistTopTracks(artistId, \"US\").then(\r\n      function (data) {\r\n        // console.log(data.body);\r\n        setArtistTopTracks(data.body);\r\n        getArtistRelatedArtists(artistId);\r\n\r\n        setAlbumTracks(data.body.tracks);\r\n        setSearchData([]);\r\n        setIsLoading(false);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n    spotifyApi.getArtist(artistId).then(\r\n      function (data) {\r\n        // console.log(\"Artist information\", data.body);\r\n        setArtistDetails(data.body);\r\n        setSearchData([]);\r\n      },\r\n      function (err) {\r\n        console.error(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getArtistRelatedArtists = (artistId) => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getArtistRelatedArtists(artistId).then(\r\n      function (data) {\r\n        // console.log(\"RelatedArtists\", data.body);\r\n        setRelatedArtists(data.body.artists);\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMySavedTracks = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMySavedTracks().then(\r\n      function (data) {\r\n        console.log(\"Done!\", data.body);\r\n        setMySavedTracks(data.body.items);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n\r\n    spotifyApi.getMySavedAlbums().then(\r\n      function (data) {\r\n        // Output items\r\n        console.log(\"Saved Albums\", data.body.items);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMyPlaylists = () => {\r\n    if (!accessToken) return;\r\n    console.log(currentUser);\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me/playlists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.items);\r\n        setMyPlaylist(response.data.items);\r\n        spotifyApi.getPlaylistTracks(response.data.items[0].id).then((data) => {\r\n          console.log(data);\r\n          if (data) {\r\n            setAlbumTracks(data.body);\r\n            setMyPlaylistTitle(response.data.items[0]);\r\n            console.log(data.body.items);\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  const selectMyPlaylist = (playlist) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    console.log(playlist);\r\n    spotifyApi\r\n      .getPlaylistTracks(playlist.id)\r\n      .then((data) => {\r\n        setAlbumTracks(data.body);\r\n        setMyPlaylistTitle(playlist);\r\n        console.log(data.body);\r\n      })\r\n      .then(() => setIsLoading(false));\r\n  };\r\n\r\n  const addTracksToMyPlaylist = (\r\n    playlistId,\r\n    myPlaylistTitle,\r\n    spotifyUri,\r\n    audioId\r\n  ) => {\r\n    if (!accessToken) return;\r\n    console.log(playlistId, myPlaylistTitle, spotifyUri, audioId);\r\n    spotifyApi.getPlaylistTracks(playlistId).then((data) => {\r\n      console.log(data.body.items);\r\n      if (\r\n        data.body.items.find((item) => item.track.id === audioId) === undefined\r\n      ) {\r\n        spotifyApi\r\n          .addTracksToPlaylist(playlistId, [spotifyUri])\r\n          .then((data) => {\r\n            console.log(\"Added tracks to playlist!\", data.body.snapshot_id);\r\n          })\r\n          .then(() => {\r\n            getMyPlaylists();\r\n          })\r\n          .then(() => {\r\n            selectMyPlaylist(myPlaylistTitle);\r\n            setOpenSnackbar({ message: \"Added to playlist..\", open: true });\r\n            setSelectPlaylistOpen(false);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        setOpenAlert({\r\n          message: \"Track already exists in this playlist..\",\r\n          open: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeTracksFromMyPlaylist = (playlistId, spotifyUri) => {\r\n    console.log(playlistId, spotifyUri);\r\n    if (!accessToken) return;\r\n    const tracks = [{ uri: spotifyUri }];\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(playlistId, tracks)\r\n      .then((data) => {\r\n        console.log(\"Track removed\", data.body.snapshot_id);\r\n      })\r\n      .then(() => {\r\n        getMyPlaylists();\r\n      })\r\n      .then(() =>\r\n        setOpenSnackbar({\r\n          message: \"Removed from playlist..\",\r\n          open: true,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addToSavedTracks = (track) => {\r\n    console.log(track.id);\r\n    spotifyApi.containsMySavedTracks([track.id]).then(\r\n      function (data) {\r\n        // An array is returned, where the first element corresponds to the first track ID in the query\r\n        var trackIsInYourMusic = data.body[0];\r\n        console.log(trackIsInYourMusic);\r\n        setAnchorEl(null);\r\n\r\n        if (trackIsInYourMusic) {\r\n          console.log(\"Track was found in the user's Your Music library\");\r\n          setOpenAlert({\r\n            message: \"Track already exists in your Saved Albums..\",\r\n            open: true,\r\n          });\r\n        } else {\r\n          console.log(\"Track was not found.\");\r\n          spotifyApi\r\n            .addToMySavedTracks([track.id])\r\n            .then((response) => {\r\n              console.log(\"Track added to saved albums\", response.body);\r\n              getMySavedTracks();\r\n            })\r\n            .then(() => {\r\n              setOpenSnackbar({\r\n                message: \"Added to saved tracks..\",\r\n                open: true,\r\n              });\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const removeTrackFromSavedTracks = (trackId) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .removeFromMySavedTracks([trackId])\r\n      .then((data) => {\r\n        console.log(data.body);\r\n        getMySavedTracks();\r\n      })\r\n      .then(() => {\r\n        setOpenSnackbar({\r\n          message: \"Removed from saved tracks..\",\r\n          open: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const createPlaylist = (title, description, longbase64uri) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .createPlaylist(title, {\r\n        description: description,\r\n        public: true,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          console.log(\"Created playlist!\", data.body.id);\r\n          if (longbase64uri !== null) {\r\n            spotifyApi\r\n              .uploadCustomPlaylistCoverImage(\r\n                data.body.id,\r\n                longbase64uri.split(\",\")[1]\r\n              )\r\n              .then(\r\n                function (result) {\r\n                  console.log(\"Playlsit cover image uploaded!\", result.body);\r\n                },\r\n                function (err) {\r\n                  console.log(\"Something went wrong!\", err);\r\n                }\r\n              )\r\n              .then(() => getMyPlaylists());\r\n          }\r\n          getMyPlaylists();\r\n          // setOpenSnackbar(\"Playlist created successfully..\")\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  const pauseSong = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.pause().then(\r\n      function () {\r\n        console.log(\"Playback paused\");\r\n      },\r\n      function (err) {\r\n        //if the user making the request is non-premium, a 403 FORBIDDEN response code will be returned\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleCloseSnackbar}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div>\r\n        <div style={{ position: \"fixed\", width: \"100%\", zIndex: 1 }}>\r\n          <Header\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            setCategory={setCategory}\r\n            drawerWidth={drawerWidth}\r\n            mobileOpen={mobileOpen}\r\n            setMobileOpen={setMobileOpen}\r\n            width={width}\r\n            currentUser={currentUser}\r\n            setSearchTerm={setSearchTerm}\r\n          />\r\n        </div>\r\n        <Box\r\n          className=\"p-4 pt-14 md:p-10 md:pt-14 lg:p-10 lg:pt-14 \"\r\n          sx={{\r\n            display: { lg: \"flex\", md: \"block\", sm: \"block\", xs: \"block\" },\r\n          }}\r\n          style={\r\n            chooseTrack\r\n              ? {\r\n                  paddingBottom: 140,\r\n                }\r\n              : {\r\n                  paddingBottom: 0,\r\n                }\r\n          }\r\n        >\r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              width: {\r\n                lg: `calc(100% - ${drawerWidth + recentSongsWidth + 30}px)`,\r\n              },\r\n              ml: { sm: `${drawerWidth}px` },\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n\r\n                justifyContent: \"space-evenly\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={\r\n                  chooseTrack\r\n                    ? {\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                      }\r\n                    : {\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                      }\r\n                }\r\n              >\r\n                {showSearchSongs && searchTerm !== \"\" ? (\r\n                  <div\r\n                    style={{\r\n                      marginTop: 30,\r\n                    }}\r\n                  >\r\n                    <SearchResults\r\n                      searchTerm={searchTerm}\r\n                      searchData={searchData}\r\n                      chooseTrack={chooseTrack}\r\n                      setChooseTrack={setChooseTrack}\r\n                      currentSongPlayingId={currentSongPlayingId}\r\n                      floatingPlayerPlay={floatingPlayerPlay}\r\n                      setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                      setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                      setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                      playButtonPressedCount={playButtonPressedCount}\r\n                      addToSavedTracks={addToSavedTracks}\r\n                      anchorEl={anchorEl}\r\n                      setAnchorEl={setAnchorEl}\r\n                      myPlaylist={myPlaylist}\r\n                      addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                      selectPlaylistOpen={selectPlaylistOpen}\r\n                      setSelectPlaylistOpen={setSelectPlaylistOpen}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {categorySublist.length > 0 ? (\r\n                      <div>\r\n                        <CategoryPlaylist\r\n                          searchTerm={searchTerm}\r\n                          album={album}\r\n                          categorySublist={categorySublist}\r\n                          selectCategoryPlaylist={selectCategoryPlaylist}\r\n                          categorySublistTitle={categorySublistTitle}\r\n                          setCategorySublist={setCategorySublist}\r\n                          searchData={searchData}\r\n                          setChooseTrack={setChooseTrack}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          currentPlaylistPlayingId={currentPlaylistPlayingId}\r\n                          setCurrentPlaylistPlayingId={\r\n                            setCurrentPlaylistPlayingId\r\n                          }\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          isLoading={isLoading}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                        />\r\n                      </div>\r\n                    ) : showArtistDetails ? (\r\n                      <ArtistDetails\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        artistDetails={artistDetails}\r\n                        artistTopTracks={artistTopTracks}\r\n                        selectCategoryPlaylist={selectCategoryPlaylist}\r\n                        setShowArtistDetails={setShowArtistDetails}\r\n                        albumTracks={albumTracks}\r\n                        chooseTrack={chooseTrack}\r\n                        setChooseTrack={setChooseTrack}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        isLoading={isLoading}\r\n                        setIsLoading={setIsLoading}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        setSearchData={setSearchData}\r\n                        setAlbumTracks={setAlbumTracks}\r\n                      />\r\n                    ) : category === \"Home\" ? (\r\n                      <Home\r\n                        chooseTrack={chooseTrack}\r\n                        setChooseTrack={setChooseTrack}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        recentlyPlayedSongs={recentlyPlayedSongs}\r\n                        newReleases={newReleases}\r\n                        myTopArtists={myTopArtists}\r\n                        myTopTracks={myTopTracks}\r\n                        selectAlbum={selectAlbum}\r\n                        musicCategories={musicCategories}\r\n                        selectCategorySublist={selectCategorySublist}\r\n                        getArtist={getArtist}\r\n                        album={album}\r\n                        setShowAlbumList={setShowAlbumList}\r\n                        searchTerm={searchTerm}\r\n                        searchTracks={searchTracks}\r\n                        playlistTracks={playlistTracks}\r\n                        setSearchData={setSearchData}\r\n                        setAlbumTracks={setAlbumTracks}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        albumTracks={albumTracks}\r\n                      />\r\n                    ) : category === \"Artists\" ? (\r\n                      <div>\r\n                        <Artists\r\n                          width={width}\r\n                          myTopArtists={myTopArtists}\r\n                          getArtist={getArtist}\r\n                          getArtistRelatedArtists={getArtistRelatedArtists}\r\n                          artistDetails={artistDetails}\r\n                        />\r\n                        <ArtistDetails\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          artistDetails={artistDetails}\r\n                          artistTopTracks={artistTopTracks}\r\n                          selectCategoryPlaylist={selectCategoryPlaylist}\r\n                          setShowArtistDetails={setShowArtistDetails}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          isLoading={isLoading}\r\n                          setIsLoading={setIsLoading}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          relatedArtists={relatedArtists}\r\n                          getArtist={getArtist}\r\n                          getArtistRelatedArtists={getArtistRelatedArtists}\r\n                        />\r\n                      </div>\r\n                    ) : category === \"New Releases\" ? (\r\n                      <div>\r\n                        <NewReleases\r\n                          newReleases={newReleases}\r\n                          selectAlbum={selectAlbum}\r\n                          album={album}\r\n                          setShowAlbumList={setShowAlbumList}\r\n                          searchTerm={searchTerm}\r\n                          searchTracks={searchTracks}\r\n                          playlistTracks={playlistTracks}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                          isLoading={isLoading}\r\n                        />\r\n                      </div>\r\n                    ) : category === \"Saved Tracks\" ? (\r\n                      <MySavedTracks\r\n                        createPlaylistSearchTerm={createPlaylistSearchTerm}\r\n                        setCreatePlaylistSearchTerm={\r\n                          setCreatePlaylistSearchTerm\r\n                        }\r\n                        createPlaylistSearchData={createPlaylistSearchData}\r\n                        addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                        addToSavedTracks={addToSavedTracks}\r\n                        mySavedTracks={mySavedTracks}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        setChooseTrack={setChooseTrack}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        removeTrackFromSavedTracks={removeTrackFromSavedTracks}\r\n                      />\r\n                    ) : category === \"My Playlists\" ? (\r\n                      <MyPlaylist\r\n                        createPlaylistSearchTerm={createPlaylistSearchTerm}\r\n                        setCreatePlaylistSearchTerm={\r\n                          setCreatePlaylistSearchTerm\r\n                        }\r\n                        createPlaylistSearchData={createPlaylistSearchData}\r\n                        setCreatePlaylistSearchData={\r\n                          setCreatePlaylistSearchData\r\n                        }\r\n                        chooseTrack={chooseTrack}\r\n                        myPlaylist={myPlaylist}\r\n                        myPlaylistTitle={myPlaylistTitle}\r\n                        selectMyPlaylist={selectMyPlaylist}\r\n                        setChooseTrack={setChooseTrack}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                        removeTracksFromMyPlaylist={removeTracksFromMyPlaylist}\r\n                        createPlaylist={createPlaylist}\r\n                        albumTracks={albumTracks}\r\n                        isLoading={isLoading}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {chooseTrack ? (\r\n              <div\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: 0,\r\n                  zIndex: 1,\r\n                  right: 0,\r\n                  left: width < 582 ? 0 : drawerWidth,\r\n                  width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                }}\r\n              >\r\n                <div>\r\n                  <FloatingPlayer\r\n                    accessToken={accessToken}\r\n                    searchTerm={searchTerm}\r\n                    searchData={searchData}\r\n                    floatingPlayerPlay={floatingPlayerPlay}\r\n                    setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                    chooseTrack={chooseTrack}\r\n                    setChooseTrack={setChooseTrack}\r\n                    currentSongPlayingId={currentSongPlayingId}\r\n                    setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                    playerDetails={playerDetails}\r\n                    setPlayerDetails={setPlayerDetails}\r\n                    pauseSong={pauseSong}\r\n                    setSongProgress={setSongProgress}\r\n                    setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                    playButtonPressedCount={playButtonPressedCount}\r\n                    albumTracks={albumTracks}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n            }}\r\n          >\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n              recentSongsWidth={recentSongsWidth}\r\n            />\r\n          </Box>\r\n          {searchTerm === \"\" ? (\r\n            <Box\r\n              sx={{\r\n                display: { xs: \"block\", sm: \"block\", md: \"block\", lg: \"none\" },\r\n                width: {\r\n                  lg: `calc(100% - ${drawerWidth + recentSongsWidth + 30}px)`,\r\n                },\r\n                ml: { sm: `${drawerWidth}px` },\r\n              }}\r\n              className=\"mt-10 \"\r\n            >\r\n              <RecentlyPlayedMobile\r\n                recentlyPlayedSongs={recentlyPlayedSongs}\r\n                filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n                floatingPlayerPlay={floatingPlayerPlay}\r\n                setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                currentSongPlayingId={currentSongPlayingId}\r\n                setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                setChooseTrack={setChooseTrack}\r\n                setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                playButtonPressedCount={playButtonPressedCount}\r\n                recentSongsWidth={recentSongsWidth}\r\n              />\r\n            </Box>\r\n          ) : null}\r\n        </Box>\r\n      </div>\r\n      <Snackbar\r\n        open={openSnackbar.open}\r\n        autoHideDuration={2000}\r\n        onClose={handleCloseSnackbar}\r\n        action={action}\r\n        message={openSnackbar.message}\r\n      />\r\n      <Dialog\r\n        open={openAlert.open}\r\n        onClose={handleCloseAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"alert-dialog-title\"\r\n          style={{ fontSize: 16, textTransform: \"uppercase\", letterSpacing: 2 }}\r\n        >\r\n          Track found!\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"alert-dialog-description\"\r\n            style={{ fontSize: 14 }}\r\n          >\r\n            {openAlert.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAlert} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import Login from \"./components/Login/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n\n  return <div>{code ? <Dashboard code={code} /> : <Login />}</div>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}