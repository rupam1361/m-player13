{"version":3,"sources":["components/Login/Login.jsx","components/useAuth.js","assets/Mac_Miller_Live_from_Space.jpg","components/Header/Header.jsx","components/Home/RecentlyPlayed/RecentlyPlayedMobile.jsx","assets/no-image1.jpg","components/AlbumTitle/AlbumTitle.jsx","components/AlbumTitle/AlbumTracks/AlbumTracks.jsx","components/Home/NewReleases/NewReleases.jsx","components/Home/MyTopTracks/MyTopTracks.jsx","components/Home/MyTopArtists/MyTopArtists.jsx","components/Home/MyCategories/MyCategories.jsx","components/Home/Home.jsx","components/SearchResults/SearchResults.jsx","components/FloatingPlayer/FloatingPlayer.jsx","components/CategoryPlaylist/CategoryPlaylist.jsx","components/ArtistDetails/RelatedArtists/RelatedArtists.jsx","components/ArtistDetails/ArtistDetails.jsx","components/Artists/Artists.jsx","components/Home/RecentlyPlayed/RecentlyPlayed.jsx","components/MySavedTracks/MySavedTracks.jsx","components/MyPlaylist/MyPlaylist.jsx","components/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["dotenv","config","Login","style","display","justifyContent","height","alignItems","sx","fontSize","margin","color","Typography","textAlign","Button","variant","disableElevation","width","href","url","convertUppercase","word","toUpperCase","allCategories","name","description","icon","myMusic","Header","props","searchTerm","setSearchTerm","setCategory","drawerWidth","mobileOpen","setMobileOpen","currentUser","useState","selectedCategory","setSelectedCategory","window","showStyledInputBaseMobile","setShowStyledInputBaseMobile","handleDrawerToggle","container","undefined","document","body","Search","styled","theme","position","backgroundColor","alpha","palette","common","white","SearchIconWrapper","padding","spacing","pointerEvents","SearchIconWrapperMobile","InputBase","paddingLeft","transition","transitions","create","breakpoints","up","useEffect","drawer","console","log","border","borderRadius","class","src","images","length","noImage","alt","display_name","textTransform","letterSpacing","email","marginTop","Divider","List","map","category","index","ListItem","selected","button","onClick","e","target","innerText","ListItemIcon","marginLeft","ListItemText","primary","music","Box","flexGrow","AppBar","sm","ml","Toolbar","lg","md","xs","noWrap","component","className","type","placeholder","value","onChange","right","top","IconButton","size","autoFocus","edge","marginRight","flexShrink","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","RecentlyPlayedMobile","recentlyPlayedSongs","filteredRecentlyPlayedSongs","floatingPlayerPlay","setFloatingPlayerPlay","currentSongPlayingId","setCurrentSongPlayingId","setChooseTrack","setPlayButtonPressedCount","playButtonPressedCount","recentlyPlayedLi","useRef","scroll","scrollOffset","current","scrollLeft","marginBottom","slice","overflowX","scrollBehavior","ref","song","cursor","listStyleType","track","album","id","bottom","left","paddingRight","borderTopRightRadius","Tooltip","placement","title","str","substr","artists","AlbumTitle","playlistTracks","scrollTo","background","borderColor","borderWidth","paddingBottom","label","fontWeight","total_tracks","filter","artist","release_date","split","followers","total","popularity","fontStyle","msToTime","duration","seconds","Math","floor","minutes","truncateMobile","truncateArtistNameMobile","AlbumTracks","albumTracks","items","role","audio","duration_ms","CircularProgress","NewReleases","newReleases","selectAlbum","setShowAlbumList","searchTracks","setSearchData","setAlbumTracks","chooseTrack","isLoading","newReleasesLi","paddingTop","Item","Paper","typography","body2","text","secondary","MyTopTracks","myTopTracks","Grid","item","xl","MyTopArtists","myTopArtists","getArtist","getArtistRelatedArtists","artistDetails","artistLi","MyCategories","musicCategories","selectCategorySublist","musicLi","musCat","icons","Home","i","final","indexOf","obj","transform","bgcolor","boxShadow","p","SearchResults","searchData","addToSavedTracks","anchorEl","setAnchorEl","myPlaylist","addTracksToMyPlaylist","selectPlaylistOpen","setSelectPlaylistOpen","selectCurrentTrack","setSelectCurrentTrack","selectPlaylist","setSelectPlaylist","selectedTrack","setSelectedTrack","handleSelectPlaylistClose","Boolean","event","currentTarget","handleClick","Popover","anchorOrigin","vertical","horizontal","dense","disablePadding","ListItemButton","Modal","overflowY","playlist","uri","FloatingPlayer","accessToken","setPlayerDetails","pauseSong","findIndex","disableNextButton","some","next","token","callback","state","ontimeupdate","isPlaying","progressMs","find","styles","sliderColor","sliderTrackBorderRadius","autoPlay","play","uris","disabled","CategoryPlaylist","categorySublist","selectCategoryPlaylist","categorySublistTitle","categoryListLi","tracks","RelatedArtists","relatedArtists","intlFormat","num","Intl","NumberFormat","format","round","ArtistDetails","genres","genre","flex","Artists","RecentlyPlayed","recentSongsWidth","useTheme","MySavedTracks","createPlaylistSearchTerm","setCreatePlaylistSearchTerm","createPlaylistSearchData","mySavedTracks","removeTrackFromSavedTracks","selectTracksOpen","setSelectTracksOpen","handleSelectTracksClose","Fab","savedTrack","MyPlaylist","myPlaylistTitle","selectMyPlaylist","removeTracksFromMyPlaylist","createPlaylist","setOpen","setTitle","setDescription","displayImage","setDisplayImage","base64Uri","setBase64Uri","handleClose","htmlFor","files","file","reader","FileReader","onloadend","result","readAsDataURL","URL","createObjectURL","spotifyApi","SpotifyWebApi","clientId","process","SPOTIFY_CLIENT_ID","Dashboard","code","offsetWidth","setWidth","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","data","history","pushState","catch","err","message","interval","setInterval","clearInterval","useAuth","setNewReleases","showSearchSongs","setShowSearchSongs","setIsLoading","playerDetails","setAlbum","setCurrentSongArtistAlbums","setCurrentUser","setCategorySublist","setCategorySublistTitle","currentPlaylistPlayingId","setCurrentPlaylistPlayingId","setPlaylistTracks","setRecentlyPlayedSongs","setMyTopArtists","setMyTopTracks","setMusicCategories","setArtistDetails","artistTopTracks","setArtistTopTracks","showArtistDetails","setShowArtistDetails","setSongProgress","setShowArtistsCategory","setShowNewReleasesCategory","setShowSavedTracks","setShowMyPlaylists","setRelatedArtists","setMyPlaylist","setMyPlaylistTitle","setMySavedTracks","setCreatePlaylistSearchData","openSnackbar","setOpenSnackbar","openAlert","setOpenAlert","handleCloseAlert","getMe","addEventListener","getMyRecentPlayedSongs","getMyTopArtists","getMyTopTracks","getMySavedTracks","searchterm","cancel","res","createPlaylistSearchTracks","getNewReleases","getMusicCategories","getMyPlaylists","getMyPlaylistsForSearchResults","getAudioAnalysisForTrack","getPlaylist","getPlaylistTracks","offset","error","albumId","getAlbum","getArtistAlbums","t","trackIds","getTracks","get","headers","Authorization","response","limit","country","albums","getCategories","locale","categories","getMyRecentlyPlayedTracks","topArtists","topTracks","artistId","getArtistTopTracks","getMySavedAlbums","playlistId","spotifyUri","audioId","addTracksToPlaylist","snapshot_id","containsMySavedTracks","trackIsInYourMusic","addToMySavedTracks","handleCloseSnackbar","reason","action","Fragment","zIndex","alignContent","getPlaylistsForCategory","playlists","image","trackId","removeFromMySavedTracks","removeTracksFromPlaylist","longbase64uri","public","uploadCustomPlaylistCoverImage","pause","Snackbar","autoHideDuration","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","App","URLSearchParams","location","search","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64c19dbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport MusicNoteOutlinedIcon from \"@mui/icons-material/MusicNoteOutlined\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst SPOTIFY_CLIENT_ID = \"8c278abff1454cee8821faaa5f55f753\";\r\nconst SPOTIFY_CLIENT_SECRET = \"2c08edac92d848558ae56e022e10f155\";\r\nconst SPOTIFY_REDIRECT_URI = \"http://localhost:3000\";\r\n\r\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=8c278abff1454cee8821faaa5f55f753&response_type=code&redirect_uri=https://m-player13.herokuapp.com&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-read-recently-played%20user-top-read%20playlist-modify-private%20playlist-modify-public%20ugc-image-upload`;\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <MusicNoteOutlinedIcon\r\n            sx={{\r\n              fontSize: 160,\r\n              display: \"block\",\r\n              margin: \"0 auto\",\r\n              color: \"rgb(120, 120, 120)\",\r\n            }}\r\n          />\r\n          <MusicNoteOutlinedIcon\r\n            sx={{\r\n              fontSize: 160,\r\n              display: \"block\",\r\n              margin: \"0 auto\",\r\n              color: \"rgb(120, 120, 120)\",\r\n            }}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Typography style={{ textAlign: \"center\", fontSize: 17 }}>\r\n          A Web based Music Player created using SPOTIFY API\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          style={{\r\n            display: \"block\",\r\n            width: \"60%\",\r\n            margin: \"0 auto\",\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          <a href={AUTH_URL}>Login with Spotify</a>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://m-player13.herokuapp.com\";\r\n// const url = \"http://localhost:5000\";\r\n\r\nexport default function useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [refreshToken, setRefreshToken] = useState(\"\");\r\n  const [expiresIn, setExpiresIn] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${url}/login`, {\r\n        code,\r\n      })\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        setAccessToken(data.data.accessToken);\r\n        setRefreshToken(data.data.refreshToken);\r\n        setExpiresIn(data.data.expiresIn);\r\n        window.history.pushState({}, null, \"/\");\r\n      })\r\n      .catch((err) => {\r\n        // window.location = \"/\";\r\n        console.log(err.message);\r\n      });\r\n  }, [code]);\r\n  console.log(expiresIn);\r\n  useEffect(() => {\r\n    if (!accessToken || !expiresIn) return;\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post(`${url}/refresh`, {\r\n          refreshToken,\r\n        })\r\n        .then((data) => {\r\n          setAccessToken(data.data.accessToken);\r\n          setExpiresIn(data.data.expiresIn);\r\n        })\r\n        .catch((err) => {\r\n          // window.location = \"/\";\r\n          console.log(err);\r\n        });\r\n    }, (expiresIn - 60) * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  return accessToken;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Mac_Miller_Live_from_Space.6fa7f341.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Box,\r\n  Typography,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n} from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport MusicNoteOutlinedIcon from \"@mui/icons-material/MusicNoteOutlined\";\r\n\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\r\n\r\nimport noImage from \"../../assets/Mac_Miller_Live_from_Space.jpg\";\r\n\r\nfunction convertUppercase(word) {\r\n  return word.toUpperCase();\r\n}\r\n\r\nconst allCategories = [\r\n  {\r\n    name: \"Home\",\r\n    description:\r\n      \"Get a better understanding of where your traffic is coming from.\",\r\n    href: \"#\",\r\n    icon: <HomeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"New Releases\",\r\n    description: \"Speak directly to your customers in a more meaningful way.\",\r\n    href: \"#\",\r\n    icon: <TrendingUpIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"Artists\",\r\n    description: \"Your customers' data will be safe and secure.\",\r\n    href: \"#\",\r\n    icon: <PersonIcon fontSize=\"small\" />,\r\n  },\r\n  // {\r\n  //   name: \"Categories\",\r\n  //   description: \"Your customers' data will be safe and secure.\",\r\n  //   href: \"#\",\r\n  //   icon: <CategoryIcon />,\r\n  // },\r\n];\r\n\r\nconst myMusic = [\r\n  {\r\n    name: \"Saved Tracks\",\r\n    description:\r\n      \"Get a better understanding of where your traffic is coming from.\",\r\n    href: \"#\",\r\n    icon: <SaveAltIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    name: \"My Playlists\",\r\n    description: \"Speak directly to your customers in a more meaningful way.\",\r\n    href: \"#\",\r\n    icon: <PlaylistPlayIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst Header = (\r\n  {\r\n    searchTerm,\r\n    setSearchTerm,\r\n    setCategory,\r\n    drawerWidth,\r\n    mobileOpen,\r\n    setMobileOpen,\r\n    width,\r\n    currentUser,\r\n  },\r\n  props\r\n) => {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const { window } = props;\r\n  const [showStyledInputBaseMobile, setShowStyledInputBaseMobile] = useState(\r\n    false\r\n  );\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const SearchIconWrapperMobile = styled(\"div\")(({ theme }) => ({\r\n    margin: theme.spacing(0, 0),\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"40ch\",\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  const StyledInputBaseMobile = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(1)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"100%\",\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (searchTerm !== \"\") {\r\n      setShowStyledInputBaseMobile(true);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  const drawer =\r\n    currentUser !== undefined ? (\r\n      <div>\r\n        <div\r\n          style={{\r\n            padding: \"20px 100px 20px 20px\",\r\n          }}\r\n        >\r\n          {console.log(currentUser)}\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              border: \"1px solid rgb(200, 200, 200)\",\r\n              borderRadius: 14,\r\n            }}\r\n          >\r\n            <img\r\n              class=\" rounded-full\"\r\n              style={{ borderRadius: 10 }}\r\n              src={\r\n                currentUser.images.length > 0\r\n                  ? currentUser.images[0].url\r\n                  : noImage\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ padding: \"0 20px 20px 20px\" }}>\r\n          {currentUser.display_name ? (\r\n            <Typography\r\n              style={{\r\n                fontSize: 14,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 2,\r\n              }}\r\n            >\r\n              {currentUser.display_name}\r\n            </Typography>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {currentUser.email ? (\r\n            <Typography style={{ marginTop: 6, fontSize: 13 }}>\r\n              {currentUser.email}\r\n            </Typography>\r\n          ) : null}\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {allCategories.map((category, index) => (\r\n            <ListItem\r\n              selected={selectedCategory === convertUppercase(category.name)}\r\n              button\r\n              key={category.name}\r\n              onClick={(e) => {\r\n                setCategory(category.name);\r\n                setMobileOpen(false);\r\n                setSelectedCategory(e.target.innerText);\r\n                console.log(e.target.innerText, category.name);\r\n              }}\r\n            >\r\n              {console.log(category.name)}\r\n              <ListItemIcon style={{ marginLeft: 10 }}>\r\n                {category.icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 13,\r\n                      marginLeft: -2,\r\n                      color: \"black\",\r\n                      letterSpacing: 1.5,\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    {category.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography\r\n          style={{\r\n            margin: \"18px 0\",\r\n            marginLeft: 30,\r\n            fontSize: 15,\r\n            letterSpacing: 4,\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          MY MUSIC\r\n        </Typography>\r\n        <List>\r\n          {myMusic.map((music, index) => (\r\n            <ListItem\r\n              selected={selectedCategory === convertUppercase(music.name)}\r\n              button\r\n              key={music.name}\r\n              onClick={(e) => {\r\n                setCategory(music.name);\r\n                setMobileOpen(false);\r\n                setSelectedCategory(e.target.innerText);\r\n                console.log(e.target.innerText);\r\n              }}\r\n            >\r\n              <ListItemIcon style={{ marginLeft: 10 }}>\r\n                {music.icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: 13,\r\n                      marginLeft: -2,\r\n                      color: \"black\",\r\n                      letterSpacing: 1.5,\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    {music.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    ) : null;\r\n\r\n  return currentUser !== undefined ? (\r\n    <>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar\r\n          position=\"static\"\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          sx={{\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n            ml: { sm: `${drawerWidth}px` },\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  lg: \"flex\",\r\n                  md: \"flex\",\r\n                  sm: \"none\",\r\n                  xs: \"none\",\r\n                },\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <MusicNoteOutlinedIcon\r\n                  sx={{\r\n                    fontSize: 24,\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"rgb(120, 120, 120)\",\r\n                  }}\r\n                />\r\n                <Typography\r\n                  noWrap\r\n                  component=\"div\"\r\n                  sx={{ flexGrow: 1, display: \"block\", fontSize: 18 }}\r\n                >\r\n                  mPlayer\r\n                </Typography>\r\n              </div>\r\n              {/* <Search style={{ position: \"relative\" }}>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon color=\"primary\" />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                  autoFocus\r\n                  placeholder=\"Search for songs and artists..\"\r\n                  inputProps={{ \"aria-label\": \"search\" }}\r\n                  value={searchTerm}\r\n                  onChange={(e) => {\r\n                    setSearchTerm(e.target.value);\r\n                  }}\r\n                  style={{\r\n                    borderWidth: 1,\r\n                    borderColor: \"rgb(220, 220, 220)\",\r\n                    marginRight: 30,\r\n                    borderRadius: 10,\r\n                    fontSize: 15,\r\n                  }}\r\n                />\r\n                {searchTerm ? (\r\n                  <span style={{ position: \"absolute\", right: 40, top: 4 }}>\r\n                    <IconButton onClick={() => setSearchTerm(\"\")} size=\"small\">\r\n                      <ClearIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </span>\r\n                ) : null}\r\n              </Search> */}\r\n              <div style={{ position: \"relative\" }}>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon color=\"primary\" />\r\n                </SearchIconWrapper>\r\n                <input\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search for songs and artists\"\r\n                  value={searchTerm}\r\n                  style={{ width: 400, fontSize: 15 }}\r\n                  onChange={(e) => {\r\n                    setSearchTerm(e.target.value);\r\n                  }}\r\n                />\r\n                {searchTerm ? (\r\n                  <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                    <IconButton onClick={() => setSearchTerm(\"\")} size=\"small\">\r\n                      <ClearIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\" md:flex items-center\">\r\n                <img\r\n                  class=\"w-10 h-10 rounded-full\"\r\n                  style={{ borderRadius: 10 }}\r\n                  src={\r\n                    currentUser.images.length > 0\r\n                      ? currentUser.images[0].url\r\n                      : noImage\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  lg: \"none\",\r\n                  md: \"none\",\r\n                  sm: \"block\",\r\n                  xs: \"block\",\r\n                },\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {showStyledInputBaseMobile ? (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Search\r\n                    onClick={() => {\r\n                      setShowStyledInputBaseMobile(false);\r\n                      setSearchTerm(\"\");\r\n                    }}\r\n                  >\r\n                    <ArrowBackIcon fontSize=\"small\" />\r\n                  </Search>\r\n                  <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                    <input\r\n                      autoFocus\r\n                      className=\" focus:outline-none text-black placeholder-gray-500  rounded-md py-2 pl-4\"\r\n                      type=\"text\"\r\n                      placeholder=\"Search for songs and artists\"\r\n                      value={searchTerm}\r\n                      style={{\r\n                        fontSize: 15,\r\n                        width: \"100%\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                      }}\r\n                    />\r\n                    {searchTerm ? (\r\n                      <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                        <IconButton\r\n                          onClick={() => setSearchTerm(\"\")}\r\n                          size=\"small\"\r\n                        >\r\n                          <ClearIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </span>\r\n                    ) : null}\r\n                  </div>\r\n                  {/* <Search\r\n                    onClick={() => {\r\n                      setShowStyledInputBaseMobile(false);\r\n                      setSearchTerm(\"\");\r\n                    }}\r\n                  >\r\n                    <ArrowBackIcon fontSize=\"small\" />\r\n                  </Search>\r\n                  <StyledInputBaseMobile\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Search for songs and artists..\"\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                    value={searchTerm}\r\n                    onChange={(e) => {\r\n                      setSearchTerm(e.target.value);\r\n                    }}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderRadius: 10,\r\n                      fontSize: 15,\r\n                    }}\r\n                  />\r\n                  {searchTerm ? (\r\n                    <span style={{ position: \"absolute\", right: 10, top: 5 }}>\r\n                      <IconButton\r\n                        onClick={() => setSearchTerm(\"\")}\r\n                        size=\"small\"\r\n                      >\r\n                        <ClearIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </span>\r\n                  ) : null} */}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {width < 582 ? (\r\n                    <IconButton\r\n                      size=\"large\"\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={handleDrawerToggle}\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                  ) : null}\r\n\r\n                  <MusicNoteOutlinedIcon\r\n                    sx={{\r\n                      fontSize: 22,\r\n                      display: \"block\",\r\n                      margin: \"0 auto\",\r\n                      color: \"rgb(120, 120, 120)\",\r\n                    }}\r\n                  />\r\n                  <Typography\r\n                    noWrap\r\n                    component=\"div\"\r\n                    sx={{ flexGrow: 1, display: \"block\", fontSize: 17 }}\r\n                  >\r\n                    mPlayer\r\n                  </Typography>\r\n\r\n                  <Search\r\n                    style={{ position: \"relative\", marginRight: 10 }}\r\n                    onClick={() => setShowStyledInputBaseMobile(true)}\r\n                  >\r\n                    <IconButton>\r\n                      <SearchIconWrapperMobile>\r\n                        <SearchIcon color=\"primary\" />\r\n                      </SearchIconWrapperMobile>\r\n                    </IconButton>\r\n                  </Search>\r\n                  <div className=\" md:flex items-center\">\r\n                    <img\r\n                      class=\"w-10 h-10 rounded-full\"\r\n                      style={{ borderRadius: 10 }}\r\n                      src={\r\n                        currentUser.images.length > 0\r\n                          ? currentUser.images[0].url\r\n                          : noImage\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        style={{ backgroundColor: \"rgb(240, 240, 240)\" }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", sm: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default Header;\r\n","import { useRef } from \"react\";\r\nimport { IconButton, Divider, Tooltip } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst RecentlyPlayedMobile = ({\r\n  recentlyPlayedSongs,\r\n  filteredRecentlyPlayedSongs,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  const recentlyPlayedLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    recentlyPlayedLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5%\" }}>\r\n      <Divider />\r\n      <div style={{ marginTop: \"5%\" }}>\r\n        <div\r\n          style={{\r\n            margin: 12,\r\n            marginBottom: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <p\r\n            className=\"text-gray-900\"\r\n            style={{\r\n              fontSize: 13,\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            RECENTLY PLAYED ({recentlyPlayedSongs.slice(0, 20).length})\r\n          </p>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <IconButton onClick={() => scroll(-360)}>\r\n              <ArrowLeftIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => scroll(360)}>\r\n              <ArrowRightIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <ul\r\n          style={{\r\n            display: \"flex\",\r\n            overflowX: \"scroll\",\r\n            width: \"100%\",\r\n            scrollBehavior: \"smooth\",\r\n          }}\r\n          ref={recentlyPlayedLi}\r\n          className=\"sidebar\"\r\n        >\r\n          {recentlyPlayedSongs &&\r\n            filteredRecentlyPlayedSongs.slice(0, 20)?.map((song, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    position: \"relative\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <li\r\n                    key={song.track.id}\r\n                    style={{\r\n                      marginRight: 10,\r\n                      padding: 10,\r\n                      alignItems: \"center\",\r\n                      listStyleType: \"none\",\r\n                    }}\r\n                    className=\"py-1 rounded-md overflow-hidden border border-gray-200 cardHover\"\r\n                  >\r\n                    <div\r\n                      // style={{ padding: 6 }}\r\n                      className=\"ml-1 mr-1 mb-2 w-36 h-36 rounded-md overflow-hidden \"\r\n                    >\r\n                      {song.track.album.images[0] !== undefined ? (\r\n                        <img\r\n                          src={song.track.album.images[0].url}\r\n                          // alt={album.id ? album.images[0].url : noImage}\r\n                          className=\"w-full h-full object-center object-cover\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={noImage}\r\n                          alt={\r\n                            song.track.album.id\r\n                              ? song.track.album.images[0].url\r\n                              : noImage\r\n                          }\r\n                          className=\"w-full h-full object-center object-cover\"\r\n                        />\r\n                      )}\r\n\r\n                      {floatingPlayerPlay &&\r\n                      song.track.id === currentSongPlayingId ? (\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            bottom: 1,\r\n                            left: 9,\r\n                            // backgroundColor: \"white\",\r\n                            padding: 17,\r\n                            paddingRight: 19,\r\n                            borderTopRightRadius: 10,\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: 6,\r\n                              bottom: 2,\r\n                            }}\r\n                          >\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                            <span className=\"bar\"></span>\r\n                          </span>\r\n                        </div>\r\n                      ) : null}\r\n\r\n                      <div\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 6,\r\n                          right: 20,\r\n                        }}\r\n                      >\r\n                        {song.track.id === currentSongPlayingId ? (\r\n                          floatingPlayerPlay ? (\r\n                            <Tooltip placement=\"top\" title=\"Pause\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  song.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Pause\");\r\n                                  setFloatingPlayerPlay(false);\r\n                                }}\r\n                              >\r\n                                <PauseIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip placement=\"top\" title=\"Play\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  song.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Play\");\r\n                                  setFloatingPlayerPlay(true);\r\n                                }}\r\n                              >\r\n                                <PlayArrowIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          )\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(240, 240, 240)\",\r\n                              }}\r\n                              color={\r\n                                song.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                setChooseTrack(song.track);\r\n                                setCurrentSongPlayingId(song.track.id);\r\n                                setPlayButtonPressedCount(\r\n                                  (playButtonPressedCount += 1)\r\n                                );\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                      </div>\r\n                      {/* <p\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: 16,\r\n                          bottom: 70,\r\n                        }}\r\n                      >\r\n                        {song.track.popularity}\r\n                      </p> */}\r\n                    </div>\r\n\r\n                    <div className=\"ml-1 flex-1 flex flex-col mr-2\">\r\n                      <div>\r\n                        <div\r\n                          className={`flex justify-between text-${\r\n                            song.track.id === currentSongPlayingId\r\n                              ? \"blue\"\r\n                              : \"gray\"\r\n                          }-900`}\r\n                          style={{ fontSize: 13.5, alignItems: \"center\" }}\r\n                        >\r\n                          <p>{`${truncate(song.track.name)}`}</p>\r\n                        </div>\r\n\r\n                        <div class=\"mt-1 mb-3 flex items-center text-sm text-gray-500\">\r\n                          <p\r\n                            className={`flex items-center text-sm text-${\r\n                              song.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-400`}\r\n                            style={{ fontSize: 13.4 }}\r\n                          >\r\n                            {song.track.artists[0].name}\r\n                          </p>\r\n                        </div>\r\n\r\n                        {/* <div\r\n                          style={{ fontSize: 12.6 }}\r\n                          className=\"mt-1 flex items-center\"\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                              fontSize: 12.6,\r\n                            }}\r\n                          >\r\n                            {song.track.album.album_type}\r\n                          </div>\r\n                          <div\r\n                            class=\"text-base font-normal mx-1\"\r\n                            style={{ fontSize: 40 }}\r\n                          >\r\n                            ·\r\n                          </div>\r\n\r\n                          <span>\r\n                            {song.track.album.total_tracks}{\" \"}\r\n                            {song.track.album.total_tracks > 1\r\n                              ? \"tracks\"\r\n                              : \"track\"}\r\n                          </span>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentlyPlayedMobile;\r\n","export default __webpack_public_path__ + \"static/media/no-image1.cbfa1c9f.jpg\";","import React, { useEffect } from \"react\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 23 ? str.substr(0, 23) + \"...\" : str;\r\n};\r\n\r\nconst AlbumTitle = ({ album, playlistTracks }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(album);\r\n\r\n  return album ? (\r\n    <>\r\n      <div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              padding: \"0 22%\",\r\n              width: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n              height: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n              borderRadius: \"50%\",\r\n            }}\r\n            src={album.images ? album.images[0].url : noImage}\r\n            alt=\"\"\r\n            className=\"\"\r\n          />\r\n\r\n          <div\r\n            className=\"px-4 pt-4 mt-4 \"\r\n            style={{\r\n              background: \"white\",\r\n              borderColor: \"rgb(220, 220, 220)\",\r\n              borderWidth: 1,\r\n              bottom: 0,\r\n              right: 0,\r\n              left: 0,\r\n              color: \"white\",\r\n              paddingBottom: 20,\r\n              borderRadius: 6,\r\n            }}\r\n          >\r\n            {album.label ? (\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: 24,\r\n                    fontWeight: \"bold\",\r\n                    textTransform: \"capitalize\",\r\n                    letterSpacing: 1,\r\n                    color: \"grey\",\r\n                  }}\r\n                >\r\n                  {truncate(album.name)}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div\r\n              style={{\r\n                color: \"black\",\r\n                margin: \"8px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n                className=\"text-gray-400\"\r\n              >\r\n                <span style={{ fontSize: 13 }}>{album.label}</span>\r\n                {album.label ? (\r\n                  <div\r\n                    class=\"text-base font-normal mx-2\"\r\n                    style={{ fontSize: 40 }}\r\n                  >\r\n                    ·\r\n                  </div>\r\n                ) : null}\r\n                {album.total_tracks ? (\r\n                  album.total_tracks > 1 ? (\r\n                    <div style={{ fontSize: 13 }}>\r\n                      {album.total_tracks} tracks\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ fontSize: 13 }}>\r\n                      {\" \"}\r\n                      {album.total_tracks} track\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div style={{ fontSize: 13 }}>{playlistTracks} tracks</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                fontSize: 13,\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {album.artists && album.artists.length < 4 ? (\r\n                  <span>{album.artists[0].name}</span>\r\n                ) : (\r\n                  <>\r\n                    {album.artists &&\r\n                      album.artists\r\n                        .filter((artist, index) => index < 3)\r\n                        .map((artist, index) =>\r\n                          index >= 2 ? (\r\n                            <span key={artist.id}>and more...</span>\r\n                          ) : (\r\n                            <span\r\n                              key={artist.id}\r\n                              style={\r\n                                index !== 1\r\n                                  ? { marginLeft: 0 }\r\n                                  : { marginLeft: 3 }\r\n                              }\r\n                            >\r\n                              {artist.name}\r\n                              {index !== 1 ? \", \" : \" \"}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                  </>\r\n                )}\r\n                {album.label ? (\r\n                  <div\r\n                    class=\"text-base font-normal mx-2\"\r\n                    style={{ fontSize: 40 }}\r\n                  >\r\n                    ·\r\n                  </div>\r\n                ) : null}\r\n                {album.release_date ? (\r\n                  <div style={{ fontSize: 13 }}>\r\n                    {`${album.release_date.split(\"-\")[2]}-${\r\n                      album.release_date.split(\"-\")[1]\r\n                    }-${album.release_date.split(\"-\")[0]}`}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <span>\r\n                {album.followers ? (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <PeopleAltIcon fontSize=\"small\" />\r\n                    <span style={{ marginLeft: 6 }}>\r\n                      {album.followers.total} followers\r\n                    </span>\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <ThumbUpIcon fontSize=\"small\" />\r\n                    <span style={{ fontSize: 13, marginLeft: 6 }}>\r\n                      {album.popularity}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </span>\r\n            </div>\r\n            <span\r\n              style={{\r\n                fontSize: 13,\r\n                fontStyle: \"italic\",\r\n              }}\r\n            >\r\n              {album.description}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default AlbumTitle;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst AlbumTracks = ({\r\n  albumTracks,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  console.log(floatingPlayerPlay);\r\n\r\n  return albumTracks ? (\r\n    <div>\r\n      {albumTracks.length !== 0 ? (\r\n        albumTracks.items ? (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div className={albumTracks.length > 5 ? \"songsBox\" : null}>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={albumTracks ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {/* {console.log(albumTracks)} */}\r\n                      {albumTracks.items?.map((audio) =>\r\n                        audio.track !== null ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.track.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                // onClick={() => selectAlbum(audio.track.track.id)}\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.track.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.track.album.images[0].url}\r\n                                    // alt={album.id ? album.images[0].url : noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    // alt={album.id ? album.images[0].url : noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.track.name\r\n                                        ? truncateMobile(audio.track.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.track.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.track.artists[0].name\r\n                                          ? audio.track.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.track.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    className={`text-${\r\n                                      audio.track.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      display: \"flex\",\r\n                                      position: \"relative\",\r\n                                      justifyContent: \"space-between\",\r\n                                    }}\r\n                                  >\r\n                                    {msToTime(audio.track.duration_ms)}\r\n\r\n                                    {audio.track.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <span id=\"bars\">\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                        </span>\r\n                                      ) : null\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                                lol\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 6,\r\n                                    top: 14,\r\n                                  }}\r\n                                >\r\n                                  {audio.track.id === currentSongPlayingId ? (\r\n                                    floatingPlayerPlay ? (\r\n                                      <Tooltip placement=\"top\" title=\"Pause\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Pause\");\r\n                                            setFloatingPlayerPlay(false);\r\n                                          }}\r\n                                        >\r\n                                          <PauseIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.track.id ===\r\n                                            currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            console.log(\"Play\");\r\n                                            setFloatingPlayerPlay(true);\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          setChooseTrack(audio.track);\r\n                                          setCurrentSongPlayingId(\r\n                                            audio.track.id\r\n                                          );\r\n                                          setPlayButtonPressedCount(\r\n                                            (playButtonPressedCount += 1)\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ) : null\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col mt-2 mb-2\">\r\n            <div>\r\n              <div className={albumTracks.length > 5 ? \"songsBox\" : null}>\r\n                <div className=\" align-middle \">\r\n                  <div>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className={albumTracks ? \"sidebarMobile\" : null}\r\n                    >\r\n                      {/* {console.log(albumTracks)} */}\r\n                      {albumTracks?.map((audio) => (\r\n                        <div\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"0 auto\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          key={audio.id}\r\n                        >\r\n                          <li\r\n                            style={{ alignItems: \"center\" }}\r\n                            className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                          >\r\n                            <div\r\n                              // onClick={() => selectAlbum(audio.track.id)}\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              {audio.album.images[0] !== undefined ? (\r\n                                <img\r\n                                  src={audio.album.images[0].url}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  src={noImage}\r\n                                  // alt={album.id ? album.images[0].url : noImage}\r\n                                  className=\"w-full h-full object-center object-cover\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                              style={{ position: \"relative\" }}\r\n                            >\r\n                              <div>\r\n                                <div\r\n                                  className={`flex justify-between text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-600`}\r\n                                >\r\n                                  <Typography\r\n                                    style={{\r\n                                      fontSize: 13,\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {audio.name\r\n                                      ? truncateMobile(audio.name)\r\n                                      : \"No name\"}\r\n                                  </Typography>\r\n                                </div>\r\n\r\n                                <div\r\n                                  className={`mt-1 mb-1 flex items-center  text-${\r\n                                    audio.id === currentSongPlayingId\r\n                                      ? \"blue\"\r\n                                      : \"gray\"\r\n                                  }-400`}\r\n                                >\r\n                                  {audio.artists.length < 2 ? (\r\n                                    <span\r\n                                      style={{ fontSize: 12 }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"blue\"\r\n                                          : \"\"\r\n                                      }\r\n                                    >\r\n                                      {audio.artists[0].name\r\n                                        ? audio.artists[0].name\r\n                                        : \"No artist name\"}\r\n                                    </span>\r\n                                  ) : (\r\n                                    <>\r\n                                      <span style={{ fontSize: 12 }}>\r\n                                        {audio.artists\r\n                                          .filter((artist, index) => index < 3)\r\n                                          .map((artist, index) =>\r\n                                            index >= 2 ? null : (\r\n                                              <span\r\n                                                key={artist.id}\r\n                                                style={\r\n                                                  index === 1\r\n                                                    ? {\r\n                                                        fontSize: 12,\r\n                                                        marginLeft: 4,\r\n                                                      }\r\n                                                    : { fontSize: 12 }\r\n                                                }\r\n                                              >\r\n                                                {index === 1\r\n                                                  ? truncateArtistNameMobile(\r\n                                                      artist.name\r\n                                                    )\r\n                                                  : artist.name}\r\n\r\n                                                {index !== 1 ? \",\" : \"\"}\r\n                                              </span>\r\n                                            )\r\n                                          )}\r\n                                      </span>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                  </div>\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <span id=\"bars\">\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                          <span className=\"bar\"></span>\r\n                                        </span>\r\n                                      ) : null\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  right: 6,\r\n                                  top: 14,\r\n                                }}\r\n                              >\r\n                                {audio.id === currentSongPlayingId ? (\r\n                                  floatingPlayerPlay ? (\r\n                                    <Tooltip placement=\"top\" title=\"Pause\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Pause\");\r\n                                          setFloatingPlayerPlay(false);\r\n                                        }}\r\n                                      >\r\n                                        <PauseIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Play\");\r\n                                          setFloatingPlayerPlay(true);\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )\r\n                                ) : (\r\n                                  <Tooltip placement=\"top\" title=\"Play\">\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      style={{\r\n                                        backgroundColor: \"rgb(240, 240, 240)\",\r\n                                      }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"primary\"\r\n                                          : \"inherit\"\r\n                                      }\r\n                                      onClick={() => {\r\n                                        setChooseTrack(audio);\r\n                                        setCurrentSongPlayingId(audio.id);\r\n                                        setPlayButtonPressedCount(\r\n                                          (playButtonPressedCount += 1)\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      <PlayArrowIcon />\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={28} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default AlbumTracks;\r\n","import { useRef } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport AlbumTitle from \"../../AlbumTitle/AlbumTitle\";\r\nimport AlbumTracks from \"../../AlbumTitle/AlbumTracks/AlbumTracks\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 20) + \"...\" : str;\r\n};\r\n\r\nconst NewReleases = ({\r\n  newReleases,\r\n  selectAlbum,\r\n  album,\r\n  setShowAlbumList,\r\n  searchTerm,\r\n  searchTracks,\r\n  playlistTracks,\r\n  setSearchData,\r\n  setAlbumTracks,\r\n  albumTracks,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  isLoading,\r\n}) => {\r\n  const newReleasesLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    newReleasesLi.current.scrollLeft += scrollOffset;\r\n  };\r\n  console.log(newReleases);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          NEW RELEASES ({newReleases.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"sidebar\"\r\n        ref={newReleasesLi}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          marginLeft: 12,\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {newReleases?.map((song) => (\r\n          <li\r\n            key={song.id}\r\n            onClick={() => selectAlbum(song.id)}\r\n            style={\r\n              album.id === song.id\r\n                ? {\r\n                    marginRight: 20,\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"rgb(240, 240, 240)\",\r\n                  }\r\n                : { marginRight: 20, alignItems: \"center\" }\r\n            }\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-32 h-32 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              <img\r\n                src={song.images ? song.images[0].url : noImage}\r\n                className=\"w-full h-full object-center object-cover\"\r\n                style={{\r\n                  borderRadius: 100,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(song.name)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {!isLoading ? (\r\n        <div\r\n          style={{\r\n            paddingTop: \"6%\",\r\n            paddingBottom: \"2%\",\r\n            alignItems: \"center\",\r\n          }}\r\n          className=\"\"\r\n        >\r\n          <AlbumTitle\r\n            album={album}\r\n            setShowAlbumList={setShowAlbumList}\r\n            searchTerm={searchTerm}\r\n            searchTracks={searchTracks}\r\n            playlistTracks={playlistTracks}\r\n            setSearchData={setSearchData}\r\n            setAlbumTracks={setAlbumTracks}\r\n          />\r\n          <div className=\"mt-6\">\r\n            <AlbumTracks\r\n              albumTracks={albumTracks}\r\n              chooseTrack={chooseTrack}\r\n              setChooseTrack={setChooseTrack}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={30} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","import { Hidden, IconButton, Grid, Paper, Tooltip } from \"@mui/material\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport React from \"react\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst MyTopTracks = ({\r\n  myTopTracks,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div style={{ margin: 12, marginTop: 30 }}>\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY TOP TRACKS ({myTopTracks.length})\r\n        </p>\r\n      </div>\r\n      {/* {console.log(myTopTracks)} */}\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        // columns={{ xs: 4, sm: 8, md: 12 }}\r\n      >\r\n        {myTopTracks?.map((track, index) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\r\n            <Item\r\n              variant=\"outlined\"\r\n              style={{ cursor: \"pointer\", position: \"relative\" }}\r\n              className=\"cardHover\"\r\n            >\r\n              <li\r\n                key={track.id}\r\n                style={{\r\n                  marginRight: 10,\r\n                  alignItems: \"center\",\r\n                  listStyleType: \"none\",\r\n                }}\r\n                className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden\"\r\n              >\r\n                <div className=\"ml-1 mr-1 mb-2 flex-shrink-0   rounded-md overflow-hidden\">\r\n                  {track.album.images[0] !== undefined ? (\r\n                    <img\r\n                      src={track.album.images[0].url}\r\n                      // alt={album.id ? album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={noImage}\r\n                      alt={track.album.id ? track.album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  )}\r\n                  {floatingPlayerPlay && track.id === currentSongPlayingId ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 1,\r\n                        left: 14,\r\n                        // backgroundColor: \"white\",\r\n                        padding: 17,\r\n                        paddingRight: 19,\r\n                        borderTopRightRadius: 10,\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: 6,\r\n                          bottom: 8,\r\n                        }}\r\n                      >\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                      </span>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  <div style={{ position: \"absolute\", bottom: 10, right: 10 }}>\r\n                    {track.id === currentSongPlayingId ? (\r\n                      floatingPlayerPlay ? (\r\n                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              console.log(\"Pause\");\r\n                              setFloatingPlayerPlay(false);\r\n                            }}\r\n                          >\r\n                            <PauseIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip placement=\"top\" title=\"Play\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              console.log(\"Play\");\r\n                              setFloatingPlayerPlay(true);\r\n                            }}\r\n                          >\r\n                            <PlayArrowIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )\r\n                    ) : (\r\n                      <Tooltip placement=\"top\" title=\"Play\">\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          style={{\r\n                            backgroundColor: \"rgb(220, 220, 220)\",\r\n                          }}\r\n                          color={\r\n                            track.id === currentSongPlayingId\r\n                              ? \"primary\"\r\n                              : \"inherit\"\r\n                          }\r\n                          onClick={() => {\r\n                            setChooseTrack(track);\r\n                            setCurrentSongPlayingId(track.id);\r\n                            setPlayButtonPressedCount(\r\n                              (playButtonPressedCount += 1)\r\n                            );\r\n                          }}\r\n                        >\r\n                          <PlayArrowIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </div>\r\n                  <p\r\n                    className={`flex justify-between text-${\r\n                      track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                    }-600`}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 16,\r\n                      bottom: 52,\r\n                      fontSize: 13,\r\n                    }}\r\n                  >\r\n                    {track.popularity}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"ml-1 mt-2 mb-2 flex-1 flex flex-col mr-2\">\r\n                  <div>\r\n                    <div\r\n                      className={`flex justify-between text-${\r\n                        track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                      }-600`}\r\n                      style={{\r\n                        fontSize: 13,\r\n                        alignItems: \"center\",\r\n                        textTransform: \"capitalize\",\r\n                      }}\r\n                    >\r\n                      <p>{`${truncate(track.name)}`}</p>\r\n                    </div>\r\n\r\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\r\n                      <p\r\n                        className={`text-sm text-${\r\n                          track.id === currentSongPlayingId ? \"blue\" : \"gray\"\r\n                        }-400`}\r\n                        style={{ fontSize: 12 }}\r\n                      >\r\n                        {track.artists[0].name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* <div\r\n                      style={{ fontSize: 12.6 }}\r\n                      className=\"mt-1 flex items-center\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: 12.6,\r\n                        }}\r\n                      >\r\n                        {track.album.album_type}\r\n                      </div>\r\n                      <div\r\n                        class=\"text-base font-normal mx-1\"\r\n                        style={{ fontSize: 40 }}\r\n                      >\r\n                        ·\r\n                      </div>\r\n\r\n                      <span>\r\n                        {track.album.total_tracks}{\" \"}\r\n                        {track.album.total_tracks > 1 ? \"tracks\" : \"track\"}\r\n                      </span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTopTracks;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst MyTopArtists = ({\r\n  myTopArtists,\r\n  noImage,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n  artistDetails,\r\n}) => {\r\n  const artistLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  console.log(artistDetails);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY TOP ARTISTS ({myTopArtists.length})\r\n        </p>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <ul\r\n        role=\"list\"\r\n        ref={artistLi}\r\n        className=\"sidebar\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          marginLeft: 12,\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {myTopArtists?.map((artist) => (\r\n          <li\r\n            key={artist.id}\r\n            onClick={() => {\r\n              getArtist(artist.id);\r\n              getArtistRelatedArtists(artist.id);\r\n            }}\r\n            style={\r\n              artistDetails.id === artist.id\r\n                ? {\r\n                    marginRight: 10,\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"rgb(240, 240, 240)\",\r\n                  }\r\n                : { marginRight: 10, alignItems: \"center\" }\r\n            }\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              {artist.images[0] !== undefined ? (\r\n                <img\r\n                  src={artist.images[0].url}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={noImage}\r\n                  alt={artist.id ? artist.images[0].url : noImage}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{ borderRadius: 100 }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(artist.name)}</p>\r\n                  {/* <p style={{ fontSize: 13 }}>{artist.popularity}</p> */}\r\n                </div>\r\n\r\n                {/* <div\r\n                    style={{ fontSize: 13, marginTop: 6, marginBottom: 4 }}\r\n                    className=\"mt-1 flex items-center text-gray-500\"\r\n                  >\r\n                    <PeopleAltIcon fontSize=\"small\" />{\" \"}\r\n                    <span style={{ marginLeft: 4 }}>\r\n                      {formatFollowersCount(artist.followers.total)} followers\r\n                    </span>\r\n                  </div> */}\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTopArtists;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst MyCategories = ({\r\n  musicCategories,\r\n  selectAlbum,\r\n  selectCategorySublist,\r\n}) => {\r\n  const musicLi = useRef();\r\n  // console.log(musicLi.current.scrollLeft);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    musicLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          CATEGORIES ({musicCategories.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"sidebar\"\r\n        ref={musicLi}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {musicCategories?.map((musCat) => (\r\n          <li\r\n            key={musCat.id}\r\n            onClick={() => {\r\n              musCat.href.split(\"/\")[4] === \"albums\"\r\n                ? selectAlbum(musCat.id)\r\n                : selectCategorySublist(musCat);\r\n            }}\r\n            style={{ marginRight: 20, alignItems: \"center\" }}\r\n            className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                border: \"1px solid rgb(220, 220, 220)\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              <img\r\n                src={musCat.icons ? musCat.icons[0].url : noImage}\r\n                // alt={album.id ? album.images[0].url : noImage}\r\n                className=\"w-full h-full object-center object-cover\"\r\n                style={{ borderRadius: 100 }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    textTransform: \"uppercase\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    letterSpacing: 0.5,\r\n                  }}\r\n                >\r\n                  <p>{musCat.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n        <div></div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCategories;\r\n","import { Hidden, Box } from \"@mui/material\";\r\n\r\nimport RecentlyPlayedMobile from \"./RecentlyPlayed/RecentlyPlayedMobile\";\r\nimport NewReleases from \"./NewReleases/NewReleases\";\r\nimport MyTopTracks from \"./MyTopTracks/MyTopTracks\";\r\nimport MyTopArtists from \"./MyTopArtists/MyTopArtists\";\r\nimport MyCategories from \"./MyCategories/MyCategories\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst Home = ({\r\n  album,\r\n  setShowAlbumList,\r\n  searchTerm,\r\n  searchTracks,\r\n  playlistTracks,\r\n  setSearchData,\r\n  setAlbumTracks,\r\n  setChooseTrack,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  recentlyPlayedSongs,\r\n  newReleases,\r\n  myTopArtists,\r\n  myTopTracks,\r\n  selectAlbum,\r\n  musicCategories,\r\n  selectCategorySublist,\r\n  getArtist,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  albumTracks,\r\n  chooseTrack,\r\n}) => {\r\n  // console.log(albumTracks);\r\n  //Removing duplicate entries from recently played songs array\r\n  let filteredRecentlyPlayedSongs = recentlyPlayedSongs\r\n    .map((e) => e.track[\"id\"])\r\n    .map((e, i, final) => final.indexOf(e) === i && i)\r\n    .filter((obj) => recentlyPlayedSongs[obj])\r\n    .map((e) => recentlyPlayedSongs[e]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Hidden lgDown> */}\r\n      <div className=\"flex flex-col \">\r\n        <div className=\"\">\r\n          <MyCategories\r\n            musicCategories={musicCategories}\r\n            selectAlbum={selectAlbum}\r\n            selectCategorySublist={selectCategorySublist}\r\n            noImage={noImage}\r\n          />\r\n          <MyTopTracks\r\n            myTopTracks={myTopTracks}\r\n            noImage={noImage}\r\n            floatingPlayerPlay={floatingPlayerPlay}\r\n            setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n            currentSongPlayingId={currentSongPlayingId}\r\n            setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n            setChooseTrack={setChooseTrack}\r\n            setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n            playButtonPressedCount={playButtonPressedCount}\r\n          />\r\n          {/* <Box\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"block\", md: \"block\", lg: \"none\" },\r\n            }}\r\n          >\r\n            <RecentlyPlayedMobile\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n          </Box> */}\r\n        </div>\r\n      </div>\r\n      {/* </Hidden> */}\r\n      {/* <Hidden lgUp>\r\n        <div className=\"flex flex-col \">\r\n          <div className=\"lg:flex md:block sm:block\">\r\n            <MyTopTracks\r\n              myTopTracks={myTopTracks}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </Hidden> */}\r\n\r\n      {/* <div className=\"bg-white \">\r\n          <div className=\"flow-root\">\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <NewReleases\r\n              newReleases={newReleases}\r\n              selectAlbum={selectAlbum}\r\n              noImage={noImage}\r\n              album={album}\r\n              setShowAlbumList={setShowAlbumList}\r\n              searchTerm={searchTerm}\r\n              searchTracks={searchTracks}\r\n              playlistTracks={playlistTracks}\r\n              setSearchData={setSearchData}\r\n              setAlbumTracks={setAlbumTracks}\r\n              albumTracks={albumTracks}\r\n              chooseTrack={chooseTrack}\r\n              setChooseTrack={setChooseTrack}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <MyTopTracks\r\n              myTopTracks={myTopTracks}\r\n              noImage={noImage}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n            />\r\n            <MyTopArtists\r\n              myTopArtists={myTopArtists}\r\n              noImage={noImage}\r\n              getArtist={getArtist}\r\n            />\r\n            <MyCategories\r\n              musicCategories={musicCategories}\r\n              selectAlbum={selectAlbum}\r\n              selectCategorySublist={selectCategorySublist}\r\n              noImage={noImage}\r\n            />\r\n          </div>\r\n        </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Popover,\r\n  Modal,\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst SearchResults = ({\r\n  searchTerm,\r\n  searchData,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  playButtonPressedCount,\r\n  setPlayButtonPressedCount,\r\n  addToSavedTracks,\r\n  anchorEl,\r\n  setAnchorEl,\r\n  myPlaylist,\r\n  addTracksToMyPlaylist,\r\n  selectPlaylistOpen,\r\n  setSelectPlaylistOpen,\r\n}) => {\r\n  const [selectCurrentTrack, setSelectCurrentTrack] = useState(null);\r\n\r\n  const [selectPlaylist, setSelectPlaylist] = useState(null);\r\n  const [selectedTrack, setSelectedTrack] = useState({});\r\n\r\n  const handleClick = (event, audio) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectCurrentTrack(audio);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelectPlaylistClose = () => {\r\n    setSelectPlaylistOpen(false);\r\n  };\r\n\r\n  console.log(myPlaylist);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <div>\r\n      <div style={{ margin: 2, marginBottom: 20, fontSize: 14 }}>\r\n        <span className=\"text-gray-400\">Showing top 20 results for</span>{\" \"}\r\n        {searchTerm ? `\"${searchTerm}\"` : null}\r\n      </div>\r\n\r\n      {searchData.length !== 0 ? (\r\n        <div className=\"flex flex-col mt-2 mb-2\">\r\n          <div>\r\n            <div className={searchData.length > 5 ? \"songsBox\" : null}>\r\n              <div className=\" align-middle \">\r\n                <div>\r\n                  <ul\r\n                    role=\"list\"\r\n                    className={searchData ? \"sidebarMobile\" : null}\r\n                  >\r\n                    {/* {console.log(searchData)} */}\r\n                    {searchData?.map((audio) => (\r\n                      <div\r\n                        style={{\r\n                          display: \"block\",\r\n                          margin: \"0 auto\",\r\n                          width: \"100%\",\r\n                        }}\r\n                        key={audio.id}\r\n                      >\r\n                        <li\r\n                          style={{ alignItems: \"center\" }}\r\n                          className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                        >\r\n                          <div\r\n                            // onClick={() => selectAlbum(audio.track.id)}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                          >\r\n                            {audio.album.images[0] !== undefined ? (\r\n                              <img\r\n                                src={audio.album.images[0].url}\r\n                                // alt={album.id ? album.images[0].url : noImage}\r\n                                className=\"w-full h-full object-center object-cover\"\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src={noImage}\r\n                                // alt={album.id ? album.images[0].url : noImage}\r\n                                className=\"w-full h-full object-center object-cover\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n\r\n                          <div\r\n                            className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                            style={{ position: \"relative\" }}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                className={`flex justify-between text-${\r\n                                  audio.id === currentSongPlayingId\r\n                                    ? \"blue\"\r\n                                    : \"gray\"\r\n                                }-600`}\r\n                              >\r\n                                <Typography\r\n                                  style={{\r\n                                    fontSize: 13,\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                >\r\n                                  {audio.name\r\n                                    ? truncateMobile(audio.name)\r\n                                    : \"No name\"}\r\n                                </Typography>\r\n                              </div>\r\n\r\n                              <div\r\n                                className={`mt-1 mb-1 flex items-center  text-${\r\n                                  audio.id === currentSongPlayingId\r\n                                    ? \"blue\"\r\n                                    : \"gray\"\r\n                                }-400`}\r\n                              >\r\n                                {audio.artists.length < 2 ? (\r\n                                  <span\r\n                                    style={{ fontSize: 12 }}\r\n                                    color={\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"\"\r\n                                    }\r\n                                  >\r\n                                    {audio.artists[0].name\r\n                                      ? audio.artists[0].name\r\n                                      : \"No artist name\"}\r\n                                  </span>\r\n                                ) : (\r\n                                  <>\r\n                                    <span style={{ fontSize: 12 }}>\r\n                                      {audio.artists\r\n                                        .filter((artist, index) => index < 3)\r\n                                        .map((artist, index) =>\r\n                                          index >= 2 ? null : (\r\n                                            <span\r\n                                              key={artist.id}\r\n                                              style={\r\n                                                index === 1\r\n                                                  ? {\r\n                                                      fontSize: 12,\r\n                                                      marginLeft: 4,\r\n                                                    }\r\n                                                  : { fontSize: 12 }\r\n                                              }\r\n                                            >\r\n                                              {index === 1\r\n                                                ? truncateArtistNameMobile(\r\n                                                    artist.name\r\n                                                  )\r\n                                                : artist.name}\r\n\r\n                                              {index !== 1 ? \",\" : \"\"}\r\n                                            </span>\r\n                                          )\r\n                                        )}\r\n                                    </span>\r\n                                  </>\r\n                                )}\r\n                              </div>\r\n                              <div\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  position: \"relative\",\r\n                                }}\r\n                                className={`text-${\r\n                                  audio.id === currentSongPlayingId\r\n                                    ? \"blue\"\r\n                                    : \"gray\"\r\n                                }-700`}\r\n                              >\r\n                                {msToTime(audio.duration_ms)}\r\n                                <div>\r\n                                  {audio.id === currentSongPlayingId ? (\r\n                                    floatingPlayerPlay ? (\r\n                                      <span id=\"bars\">\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                        <span className=\"bar\"></span>\r\n                                      </span>\r\n                                    ) : null\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                right: 6,\r\n                                top: 14,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <div>\r\n                                {audio.id === currentSongPlayingId ? (\r\n                                  floatingPlayerPlay ? (\r\n                                    <Tooltip placement=\"top\" title=\"Pause\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Pause\");\r\n                                          setFloatingPlayerPlay(false);\r\n                                        }}\r\n                                      >\r\n                                        <PauseIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  ) : (\r\n                                    <Tooltip placement=\"top\" title=\"Play\">\r\n                                      <IconButton\r\n                                        size=\"small\"\r\n                                        style={{\r\n                                          backgroundColor: \"rgb(240, 240, 240)\",\r\n                                        }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"inherit\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                          console.log(\"Play\");\r\n                                          setFloatingPlayerPlay(true);\r\n                                        }}\r\n                                      >\r\n                                        <PlayArrowIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  )\r\n                                ) : (\r\n                                  <Tooltip placement=\"top\" title=\"Play\">\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      style={{\r\n                                        backgroundColor: \"rgb(240, 240, 240)\",\r\n                                      }}\r\n                                      color={\r\n                                        audio.id === currentSongPlayingId\r\n                                          ? \"primary\"\r\n                                          : \"inherit\"\r\n                                      }\r\n                                      onClick={() => {\r\n                                        setChooseTrack(audio);\r\n                                        setCurrentSongPlayingId(audio.id);\r\n                                        setPlayButtonPressedCount(\r\n                                          (playButtonPressedCount += 1)\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      <PlayArrowIcon />\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                )}\r\n                              </div>\r\n                              <div\r\n                                style={{\r\n                                  marginLeft: 8,\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                                onClick={(event) => {\r\n                                  handleClick(event, audio);\r\n                                }}\r\n                              >\r\n                                <Tooltip placement=\"top\" title=\"More\">\r\n                                  <MoreHorizIcon\r\n                                    color={\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"primary\"\r\n                                        : \"action\"\r\n                                    }\r\n                                  />\r\n                                </Tooltip>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </div>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\",\r\n            }}\r\n          >\r\n            {/* <Typography sx={{ p: 1.5, fontSize: 14 }}>\r\n            The content of the Popover.\r\n          </Typography> */}\r\n            <List sx={{ fontSize: 14 }} dense>\r\n              <ListItem disablePadding>\r\n                <ListItemButton>\r\n                  <ListItemText\r\n                    onClick={() => {\r\n                      addToSavedTracks(selectCurrentTrack);\r\n                    }}\r\n                    primary={\r\n                      <Typography style={{ fontSize: 13 }}>\r\n                        Add to Saved Tracks\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItemButton>\r\n              </ListItem>\r\n              <ListItem disablePadding>\r\n                <ListItemButton component=\"a\" href=\"#simple-list\">\r\n                  <ListItemText\r\n                    onClick={() => {\r\n                      setSelectPlaylistOpen(true);\r\n                      setAnchorEl(null);\r\n                    }}\r\n                    primary={\r\n                      <Typography style={{ fontSize: 13 }}>\r\n                        Add to My Playlist\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            </List>\r\n          </Popover>\r\n          <Modal\r\n            open={selectPlaylistOpen}\r\n            onClose={handleSelectPlaylistClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={style}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"text-gray-900\"\r\n                  style={{\r\n                    fontSize: 15,\r\n                    letterSpacing: 1,\r\n                    textTransform: \"uppercase\",\r\n                  }}\r\n                >\r\n                  Select a Playlist\r\n                </div>\r\n                <IconButton onClick={handleSelectPlaylistClose} size=\"small\">\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </div>\r\n\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                // columns={{ xs: 4, sm: 8, md: 12 }}\r\n                style={{ marginTop: 10, height: 400, overflowY: \"scroll\" }}\r\n              >\r\n                {myPlaylist?.map((playlist, index) => (\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={6}\r\n                    xl={6}\r\n                    key={playlist.id}\r\n                  >\r\n                    <Item\r\n                      variant=\"outlined\"\r\n                      style={{ cursor: \"pointer\", position: \"relative\" }}\r\n                      className=\"cardHover\"\r\n                      onClick={() => {\r\n                        setSelectPlaylist(playlist);\r\n                        setSelectedTrack(selectCurrentTrack);\r\n                      }}\r\n                    >\r\n                      <li\r\n                        key={playlist.id}\r\n                        style={{\r\n                          marginRight: 10,\r\n\r\n                          listStyleType: \"none\",\r\n                        }}\r\n                        className=\"py-1 flex-shrink-0 w-28 rounded-md overflow-hidden\"\r\n                      >\r\n                        <div className=\" mr-1 mb-2 flex-shrink-0 h-28 align-center rounded-md overflow-hidden\">\r\n                          {playlist.images[0] !== undefined ? (\r\n                            <img\r\n                              src={playlist.images[0].url}\r\n                              // alt={album.id ? album.images[0].url : noImage}\r\n                              className=\"w-full h-full object-center object-cover\"\r\n                            />\r\n                          ) : (\r\n                            <img\r\n                              src={noImage}\r\n                              alt={noImage}\r\n                              className=\"w-full h-full object-center object-cover\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </li>\r\n                      <div style={{ fontSize: 13 }} className=\"mt-1\">\r\n                        <div\r\n                          style={{\r\n                            textTransform: \"uppercase\",\r\n                            fontSize: 13,\r\n                          }}\r\n                        >\r\n                          {playlist.name}\r\n                        </div>\r\n\r\n                        {/* <span>\r\n                        {playlist.tracks.total}{\" \"}\r\n                        {playlist.tracks.total > 1 ? \"tracks\" : \"track\"}\r\n                      </span> */}\r\n                      </div>\r\n                    </Item>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              <div\r\n                style={{\r\n                  marginTop: 20,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n                  type=\"submit\"\r\n                  onClick={() => {\r\n                    addTracksToMyPlaylist(\r\n                      selectPlaylist.id,\r\n                      selectPlaylist,\r\n                      selectedTrack.uri,\r\n                      selectedTrack.id\r\n                    );\r\n                  }}\r\n                >\r\n                  Done\r\n                </button>\r\n              </div>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      ) : (\r\n        // <div\r\n        //   style={{\r\n        //     display: \"flex\",\r\n        //     justifyContent: \"center\",\r\n        //     alignItems: \"center\",\r\n        //     marginTop: 200,\r\n        //   }}\r\n        // >\r\n        //   <CircularProgress size={28} />\r\n        // </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 200,\r\n          }}\r\n        >\r\n          <span>No results found...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport { Hidden, IconButton } from \"@mui/material\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\n\r\nfunction msToTime(duration) {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n}\r\n\r\nconst FloatingPlayer = ({\r\n  accessToken,\r\n  searchTerm,\r\n  searchData,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setPlayerDetails,\r\n  pauseSong,\r\n  playButtonPressedCount,\r\n  setPlayButtonPressedCount,\r\n  albumTracks,\r\n}) => {\r\n  if (!accessToken) return null;\r\n  console.log(albumTracks);\r\n\r\n  let obj =\r\n    albumTracks.items && albumTracks.items.length >= 0\r\n      ? albumTracks.items.findIndex((item) => item.track.id === chooseTrack.id)\r\n      : albumTracks &&\r\n        albumTracks.findIndex((item) => item.id === chooseTrack.id);\r\n\r\n  console.log(obj);\r\n\r\n  const disableNextButton =\r\n    albumTracks.items && albumTracks.items.length > 0\r\n      ? albumTracks.items.length > 0 &&\r\n        albumTracks.items.some(\r\n          (track) => track.track.id === currentSongPlayingId\r\n        )\r\n      : albumTracks.length > 0 &&\r\n        albumTracks.some((track) => track.id === currentSongPlayingId);\r\n\r\n  console.log(disableNextButton);\r\n\r\n  const next = () => {\r\n    if (playButtonPressedCount !== 1) {\r\n      obj += 1;\r\n    }\r\n    console.log(albumTracks, obj);\r\n    setPlayButtonPressedCount((playButtonPressedCount += 1));\r\n    if (albumTracks !== null && albumTracks.length > 0) {\r\n      setChooseTrack(albumTracks[obj]);\r\n      setCurrentSongPlayingId(albumTracks[obj].id);\r\n    } else {\r\n      setChooseTrack(albumTracks.items[obj].track);\r\n      setCurrentSongPlayingId(albumTracks.items[obj].track.id);\r\n    }\r\n\r\n    console.log(obj);\r\n  };\r\n\r\n  const prev = () => {\r\n    obj -= 1;\r\n    if (albumTracks.length > 0) {\r\n      setChooseTrack(albumTracks[obj]);\r\n      setCurrentSongPlayingId(albumTracks[obj].id);\r\n    } else {\r\n      setChooseTrack(albumTracks.items[obj].track);\r\n      setCurrentSongPlayingId(albumTracks.items[obj].track.id);\r\n    }\r\n\r\n    console.log(obj);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"floatingPlayer bg-white shadow overflow-hidden sm:rounded-lg \"\r\n        style={{\r\n          marginTop: 12,\r\n          borderColor: \"black\",\r\n          borderRadius: 6,\r\n          paddingBottom: 10,\r\n        }}\r\n      >\r\n        <div className=\"text-gray-500 dark:text-gray-600 flex justify-between text-sm font-medium tabular-nums\">\r\n          <div style={{ fontSize: 13 }}>00:00</div>\r\n          <div style={{ fontSize: 13 }}>\r\n            {msToTime(chooseTrack.duration_ms)}\r\n          </div>\r\n        </div>\r\n        <audio id=\"audio\"></audio>\r\n        <div className=\"flex \" style={{ position: \"relative\" }}>\r\n          <SpotifyPlayer\r\n            className=\"relative\"\r\n            id=\"spotifyPlayer\"\r\n            name=\"Spotify Web Player\"\r\n            token={accessToken}\r\n            // showSaveIcon={true}\r\n            callback={(state) => {\r\n              ontimeupdate = () => console.log(\"lol\");\r\n              console.log(state);\r\n\r\n              if (!state.isPlaying) {\r\n                setFloatingPlayerPlay(false);\r\n                setCurrentSongPlayingId(chooseTrack.id);\r\n                setPlayerDetails(state);\r\n                if (searchTerm !== \"\") {\r\n                  pauseSong();\r\n                } else if (\r\n                  albumTracks.items?.length > 0\r\n                    ? albumTracks.items?.length > 0 &&\r\n                      obj === albumTracks.items.length - 1\r\n                    : albumTracks.length > 0 && obj === albumTracks.length - 1\r\n                ) {\r\n                  pauseSong();\r\n                } else {\r\n                  if (\r\n                    albumTracks.items?.length > 0\r\n                      ? state.progressMs === 0 &&\r\n                        albumTracks.items.length > 0 &&\r\n                        albumTracks.items.find(\r\n                          (track) => track.track.id === currentSongPlayingId\r\n                        )\r\n                      : state.progressMs === 0 &&\r\n                        albumTracks.length > 0 &&\r\n                        albumTracks.find(\r\n                          (track) => track.id === currentSongPlayingId\r\n                        )\r\n                  ) {\r\n                    next();\r\n                    setFloatingPlayerPlay(true);\r\n                  }\r\n                }\r\n              } else {\r\n                setFloatingPlayerPlay(true);\r\n                setCurrentSongPlayingId(chooseTrack.id);\r\n                setPlayerDetails(state);\r\n              }\r\n            }}\r\n            styles={{\r\n              sliderColor: \"rgb(160, 160, 160)\",\r\n              sliderTrackBorderRadius: 25,\r\n              // sliderHandleColor: \"#005168\",\r\n              color: \"rgb(80, 80, 80)\",\r\n              fontSize: 13,\r\n            }}\r\n            autoPlay={true}\r\n            play={floatingPlayerPlay}\r\n            uris={chooseTrack.uri ? [chooseTrack.uri] : []}\r\n          />\r\n          {chooseTrack ? (\r\n            <div\r\n            // style={{\r\n            //   position: \"absolute\",\r\n            //   bottom: 6,\r\n            //   left: \"50%\",\r\n            //   marginLeft: -80,\r\n            // }}\r\n            >\r\n              <div\r\n              // style={{\r\n              //   display: \"flex\",\r\n              //   width: 160,\r\n              //   justifyContent: \"space-between\",\r\n              // }}\r\n              >\r\n                <IconButton\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: 6,\r\n                    left: \"50%\",\r\n                    marginLeft: -90,\r\n                  }}\r\n                  disabled={obj <= 0 || searchData.length > 0 ? true : false}\r\n                  onClick={prev}\r\n                  color=\"inherit\"\r\n                >\r\n                  <SkipPreviousIcon />\r\n                </IconButton>\r\n                {albumTracks.length > 0 ? (\r\n                  <IconButton\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 6,\r\n                      left: \"50%\",\r\n                      marginLeft: 50,\r\n                    }}\r\n                    color=\"inherit\"\r\n                    disabled={\r\n                      obj >= albumTracks.length - 1 ||\r\n                      disableNextButton === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 6,\r\n                      left: \"50%\",\r\n                      marginLeft: 50,\r\n                    }}\r\n                    color=\"inherit\"\r\n                    disabled={\r\n                      (albumTracks.items &&\r\n                        obj >= albumTracks.items.length - 1) ||\r\n                      disableNextButton === false\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div\r\n          className=\"floatingPlayer bg-white shadow overflow-hidden sm:rounded-lg mb-3\"\r\n          style={{\r\n            borderColor: \"black\",\r\n            borderRadius: 6,\r\n            color: \"rgb(210, 210, 210)\",\r\n          }}\r\n        >\r\n          <div className=\"text-gray-500 dark:text-gray-400 flex justify-between text-sm font-medium tabular-nums\">\r\n            <div style={{ fontSize: 13 }}>00:00</div>\r\n            <div style={{ fontSize: 13 }}>\r\n              {msToTime(chooseTrack.duration_ms)}\r\n            </div>\r\n          </div>\r\n          <audio id=\"audio\"></audio>\r\n          <div className=\"flex justify-between\">\r\n            <SpotifyPlayer\r\n              id=\"spotifyPlayer\"\r\n              name=\"Spotify Web Player\"\r\n              token={accessToken}\r\n              callback={(state) => {\r\n                console.log(state);\r\n                setSongProgress(state.progressMs);\r\n\r\n                if (!state.isPlaying) {\r\n                  setFloatingPlayerPlay(false);\r\n                  setCurrentSongPlayingId(chooseTrack.id);\r\n                  setPlayerDetails(state);\r\n\r\n                  if (searchData.items && obj === searchData.items.length - 1) {\r\n                    pauseSong();\r\n                  } else if (searchData && obj === searchData.length - 1) {\r\n                    pauseSong();\r\n                  } else if (\r\n                    albumTracks.length > 0 &&\r\n                    obj === albumTracks.length - 1\r\n                  ) {\r\n                    pauseSong();\r\n                  } else {\r\n                    if (state.progressMs === 0) {\r\n                      next();\r\n                      setFloatingPlayerPlay(true);\r\n                    }\r\n                  }\r\n                } else {\r\n                  setFloatingPlayerPlay(true);\r\n                  setCurrentSongPlayingId(chooseTrack.id);\r\n                  setPlayerDetails(state);\r\n                }\r\n              }}\r\n              styles={{\r\n                sliderColor: \"#80e2fd\",\r\n                sliderTrackBorderRadius: 25,\r\n                sliderHandleColor: \"#005168\",\r\n                color: \"rgb(80, 80, 80)\",\r\n                fontSize: 13,\r\n              }}\r\n              autoPlay={true}\r\n              play={floatingPlayerPlay}\r\n              uris={chooseTrack.uri ? [chooseTrack.uri] : []}\r\n            />\r\n            {chooseTrack ? (\r\n              <div>\r\n                <IconButton\r\n                  style={{ position: \"absolute\", bottom: 22, left: 90 }}\r\n                  disabled={obj <= 0 ? true : false}\r\n                  onClick={prev}\r\n                  color=\"default\"\r\n                >\r\n                  <SkipPreviousIcon />\r\n                </IconButton>\r\n                {searchData.items ? (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= searchData.items.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : albumTracks.length > 0 ? (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= albumTracks.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    color=\"default\"\r\n                    style={{ position: \"absolute\", bottom: 22, right: 90 }}\r\n                    disabled={obj >= searchData.length - 1 ? true : false}\r\n                    onClick={next}\r\n                  >\r\n                    <SkipNextIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FloatingPlayer;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport { IconButton, CircularProgress } from \"@mui/material\";\r\n\r\nimport AlbumTracks from \"../AlbumTitle/AlbumTracks/AlbumTracks\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 18) + \"...\" : str;\r\n};\r\n\r\nconst CategoryPlaylist = ({\r\n  categorySublist,\r\n  album,\r\n  selectCategoryPlaylist,\r\n  categorySublistTitle,\r\n  setChooseTrack,\r\n  albumTracks,\r\n  chooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  isLoading,\r\n  playButtonPressedCount,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const categoryListLi = useRef();\r\n  console.log(album);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    categoryListLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return categorySublist ? (\r\n    <>\r\n      {categorySublist.length > 0 && categorySublistTitle.id ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              marginTop: 30,\r\n              marginBottom: 16,\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <p\r\n              className=\"text-gray-500\"\r\n              style={{\r\n                fontSize: 14,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 2,\r\n              }}\r\n            >\r\n              {categorySublistTitle.name}\r\n            </p>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <IconButton onClick={() => scroll(-360)}>\r\n                <ArrowLeftIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => scroll(360)}>\r\n                <ArrowRightIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <ul\r\n            className=\"sidebar\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n            ref={categoryListLi}\r\n          >\r\n            {categorySublist?.map((playlist) => (\r\n              <div key={playlist.id}>\r\n                <div\r\n                  variant=\"outlined\"\r\n                  style={\r\n                    album.id === playlist.id\r\n                      ? {\r\n                          cursor: \"pointer\",\r\n                          position: \"relative\",\r\n                          marginRight: 20,\r\n                          borderRadius: 6,\r\n                          backgroundColor: \"rgb(230, 230, 230)\",\r\n                        }\r\n                      : {\r\n                          cursor: \"pointer\",\r\n                          position: \"relative\",\r\n                          borderRadius: 6,\r\n                          marginRight: 20,\r\n                        }\r\n                  }\r\n                  className=\"cardHover\"\r\n                  onClick={() => selectCategoryPlaylist(playlist)}\r\n                >\r\n                  <li\r\n                    key={playlist.id}\r\n                    style={{\r\n                      marginRight: 0,\r\n                      alignItems: \"center\",\r\n                      listStyleType: \"none\",\r\n                      padding: 10,\r\n                    }}\r\n                    className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden border border-gray-200\"\r\n                  >\r\n                    <div className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-36 h-36  rounded-md overflow-hidden\">\r\n                      <img\r\n                        src={playlist.images[0].url}\r\n                        // alt={album.id ? album.images[0].url : noImage}\r\n                        className=\"w-full h-full object-center object-cover\"\r\n                      />\r\n\r\n                      {/* <p\r\n                        style={{ position: \"absolute\", right: 16, bottom: 70 }}\r\n                      >\r\n                        {song.track.popularity}\r\n                      </p> */}\r\n                    </div>\r\n\r\n                    <div className=\"ml-1 flex-1 flex flex-col mr-2\">\r\n                      <div>\r\n                        <div\r\n                          className=\"flex justify-between text-gray-900\"\r\n                          style={{\r\n                            fontSize: 13.5,\r\n                            alignItems: \"center\",\r\n                            textTransform: \"capitalize\",\r\n                          }}\r\n                        >\r\n                          <p>{`${truncate(playlist.name)}`}</p>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{ fontSize: 12.6 }}\r\n                          className=\"mt-1 flex items-center text-gray-400\"\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                              fontSize: 12.6,\r\n                            }}\r\n                          >\r\n                            {playlist.type}\r\n                          </div>\r\n                          <div\r\n                            class=\"text-base font-normal mx-1\"\r\n                            style={{ fontSize: 40 }}\r\n                          >\r\n                            ·\r\n                          </div>\r\n\r\n                          <span>\r\n                            {playlist.tracks.total}{\" \"}\r\n                            {playlist.tracks.total > 1 ? \"tracks\" : \"track\"}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n\r\n          <div className=\"mt-6\">\r\n            {!isLoading ? (\r\n              <div>\r\n                {album.id ? (\r\n                  <div className=\"text-gray-500 text-sm mb-4\">\r\n                    <span\r\n                      style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: 13.6,\r\n                        letterSpacing: 1,\r\n                        color: \"black\",\r\n                      }}\r\n                    >\r\n                      {album.name}\r\n                    </span>{\" \"}\r\n                    ({album.tracks.total} tracks)\r\n                  </div>\r\n                ) : null}\r\n                <AlbumTracks\r\n                  albumTracks={albumTracks}\r\n                  chooseTrack={chooseTrack}\r\n                  setChooseTrack={setChooseTrack}\r\n                  currentSongPlayingId={currentSongPlayingId}\r\n                  floatingPlayerPlay={floatingPlayerPlay}\r\n                  setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                  setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                  setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                  playButtonPressedCount={playButtonPressedCount}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginTop: 70,\r\n                  marginBottom: 100,\r\n                }}\r\n              >\r\n                <CircularProgress size={28} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default CategoryPlaylist;\r\n","import { useRef } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport noImage from \"../../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 36 ? str.substr(0, 40) + \"...\" : str;\r\n};\r\n\r\nconst RelatedArtists = ({\r\n  relatedArtists,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n}) => {\r\n  const artistLi = useRef();\r\n  // console.log(artistLi.current.scrollLeft);\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  return relatedArtists.length > 0 ? (\r\n    <div className=\"\">\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 0,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          RELATED ARTISTS ({relatedArtists.length})\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <ul\r\n        role=\"list\"\r\n        ref={artistLi}\r\n        className=\"sidebar\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {relatedArtists?.map((artist) => (\r\n          <li\r\n            key={artist.id}\r\n            onClick={() => {\r\n              getArtist(artist.id);\r\n              getArtistRelatedArtists(artist.id);\r\n            }}\r\n            style={{ marginRight: 20, alignItems: \"center\" }}\r\n            className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover\"\r\n          >\r\n            <div\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: 6,\r\n                borderRadius: 100,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-28 h-28 border border-gray-200 rounded-md overflow-hidden\"\r\n            >\r\n              {artist.images[0] !== undefined ? (\r\n                <img\r\n                  src={artist.images[0].url}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={noImage}\r\n                  // alt={artist.id ? artist.images[0].url : noImage}\r\n                  className=\"w-full h-full object-center object-cover\"\r\n                  style={{\r\n                    borderRadius: 100,\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n              <div>\r\n                <div\r\n                  className=\"flex justify-between text-gray-900\"\r\n                  style={{\r\n                    fontSize: 13,\r\n                    justifyContent: \"center\",\r\n                    textTransform: \"capitalize\",\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p>{truncate(artist.name)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RelatedArtists;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, CircularProgress } from \"@mui/material\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport ThumbUpAltIcon from \"@mui/icons-material/ThumbUpAlt\";\r\n\r\nimport AlbumTracks from \"../AlbumTitle/AlbumTracks/AlbumTracks\";\r\nimport RelatedArtists from \"./RelatedArtists/RelatedArtists\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 36 ? str.substr(0, 40) + \"...\" : str;\r\n};\r\n\r\nfunction intlFormat(num) {\r\n  return new Intl.NumberFormat().format(Math.round(num * 10) / 10);\r\n}\r\n\r\nfunction formatFollowersCount(num) {\r\n  if (num >= 1000000) return intlFormat(num / 1000000) + \"M\";\r\n  if (num >= 1000) return intlFormat(num / 1000) + \"k\";\r\n  return intlFormat(num);\r\n}\r\n\r\nconst ArtistDetails = ({\r\n  floatingPlayerPlay,\r\n  artistDetails,\r\n  getArtist,\r\n  albumTracks,\r\n  chooseTrack,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  isLoading,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  relatedArtists,\r\n  getArtistRelatedArtists,\r\n}) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(albumTracks);\r\n\r\n  return artistDetails.id ? (\r\n    <>\r\n      {!isLoading ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"6%\",\r\n              paddingBottom: \"2%\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    padding: \"0 22%\",\r\n                    width: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n                    height: { lg: 320, md: 0, sm: 0, xs: 0 },\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                  src={\r\n                    artistDetails.images ? artistDetails.images[0].url : null\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <Box\r\n                  className=\"px-4 pt-4 mt-4 \"\r\n                  sx={{\r\n                    background: \"white\",\r\n                    borderColor: \"rgb(220, 220, 220)\",\r\n                    borderWidth: 1,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    color: \"white\",\r\n                    paddingBottom: 2,\r\n                    borderRadius: 2,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      fontSize: 24,\r\n                      fontWeight: \"bold\",\r\n                      textTransform: \"\",\r\n                      letterSpacing: 2,\r\n                      color: \"grey\",\r\n                    }}\r\n                  >\r\n                    {artistDetails.name ? truncate(artistDetails.name) : null}\r\n                  </div>\r\n                  <div className=\"flex\" style={{ margin: \"8px 0\" }}>\r\n                    {artistDetails.genres?.map((genre, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"flex items-center text-gray-400\"\r\n                      >\r\n                        {index <= 2 ? (\r\n                          <>\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"capitalize\",\r\n                                fontSize: 12,\r\n                              }}\r\n                            >\r\n                              {genre}\r\n                            </span>\r\n\r\n                            {index !== artistDetails.genres.length - 1 ? (\r\n                              index === 2 ? null : (\r\n                                <span\r\n                                  class=\"text-base font-normal mx-1\"\r\n                                  style={{ fontSize: 30 }}\r\n                                >\r\n                                  ·\r\n                                </span>\r\n                              )\r\n                            ) : null}\r\n                          </>\r\n                        ) : null}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      color: \"black\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <PeopleAltIcon fontSize=\"small\" />{\" \"}\r\n                      <span style={{ fontSize: 13, marginLeft: 4 }}>\r\n                        {formatFollowersCount(artistDetails.followers.total)}{\" \"}\r\n                        followers\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <ThumbUpAltIcon fontSize=\"small\" />\r\n                      <span style={{ fontSize: 13, marginLeft: 6 }}>\r\n                        {artistDetails.popularity}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-6\">\r\n              <AlbumTracks\r\n                albumTracks={albumTracks}\r\n                chooseTrack={chooseTrack}\r\n                setChooseTrack={setChooseTrack}\r\n                currentSongPlayingId={currentSongPlayingId}\r\n                floatingPlayerPlay={floatingPlayerPlay}\r\n                setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                playButtonPressedCount={playButtonPressedCount}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: 20, flex: 1, width: \"100%\" }}>\r\n            <RelatedArtists\r\n              relatedArtists={relatedArtists}\r\n              getArtist={getArtist}\r\n              getArtistRelatedArtists={getArtistRelatedArtists}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: 140,\r\n            marginBottom: 140,\r\n          }}\r\n        >\r\n          <CircularProgress size={30} />\r\n        </div>\r\n      )}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default ArtistDetails;\r\n","import React from \"react\";\r\nimport MyTopArtists from \"../Home/MyTopArtists/MyTopArtists\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst Artists = ({\r\n  myTopArtists,\r\n  getArtist,\r\n  getArtistRelatedArtists,\r\n  width,\r\n  artistDetails,\r\n}) => {\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <MyTopArtists\r\n        myTopArtists={myTopArtists}\r\n        width={width}\r\n        noImage={noImage}\r\n        getArtist={getArtist}\r\n        getArtistRelatedArtists={getArtistRelatedArtists}\r\n        artistDetails={artistDetails}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artists;\r\n","import { Hidden, IconButton, Paper, Tooltip } from \"@mui/material\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Typography,\r\n  CardMedia,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst RecentlyPlayed = ({\r\n  recentlyPlayedSongs,\r\n  filteredRecentlyPlayedSongs,\r\n  noImage,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  recentSongsWidth,\r\n}) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"fixed\", right: 20 }}>\r\n        <div style={{ margin: 12, marginTop: 60, marginBottom: 10 }}>\r\n          <p\r\n            className=\"text-gray-900\"\r\n            style={{\r\n              fontSize: 13,\r\n              letterSpacing: 2,\r\n            }}\r\n          >\r\n            RECENTLY PLAYED ({recentlyPlayedSongs.slice(0, 8).length})\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <div className=\" align-middle\">\r\n            <ul role=\"list\" style={{ width: recentSongsWidth }}>\r\n              {recentlyPlayedSongs &&\r\n                filteredRecentlyPlayedSongs.slice(0, 8)?.map((audio) => (\r\n                  <div className=\"w-full \" key={audio.track.id}>\r\n                    <li className=\"py-3 flex  rounded-md overflow-hidden\">\r\n                      <div className=\"ml-3\">\r\n                        {audio.track.id === currentSongPlayingId ? (\r\n                          floatingPlayerPlay ? (\r\n                            <Tooltip placement=\"top\" title=\"Pause\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  audio.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Pause\");\r\n                                  setFloatingPlayerPlay(false);\r\n                                }}\r\n                              >\r\n                                <PauseIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip placement=\"top\" title=\"Play\">\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{\r\n                                  backgroundColor: \"rgb(240, 240, 240)\",\r\n                                }}\r\n                                color={\r\n                                  audio.track.id === currentSongPlayingId\r\n                                    ? \"primary\"\r\n                                    : \"inherit\"\r\n                                }\r\n                                onClick={() => {\r\n                                  console.log(\"Play\");\r\n                                  setFloatingPlayerPlay(true);\r\n                                }}\r\n                              >\r\n                                <PlayArrowIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          )\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(240, 240, 240)\",\r\n                              }}\r\n                              color={\r\n                                audio.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                setChooseTrack(audio.track);\r\n                                setCurrentSongPlayingId(audio.track.id);\r\n                                setPlayButtonPressedCount(\r\n                                  (playButtonPressedCount += 1)\r\n                                );\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                        style={{ position: \"relative\" }}\r\n                      >\r\n                        <div>\r\n                          <div\r\n                            className={`flex justify-between text-${\r\n                              audio.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-900`}\r\n                            style={{\r\n                              fontSize: 13.6,\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            <p>\r\n                              {audio.track.name\r\n                                ? truncateMobile(audio.track.name)\r\n                                : \"No name\"}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div\r\n                            className={`flex items-center text-sm text-${\r\n                              audio.track.id === currentSongPlayingId\r\n                                ? \"blue\"\r\n                                : \"gray\"\r\n                            }-400`}\r\n                          >\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {audio.track.artists.length < 2 ? (\r\n                                <span style={{ fontSize: 12 }}>\r\n                                  {audio.track.artists[0].name\r\n                                    ? audio.track.artists[0].name\r\n                                    : \"No artist name\"}\r\n                                </span>\r\n                              ) : (\r\n                                <>\r\n                                  {audio.track.artists\r\n                                    .filter((artist, index) => index < 3)\r\n                                    .map((artist, index) =>\r\n                                      index >= 2 ? null : (\r\n                                        <span\r\n                                          key={artist.id}\r\n                                          style={\r\n                                            index === 1\r\n                                              ? {\r\n                                                  fontSize: 12,\r\n                                                  marginLeft: 4,\r\n                                                }\r\n                                              : { fontSize: 12 }\r\n                                          }\r\n                                        >\r\n                                          {index === 1\r\n                                            ? truncateArtistNameMobile(\r\n                                                artist.name\r\n                                              )\r\n                                            : artist.name}\r\n\r\n                                          {index !== 1 ? \",\" : \"\"}\r\n                                        </span>\r\n                                      )\r\n                                    )}\r\n                                </>\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n\r\n                          {/* <div\r\n                            className=\"text-sm text-gray-900\"\r\n                            style={{\r\n                              fontSize: 12,\r\n                              display: \"flex\",\r\n                              position: \"relative\",\r\n                              marginTop: 6,\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                          >\r\n                            {audio.track.id === currentSongPlayingId ? (\r\n                              floatingPlayerPlay ? (\r\n                                <span id=\"bars\">\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                  <span className=\"bar\"></span>\r\n                                </span>\r\n                              ) : null\r\n                            ) : null}\r\n                          </div> */}\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            right: 6,\r\n                            fontSize: 12.6,\r\n                            top: 18,\r\n                          }}\r\n                          className={`text-${\r\n                            audio.track.id === currentSongPlayingId\r\n                              ? \"blue\"\r\n                              : \"gray\"\r\n                          }-900`}\r\n                        >\r\n                          {msToTime(audio.track.duration_ms)}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </div>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  Fab,\r\n  Tooltip,\r\n  Modal,\r\n  Box,\r\n  InputBase,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 3,\r\n};\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst MySavedTracks = ({\r\n  createPlaylistSearchTerm,\r\n  setCreatePlaylistSearchTerm,\r\n  createPlaylistSearchData,\r\n  addToSavedTracks,\r\n  mySavedTracks,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  currentSongPlayingId,\r\n  setCurrentSongPlayingId,\r\n  setChooseTrack,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  removeTrackFromSavedTracks,\r\n}) => {\r\n  const [selectTracksOpen, setSelectTracksOpen] = useState(false);\r\n  const handleSelectTracksClose = () => setSelectTracksOpen(false);\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    // borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    // marginLeft: 0,\r\n    width: \"auto\",\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   marginLeft: theme.spacing(1),\r\n    //   width: \"auto\",\r\n    // },\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  console.log(mySavedTracks);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY SAVED TRACKS ({mySavedTracks.length})\r\n        </p>\r\n        <Tooltip placement=\"top\" title=\"Add Tracks\">\r\n          <Fab\r\n            color=\"inherit\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            style={{ marginRight: 8 }}\r\n            onClick={setSelectTracksOpen}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </div>\r\n      {/* {console.log(myTopTracks)} */}\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        // columns={{ xs: 4, sm: 8, md: 12 }}\r\n      >\r\n        {mySavedTracks?.map((savedTrack, index) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={4}\r\n            xl={3}\r\n            key={savedTrack.track.id}\r\n          >\r\n            <Item\r\n              variant=\"outlined\"\r\n              style={{ cursor: \"pointer\", position: \"relative\" }}\r\n              className=\"cardHover\"\r\n            >\r\n              {console.log(savedTrack)}\r\n              <li\r\n                key={savedTrack.track.id}\r\n                style={{\r\n                  marginRight: 10,\r\n                  alignItems: \"center\",\r\n                  listStyleType: \"none\",\r\n                }}\r\n                className=\"py-1 flex-shrink-0 w-30  rounded-md overflow-hidden\"\r\n              >\r\n                <div className=\"ml-1 mr-1 mb-2 flex-shrink-0   rounded-md overflow-hidden\">\r\n                  {savedTrack.track.album.images[0] !== undefined ? (\r\n                    <img\r\n                      src={savedTrack.track.album.images[0].url}\r\n                      // alt={album.id ? album.images[0].url : noImage}\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={noImage}\r\n                      alt={\r\n                        savedTrack.track.album.id\r\n                          ? savedTrack.track.album.images[0].url\r\n                          : noImage\r\n                      }\r\n                      className=\"w-full h-full object-center object-cover\"\r\n                    />\r\n                  )}\r\n                  {floatingPlayerPlay &&\r\n                  savedTrack.track.id === currentSongPlayingId ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 1,\r\n                        left: 14,\r\n                        // backgroundColor: \"white\",\r\n                        padding: 17,\r\n                        paddingRight: 19,\r\n                        borderTopRightRadius: 10,\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: 6,\r\n                          bottom: 8,\r\n                        }}\r\n                      >\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                        <span className=\"bar\"></span>\r\n                      </span>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      bottom: 10,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      {savedTrack.track.id === currentSongPlayingId ? (\r\n                        floatingPlayerPlay ? (\r\n                          <Tooltip placement=\"top\" title=\"Pause\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(220, 220, 220)\",\r\n                              }}\r\n                              color={\r\n                                savedTrack.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                console.log(\"Pause\");\r\n                                setFloatingPlayerPlay(false);\r\n                              }}\r\n                            >\r\n                              <PauseIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        ) : (\r\n                          <Tooltip placement=\"top\" title=\"Play\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(220, 220, 220)\",\r\n                              }}\r\n                              color={\r\n                                savedTrack.track.id === currentSongPlayingId\r\n                                  ? \"primary\"\r\n                                  : \"inherit\"\r\n                              }\r\n                              onClick={() => {\r\n                                console.log(\"Play\");\r\n                                setFloatingPlayerPlay(true);\r\n                              }}\r\n                            >\r\n                              <PlayArrowIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )\r\n                      ) : (\r\n                        <Tooltip placement=\"top\" title=\"Play\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(220, 220, 220)\",\r\n                            }}\r\n                            color={\r\n                              savedTrack.track.id === currentSongPlayingId\r\n                                ? \"primary\"\r\n                                : \"inherit\"\r\n                            }\r\n                            onClick={() => {\r\n                              setChooseTrack(savedTrack.track);\r\n                              setCurrentSongPlayingId(savedTrack.track.id);\r\n                              setPlayButtonPressedCount(\r\n                                (playButtonPressedCount += 1)\r\n                              );\r\n                            }}\r\n                          >\r\n                            <PlayArrowIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        marginLeft: 14,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() =>\r\n                        removeTrackFromSavedTracks(savedTrack.track.id)\r\n                      }\r\n                    >\r\n                      <Tooltip placement=\"top\" title=\"Remove\">\r\n                        <RemoveCircleOutlineIcon\r\n                          color={\r\n                            savedTrack.track.id === currentSongPlayingId\r\n                              ? \"primary\"\r\n                              : \"action\"\r\n                          }\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p\r\n                    className={`flex justify-between text-${\r\n                      savedTrack.track.id === currentSongPlayingId\r\n                        ? \"blue\"\r\n                        : \"gray\"\r\n                    }-600`}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 16,\r\n                      bottom: 52,\r\n                      fontSize: 13,\r\n                    }}\r\n                  >\r\n                    {savedTrack.track.popularity}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"ml-1 mt-2 mb-2 flex-1 flex flex-col mr-2\">\r\n                  <div>\r\n                    <div\r\n                      className={`flex justify-between text-${\r\n                        savedTrack.track.id === currentSongPlayingId\r\n                          ? \"blue\"\r\n                          : \"gray\"\r\n                      }-600`}\r\n                      style={{ fontSize: 13, alignItems: \"center\" }}\r\n                    >\r\n                      <p>{`${truncate(savedTrack.track.name)}`}</p>\r\n                    </div>\r\n\r\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\r\n                      <p\r\n                        className={`text-sm text-${\r\n                          savedTrack.track.id === currentSongPlayingId\r\n                            ? \"blue\"\r\n                            : \"gray\"\r\n                        }-400`}\r\n                        style={{ fontSize: 12 }}\r\n                      >\r\n                        {savedTrack.track.artists[0].name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* <div\r\n                      style={{ fontSize: 12.6 }}\r\n                      className=\"mt-1 flex items-center\"\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          fontSize: 12.6,\r\n                        }}\r\n                      >\r\n                        {track.album.album_type}\r\n                      </div>\r\n                      <div\r\n                        class=\"text-base font-normal mx-1\"\r\n                        style={{ fontSize: 40 }}\r\n                      >\r\n                        ·\r\n                      </div>\r\n\r\n                      <span>\r\n                        {track.album.total_tracks}{\" \"}\r\n                        {track.album.total_tracks > 1 ? \"tracks\" : \"track\"}\r\n                      </span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </Item>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Modal\r\n        open={selectTracksOpen}\r\n        onClose={handleSelectTracksClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 15,\r\n                letterSpacing: 1,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Add Tracks\r\n            </div>\r\n            <IconButton onClick={handleSelectTracksClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div style={{ position: \"relative\", marginTop: 20 }}>\r\n            <SearchIconWrapper>\r\n              <SearchIcon color=\"primary\" />\r\n            </SearchIconWrapper>\r\n            <input\r\n              className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n              type=\"text\"\r\n              placeholder=\"Search for tracks to add..\"\r\n              style={{ width: \"100%\", fontSize: 15 }}\r\n              value={createPlaylistSearchTerm}\r\n              onChange={(e) => {\r\n                setCreatePlaylistSearchTerm(e.target.value);\r\n              }}\r\n            />\r\n            {createPlaylistSearchTerm ? (\r\n              <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                <IconButton\r\n                  onClick={() => setCreatePlaylistSearchTerm(\"\")}\r\n                  size=\"small\"\r\n                >\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n\r\n          {createPlaylistSearchData.length > 0 ? (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"body2\"\r\n                component=\"h2\"\r\n                style={{ letterSpacing: 1 }}\r\n              >\r\n                Search results\r\n              </Typography>\r\n            </div>\r\n          ) : null}\r\n          <div style={{ marginTop: 20 }}>\r\n            <div className=\"flex flex-col mt-2 mb-2\">\r\n              <div>\r\n                <div>\r\n                  <div className=\" align-middle \">\r\n                    <div>\r\n                      <ul\r\n                        className={\r\n                          createPlaylistSearchData.length > 0\r\n                            ? \"createPlaylistSongsBox\"\r\n                            : null\r\n                        }\r\n                        role=\"list\"\r\n                      >\r\n                        {createPlaylistSearchData?.map((audio) => (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.album.images[0].url}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.name\r\n                                        ? truncateMobile(audio.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.artists[0].name\r\n                                          ? audio.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      position: \"relative\",\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                    <div>\r\n                                      {audio.id === currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <span id=\"bars\">\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                          </span>\r\n                                        ) : null\r\n                                      ) : null}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 0,\r\n                                    top: 14,\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Pause\");\r\n                                              setFloatingPlayerPlay(false);\r\n                                            }}\r\n                                          >\r\n                                            <PauseIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      ) : (\r\n                                        <Tooltip placement=\"top\" title=\"Play\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Play\");\r\n                                              setFloatingPlayerPlay(true);\r\n                                            }}\r\n                                          >\r\n                                            <PlayArrowIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      )\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            setChooseTrack(audio);\r\n                                            setCurrentSongPlayingId(audio.id);\r\n                                            setPlayButtonPressedCount(\r\n                                              (playButtonPressedCount += 1)\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      marginLeft: 14,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => addToSavedTracks(audio)}\r\n                                  >\r\n                                    <Tooltip placement=\"top\" title=\"Add\">\r\n                                      <AddCircleOutlinedIcon\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"action\"\r\n                                        }\r\n                                      />\r\n                                    </Tooltip>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ marginTop: 20, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              onClick={handleSelectTracksClose}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySavedTracks;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Modal,\r\n  Box,\r\n  InputBase,\r\n  Fab,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport noImage from \"../../assets/no-image1.jpg\";\r\n\r\nconst truncate = (str) => {\r\n  return str.length > 20 ? str.substr(0, 15) + \"...\" : str;\r\n};\r\n\r\nconst truncateMobile = (str) => {\r\n  return str.length > 30 ? str.substr(0, 22) + \"...\" : str;\r\n};\r\n\r\nconst truncateArtistNameMobile = (str) => {\r\n  return str.length > 12 ? str.substr(0, 10) + \" ...\" : str;\r\n};\r\n\r\nconst msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n};\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { lg: 400, md: 400, sm: 400, xs: \"100%\" },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n  p: 3,\r\n};\r\n\r\nconst MyPlaylist = ({\r\n  createPlaylistSearchTerm,\r\n  setCreatePlaylistSearchTerm,\r\n  createPlaylistSearchData,\r\n  myPlaylist,\r\n  myPlaylistTitle,\r\n  selectMyPlaylist,\r\n  setChooseTrack,\r\n  currentSongPlayingId,\r\n  floatingPlayerPlay,\r\n  setFloatingPlayerPlay,\r\n  setCurrentSongPlayingId,\r\n  setPlayButtonPressedCount,\r\n  playButtonPressedCount,\r\n  addTracksToMyPlaylist,\r\n  removeTracksFromMyPlaylist,\r\n  createPlaylist,\r\n  albumTracks,\r\n  isLoading,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectTracksOpen, setSelectTracksOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [displayImage, setDisplayImage] = useState(null);\r\n  const [base64Uri, setBase64Uri] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleSelectTracksClose = () => setSelectTracksOpen(false);\r\n\r\n  const artistLi = useRef();\r\n\r\n  const scroll = (scrollOffset) => {\r\n    artistLi.current.scrollLeft += scrollOffset;\r\n  };\r\n\r\n  console.log(floatingPlayerPlay);\r\n\r\n  const onImageSelect = (e) => {\r\n    if (e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        console.log(\"Reader result\", reader.result);\r\n        setBase64Uri(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      console.log(reader);\r\n      setDisplayImage(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    width: \"auto\",\r\n  }));\r\n\r\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        // \"&:focus\": {\r\n        //   width: \"32ch\",\r\n        // },\r\n      },\r\n    },\r\n  }));\r\n\r\n  console.log(myPlaylist);\r\n  console.log(albumTracks);\r\n\r\n  return albumTracks !== null ? (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: 12,\r\n          marginTop: 30,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p\r\n          className=\"text-gray-900\"\r\n          style={{\r\n            fontSize: 14,\r\n            letterSpacing: 2,\r\n          }}\r\n        >\r\n          MY PLAYLISTS ({myPlaylist.length})\r\n        </p>\r\n\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <IconButton onClick={() => scroll(-360)}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => scroll(360)}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <ul\r\n          role=\"list\"\r\n          ref={artistLi}\r\n          className=\"sidebar\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            overflowX: \"scroll\",\r\n            transition: \"0.3s\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Tooltip placement=\"top\" title=\"Create a Playlist\">\r\n            <li\r\n              style={{ marginRight: 10, alignItems: \"center\" }}\r\n              className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden \"\r\n            >\r\n              <div\r\n                onClick={handleOpen}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  padding: 6,\r\n                  borderRadius: 20,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                className=\"ml-1 mr-1 flex-shrink-0 w-24 h-24 border border-gray-200 rounded-md overflow-hidden cardHover\"\r\n              >\r\n                <AddIcon fontSize=\"large\" color=\"primary\" />\r\n              </div>\r\n            </li>\r\n          </Tooltip>\r\n          {myPlaylist?.map((playlist) => (\r\n            <li\r\n              key={playlist.id}\r\n              onClick={() => selectMyPlaylist(playlist)}\r\n              style={\r\n                myPlaylistTitle.id === playlist.id\r\n                  ? {\r\n                      marginRight: 10,\r\n                      cursor: \"pointer\",\r\n                      alignItems: \"center\",\r\n                      backgroundColor: \"rgb(240, 240, 240)\",\r\n                    }\r\n                  : { marginRight: 10, cursor: \"pointer\", alignItems: \"center\" }\r\n              }\r\n              className=\"py-1 flex-shrink-0 w-30 rounded-md overflow-hidden cardHover \"\r\n            >\r\n              <div\r\n                style={{\r\n                  padding: 6,\r\n                  borderRadius: 20,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                className=\"ml-1 mr-1 mb-2 flex-shrink-0 w-32 h-32 border border-gray-200 rounded-md overflow-hidden cardHover\"\r\n              >\r\n                {playlist.images[0] !== undefined ? (\r\n                  <img\r\n                    src={playlist.images[0].url}\r\n                    className=\"w-full h-full object-center object-cover\"\r\n                    style={{\r\n                      borderRadius: 16,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={noImage}\r\n                    // alt={playlist.id ? playlist.images[0].url : noImage}\r\n                    className=\"w-full h-full object-center object-cover\"\r\n                    style={{ borderRadius: 100 }}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ml-2 flex-1 flex flex-col mr-2\">\r\n                <div>\r\n                  <div\r\n                    className=\"flex justify-between text-gray-900\"\r\n                    style={{\r\n                      fontSize: 13.6,\r\n                      justifyContent: \"center\",\r\n                      textTransform: \"uppercase\",\r\n                      letterSpacing: 1,\r\n                      marginBottom: 10,\r\n                    }}\r\n                  >\r\n                    <p>{truncate(playlist.name)}</p>\r\n                    {/* <p style={{ fontSize: 13 }}>{artist.popularity}</p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {console.log(myPlaylistTitle)}\r\n\r\n      {myPlaylist.length > 0 ? (\r\n        !isLoading ? (\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n              className=\"mb-4 mt-4\"\r\n            >\r\n              <div className=\"text-gray-500 text-sm \">\r\n                <span\r\n                  style={{\r\n                    textTransform: \"uppercase\",\r\n                    fontSize: 13.6,\r\n                    letterSpacing: 1,\r\n                    color: \"black\",\r\n                  }}\r\n                >\r\n                  {myPlaylistTitle.name}\r\n                </span>{\" \"}\r\n                {myPlaylist.tracks && myPlaylistTitle.tracks.total > 0 ? (\r\n                  <span>\r\n                    ({myPlaylistTitle.tracks.total}{\" \"}\r\n                    {myPlaylistTitle.tracks.total > 1 ? \"tracks\" : \"track\"})\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n              {console.log(myPlaylist)}\r\n\r\n              <Tooltip placement=\"top\" title=\"Add Tracks\">\r\n                <Fab\r\n                  color=\"inherit\"\r\n                  aria-label=\"add\"\r\n                  size=\"small\"\r\n                  style={{ marginRight: 8 }}\r\n                  onClick={setSelectTracksOpen}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-4 mb-2\">\r\n              <div>\r\n                <div>\r\n                  <div className=\" align-middle \">\r\n                    <div>\r\n                      <ul role=\"list\">\r\n                        {/* {console.log(albumTracks)} */}\r\n                        {albumTracks.items && albumTracks.items.length === 0 ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              fontSize: 14,\r\n                              margin: \"80px 0\",\r\n                            }}\r\n                          >\r\n                            No Tracks in this Playlist\r\n                          </div>\r\n                        ) : (\r\n                          <div>\r\n                            {albumTracks.items?.map((audio) => (\r\n                              <div\r\n                                style={{\r\n                                  display: \"block\",\r\n                                  margin: \"0 auto\",\r\n                                  width: \"100%\",\r\n                                }}\r\n                                key={audio.track.id}\r\n                              >\r\n                                <li\r\n                                  style={{ alignItems: \"center\" }}\r\n                                  className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                                >\r\n                                  <div\r\n                                    // onClick={() => selectAlbum(audio.track.track.id)}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                                  >\r\n                                    {audio.track.album.images[0] !==\r\n                                    undefined ? (\r\n                                      <img\r\n                                        src={audio.track.album.images[0].url}\r\n                                        // alt={album.id ? album.images[0].url : noImage}\r\n                                        className=\"w-full h-full object-center object-cover\"\r\n                                      />\r\n                                    ) : (\r\n                                      <img\r\n                                        src={noImage}\r\n                                        // alt={album.id ? album.images[0].url : noImage}\r\n                                        className=\"w-full h-full object-center object-cover\"\r\n                                      />\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                    style={{ position: \"relative\" }}\r\n                                  >\r\n                                    <div>\r\n                                      <div\r\n                                        className={`flex justify-between text-${\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"gray\"\r\n                                        }-600`}\r\n                                      >\r\n                                        <Typography style={{ fontSize: 13 }}>\r\n                                          {audio.track.name\r\n                                            ? truncateMobile(audio.track.name)\r\n                                            : \"No name\"}\r\n                                        </Typography>\r\n                                      </div>\r\n\r\n                                      <div\r\n                                        className={`mt-1 mb-1 flex items-center  text-${\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"gray\"\r\n                                        }-400`}\r\n                                      >\r\n                                        {audio.track.artists.length < 2 ? (\r\n                                          <span\r\n                                            style={{ fontSize: 12 }}\r\n                                            color={\r\n                                              audio.track.id ===\r\n                                              currentSongPlayingId\r\n                                                ? \"blue\"\r\n                                                : \"\"\r\n                                            }\r\n                                          >\r\n                                            {audio.track.artists[0].name\r\n                                              ? audio.track.artists[0].name\r\n                                              : \"No artist name\"}\r\n                                          </span>\r\n                                        ) : (\r\n                                          <>\r\n                                            <span style={{ fontSize: 12 }}>\r\n                                              {audio.track.artists\r\n                                                .filter(\r\n                                                  (artist, index) => index < 3\r\n                                                )\r\n                                                .map((artist, index) =>\r\n                                                  index >= 2 ? null : (\r\n                                                    <span\r\n                                                      key={artist.id}\r\n                                                      style={\r\n                                                        index === 1\r\n                                                          ? {\r\n                                                              fontSize: 12,\r\n                                                              marginLeft: 4,\r\n                                                            }\r\n                                                          : { fontSize: 12 }\r\n                                                      }\r\n                                                    >\r\n                                                      {index === 1\r\n                                                        ? truncateArtistNameMobile(\r\n                                                            artist.name\r\n                                                          )\r\n                                                        : artist.name}\r\n\r\n                                                      {index !== 1 ? \",\" : \"\"}\r\n                                                    </span>\r\n                                                  )\r\n                                                )}\r\n                                            </span>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                      <div\r\n                                        style={{\r\n                                          fontSize: 12,\r\n                                          display: \"flex\",\r\n                                          position: \"relative\",\r\n                                          justifyContent: \"space-between\",\r\n                                        }}\r\n                                        className={`text-${\r\n                                          audio.track.id ===\r\n                                          currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"gray\"\r\n                                        }-700`}\r\n                                      >\r\n                                        {msToTime(audio.track.duration_ms)}\r\n                                        {audio.track.id ===\r\n                                        currentSongPlayingId ? (\r\n                                          floatingPlayerPlay ? (\r\n                                            <span id=\"bars\">\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                              <span className=\"bar\"></span>\r\n                                            </span>\r\n                                          ) : null\r\n                                        ) : null}\r\n                                      </div>\r\n                                    </div>\r\n                                    {console.log(audio)}\r\n                                    <div\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        right: 6,\r\n                                        top: 14,\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      <div>\r\n                                        {audio.track.id ===\r\n                                        currentSongPlayingId ? (\r\n                                          floatingPlayerPlay ? (\r\n                                            <Tooltip\r\n                                              placement=\"top\"\r\n                                              title=\"Pause\"\r\n                                            >\r\n                                              <IconButton\r\n                                                size=\"small\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    \"rgb(240, 240, 240)\",\r\n                                                }}\r\n                                                color={\r\n                                                  audio.track.id ===\r\n                                                  currentSongPlayingId\r\n                                                    ? \"primary\"\r\n                                                    : \"inherit\"\r\n                                                }\r\n                                                onClick={() => {\r\n                                                  console.log(\"Pause\");\r\n                                                  setFloatingPlayerPlay(false);\r\n                                                }}\r\n                                              >\r\n                                                <PauseIcon />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              placement=\"top\"\r\n                                              title=\"Play\"\r\n                                            >\r\n                                              <IconButton\r\n                                                size=\"small\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    \"rgb(240, 240, 240)\",\r\n                                                }}\r\n                                                color={\r\n                                                  audio.track.id ===\r\n                                                  currentSongPlayingId\r\n                                                    ? \"primary\"\r\n                                                    : \"inherit\"\r\n                                                }\r\n                                                onClick={() => {\r\n                                                  console.log(\"Play\");\r\n                                                  setFloatingPlayerPlay(true);\r\n                                                }}\r\n                                              >\r\n                                                <PlayArrowIcon />\r\n                                              </IconButton>\r\n                                            </Tooltip>\r\n                                          )\r\n                                        ) : (\r\n                                          <Tooltip placement=\"top\" title=\"Play\">\r\n                                            <IconButton\r\n                                              size=\"small\"\r\n                                              style={{\r\n                                                backgroundColor:\r\n                                                  \"rgb(240, 240, 240)\",\r\n                                              }}\r\n                                              color={\r\n                                                audio.track.id ===\r\n                                                currentSongPlayingId\r\n                                                  ? \"primary\"\r\n                                                  : \"inherit\"\r\n                                              }\r\n                                              onClick={() => {\r\n                                                setChooseTrack(audio.track);\r\n                                                setCurrentSongPlayingId(\r\n                                                  audio.track.id\r\n                                                );\r\n                                                setPlayButtonPressedCount(\r\n                                                  (playButtonPressedCount += 1)\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              <PlayArrowIcon />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                        )}\r\n                                      </div>\r\n                                      <div\r\n                                        style={{\r\n                                          marginLeft: 14,\r\n                                          cursor: \"pointer\",\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          removeTracksFromMyPlaylist(\r\n                                            myPlaylistTitle.id,\r\n                                            audio.track.uri\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Tooltip placement=\"top\" title=\"Remove\">\r\n                                          <RemoveCircleOutlineIcon\r\n                                            color={\r\n                                              audio.track.id ===\r\n                                              currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"action\"\r\n                                            }\r\n                                          />\r\n                                        </Tooltip>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </li>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: 140,\r\n              marginBottom: 140,\r\n            }}\r\n          >\r\n            <CircularProgress size={28} />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div>\r\n          <div>\r\n            <ul>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  fontSize: 14,\r\n                  margin: \"80px 0\",\r\n                }}\r\n              >\r\n                You have no Playlists\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 16,\r\n                letterSpacing: 2,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Create new Playlist\r\n            </div>\r\n            <IconButton onClick={handleClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n          {/* <div\r\n            style={{\r\n              marginTop: 10,\r\n              borderRadius: 4,\r\n              border: \"1px solid rgb(180, 180, 180)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <AddPhotoAlternateOutlinedIcon\r\n              color=\"disabled\"\r\n              style={{ height: 160, width: 160 }}\r\n            />\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              borderRadius: 6,\r\n              border: \"1.2px solid rgb(200, 200, 200)\",\r\n            }}\r\n          >\r\n            <label\r\n              htmlFor=\"myImage\"\r\n              className=\"fileInput\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img\r\n                className=\"product-image\"\r\n                src={displayImage ? displayImage : noImage}\r\n                alt=\"\"\r\n                style={{ height: 160 }}\r\n              />\r\n            </label>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              id=\"myImage\"\r\n              name=\"myImage\"\r\n              onChange={onImageSelect}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 20 }}>\r\n            <Typography id=\"modal-modal-title\" variant=\"body2\" component=\"h2\">\r\n              Title\r\n            </Typography>\r\n            <input\r\n              className=\" focus:border-light-gray-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-3\"\r\n              type=\"text\"\r\n              style={{\r\n                borderColor: \"rgb(180, 180, 180)\",\r\n                borderWidth: 1,\r\n                marginTop: 10,\r\n              }}\r\n              aria-label=\"Search for songs...\"\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <Typography id=\"modal-modal-title\" variant=\"body2\" component=\"h2\">\r\n              Description\r\n            </Typography>\r\n            <textarea\r\n              className=\" focus:border-light-gray-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-3\"\r\n              type=\"text\"\r\n              style={{\r\n                borderColor: \"rgb(180, 180, 180)\",\r\n                borderWidth: 1,\r\n                marginTop: 10,\r\n              }}\r\n              aria-label=\"Search for songs...\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{ marginTop: 10, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              disabled={title === \"\" ? true : false}\r\n              onClick={() => {\r\n                createPlaylist(title, description, base64Uri);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={selectTracksOpen}\r\n        onClose={handleSelectTracksClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"text-gray-900\"\r\n              style={{\r\n                fontSize: 15,\r\n                letterSpacing: 1,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Add Tracks\r\n            </div>\r\n            <IconButton onClick={handleSelectTracksClose} size=\"small\">\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div style={{ position: \"relative\", marginTop: 20 }}>\r\n            <SearchIconWrapper>\r\n              <SearchIcon color=\"primary\" />\r\n            </SearchIconWrapper>\r\n            <input\r\n              className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-12\"\r\n              type=\"text\"\r\n              placeholder=\"Search for tracks to add..\"\r\n              style={{ width: \"100%\", fontSize: 15 }}\r\n              value={createPlaylistSearchTerm}\r\n              onChange={(e) => {\r\n                setCreatePlaylistSearchTerm(e.target.value);\r\n              }}\r\n            />\r\n            {createPlaylistSearchTerm ? (\r\n              <span style={{ position: \"absolute\", right: 4, top: 4 }}>\r\n                <IconButton\r\n                  onClick={() => setCreatePlaylistSearchTerm(\"\")}\r\n                  size=\"small\"\r\n                >\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n\r\n          {createPlaylistSearchData.length > 0 ? (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"body2\"\r\n                component=\"h2\"\r\n                style={{ letterSpacing: 1 }}\r\n              >\r\n                Search results\r\n              </Typography>\r\n            </div>\r\n          ) : null}\r\n          <div style={{ marginTop: 20 }}>\r\n            <div className=\"flex flex-col mt-2 mb-2\">\r\n              <div>\r\n                <div>\r\n                  <div className=\" align-middle \">\r\n                    <div>\r\n                      <ul\r\n                        className={\r\n                          createPlaylistSearchData.length > 0\r\n                            ? \"createPlaylistSongsBox\"\r\n                            : null\r\n                        }\r\n                        role=\"list\"\r\n                      >\r\n                        {createPlaylistSearchData?.map((audio) => (\r\n                          <div\r\n                            style={{\r\n                              display: \"block\",\r\n                              margin: \"0 auto\",\r\n                              width: \"100%\",\r\n                            }}\r\n                            key={audio.id}\r\n                          >\r\n                            <li\r\n                              style={{ alignItems: \"center\" }}\r\n                              className=\"py-1 flex border border-gray-200 rounded-md overflow-hidden\"\r\n                            >\r\n                              <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"ml-1 flex-shrink-0 w-16 h-16 border border-gray-200 rounded-md overflow-hidden\"\r\n                              >\r\n                                {audio.album.images[0] !== undefined ? (\r\n                                  <img\r\n                                    src={audio.album.images[0].url}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={noImage}\r\n                                    className=\"w-full h-full object-center object-cover\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n\r\n                              <div\r\n                                className=\"ml-3 flex-1 flex flex-col mr-2\"\r\n                                style={{ position: \"relative\" }}\r\n                              >\r\n                                <div>\r\n                                  <div\r\n                                    className={`flex justify-between text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-600`}\r\n                                  >\r\n                                    <Typography\r\n                                      style={{\r\n                                        fontSize: 13,\r\n                                        textTransform: \"capitalize\",\r\n                                      }}\r\n                                    >\r\n                                      {audio.name\r\n                                        ? truncateMobile(audio.name)\r\n                                        : \"No name\"}\r\n                                    </Typography>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className={`mt-1 mb-1 flex items-center  text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-400`}\r\n                                  >\r\n                                    {audio.artists.length < 2 ? (\r\n                                      <span\r\n                                        style={{ fontSize: 12 }}\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"blue\"\r\n                                            : \"\"\r\n                                        }\r\n                                      >\r\n                                        {audio.artists[0].name\r\n                                          ? audio.artists[0].name\r\n                                          : \"No artist name\"}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <>\r\n                                        <span style={{ fontSize: 12 }}>\r\n                                          {audio.artists\r\n                                            .filter(\r\n                                              (artist, index) => index < 3\r\n                                            )\r\n                                            .map((artist, index) =>\r\n                                              index >= 2 ? null : (\r\n                                                <span\r\n                                                  key={artist.id}\r\n                                                  style={\r\n                                                    index === 1\r\n                                                      ? {\r\n                                                          fontSize: 12,\r\n                                                          marginLeft: 4,\r\n                                                        }\r\n                                                      : { fontSize: 12 }\r\n                                                  }\r\n                                                >\r\n                                                  {index === 1\r\n                                                    ? truncateArtistNameMobile(\r\n                                                        artist.name\r\n                                                      )\r\n                                                    : artist.name}\r\n\r\n                                                  {index !== 1 ? \",\" : \"\"}\r\n                                                </span>\r\n                                              )\r\n                                            )}\r\n                                        </span>\r\n                                      </>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      position: \"relative\",\r\n                                    }}\r\n                                    className={`text-${\r\n                                      audio.id === currentSongPlayingId\r\n                                        ? \"blue\"\r\n                                        : \"gray\"\r\n                                    }-700`}\r\n                                  >\r\n                                    {msToTime(audio.duration_ms)}\r\n                                    <div>\r\n                                      {audio.id === currentSongPlayingId ? (\r\n                                        floatingPlayerPlay ? (\r\n                                          <span id=\"bars\">\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                            <span className=\"bar\"></span>\r\n                                          </span>\r\n                                        ) : null\r\n                                      ) : null}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    right: 0,\r\n                                    top: 14,\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    {audio.id === currentSongPlayingId ? (\r\n                                      floatingPlayerPlay ? (\r\n                                        <Tooltip placement=\"top\" title=\"Pause\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Pause\");\r\n                                              setFloatingPlayerPlay(false);\r\n                                            }}\r\n                                          >\r\n                                            <PauseIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      ) : (\r\n                                        <Tooltip placement=\"top\" title=\"Play\">\r\n                                          <IconButton\r\n                                            size=\"small\"\r\n                                            style={{\r\n                                              backgroundColor:\r\n                                                \"rgb(240, 240, 240)\",\r\n                                            }}\r\n                                            color={\r\n                                              audio.id === currentSongPlayingId\r\n                                                ? \"primary\"\r\n                                                : \"inherit\"\r\n                                            }\r\n                                            onClick={() => {\r\n                                              console.log(\"Play\");\r\n                                              setFloatingPlayerPlay(true);\r\n                                            }}\r\n                                          >\r\n                                            <PlayArrowIcon />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      )\r\n                                    ) : (\r\n                                      <Tooltip placement=\"top\" title=\"Play\">\r\n                                        <IconButton\r\n                                          size=\"small\"\r\n                                          style={{\r\n                                            backgroundColor:\r\n                                              \"rgb(240, 240, 240)\",\r\n                                          }}\r\n                                          color={\r\n                                            audio.id === currentSongPlayingId\r\n                                              ? \"primary\"\r\n                                              : \"inherit\"\r\n                                          }\r\n                                          onClick={() => {\r\n                                            setChooseTrack(audio);\r\n                                            setCurrentSongPlayingId(audio.id);\r\n                                            setPlayButtonPressedCount(\r\n                                              (playButtonPressedCount += 1)\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          <PlayArrowIcon />\r\n                                        </IconButton>\r\n                                      </Tooltip>\r\n                                    )}\r\n                                  </div>\r\n                                  <div\r\n                                    style={{\r\n                                      marginLeft: 14,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      addTracksToMyPlaylist(\r\n                                        myPlaylistTitle.id,\r\n                                        myPlaylistTitle,\r\n                                        audio.uri,\r\n                                        audio.id\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip placement=\"top\" title=\"Add\">\r\n                                      <AddCircleOutlinedIcon\r\n                                        color={\r\n                                          audio.id === currentSongPlayingId\r\n                                            ? \"primary\"\r\n                                            : \"action\"\r\n                                        }\r\n                                      />\r\n                                    </Tooltip>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ marginTop: 20, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <button\r\n              class=\"w-1/2 pt-2 pb-2  rounded-md bg-black text-white\"\r\n              type=\"submit\"\r\n              onClick={handleSelectTracksClose}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default MyPlaylist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Snackbar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport useAuth from \"../useAuth\";\r\nimport Header from \"../Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport FloatingPlayer from \"../FloatingPlayer/FloatingPlayer\";\r\nimport CategoryPlaylist from \"../CategoryPlaylist/CategoryPlaylist\";\r\nimport ArtistDetails from \"../ArtistDetails/ArtistDetails\";\r\nimport Artists from \"../Artists/Artists\";\r\nimport NewReleases from \"../Home/NewReleases/NewReleases\";\r\nimport RecentlyPlayed from \"../Home/RecentlyPlayed/RecentlyPlayed\";\r\nimport RecentlyPlayedMobile from \"../Home/RecentlyPlayed/RecentlyPlayedMobile\";\r\nimport MySavedTracks from \"../MySavedTracks/MySavedTracks\";\r\nimport MyPlaylist from \"../MyPlaylist/MyPlaylist\";\r\n\r\ndotenv.config();\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: process.env.SPOTIFY_CLIENT_ID,\r\n});\r\n\r\nconst drawerWidth = 240;\r\nconst recentSongsWidth = 320;\r\n\r\nconst Dashboard = ({ code }) => {\r\n  const [width, setWidth] = useState(document.body.offsetWidth);\r\n  const accessToken = useAuth(code);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [chooseTrack, setChooseTrack] = useState(\"\");\r\n  const [newReleases, setNewReleases] = useState([]);\r\n  const [showSearchSongs, setShowSearchSongs] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showAlbumList, setShowAlbumList] = useState(false);\r\n  const [currentSongPlayingId, setCurrentSongPlayingId] = useState(\"\");\r\n  const [floatingPlayerPlay, setFloatingPlayerPlay] = useState(false);\r\n  const [playerDetails, setPlayerDetails] = useState({});\r\n  const [album, setAlbum] = useState({});\r\n  const [currentSongArtistAlbums, setCurrentSongArtistAlbums] = useState([]);\r\n  const [category, setCategory] = useState(\"Home\");\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [categorySublist, setCategorySublist] = useState([]);\r\n  const [categorySublistTitle, setCategorySublistTitle] = useState({});\r\n  const [currentPlaylistPlayingId, setCurrentPlaylistPlayingId] = useState(\"\");\r\n  const [playlistTracks, setPlaylistTracks] = useState(\"\");\r\n  const [albumTracks, setAlbumTracks] = useState([]);\r\n  const [recentlyPlayedSongs, setRecentlyPlayedSongs] = useState([]);\r\n  const [myTopArtists, setMyTopArtists] = useState([]);\r\n  const [myTopTracks, setMyTopTracks] = useState([]);\r\n  const [musicCategories, setMusicCategories] = useState([]);\r\n  const [artistDetails, setArtistDetails] = useState([]);\r\n  const [artistTopTracks, setArtistTopTracks] = useState([]);\r\n  const [showArtistDetails, setShowArtistDetails] = useState(false);\r\n  const [songProgress, setSongProgress] = useState(null);\r\n  const [playButtonPressedCount, setPlayButtonPressedCount] = useState(0);\r\n  const [showArtistsCategory, setShowArtistsCategory] = useState(false);\r\n  const [showNewReleasesCategory, setShowNewReleasesCategory] = useState(false);\r\n  const [showSavedTracks, setShowSavedTracks] = useState(false);\r\n  const [showMyPlaylists, setShowMyPlaylists] = useState(false);\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [relatedArtists, setRelatedArtists] = useState([]);\r\n  const [myPlaylist, setMyPlaylist] = useState([]);\r\n  const [myPlaylistTitle, setMyPlaylistTitle] = useState(\"\");\r\n  const [mySavedTracks, setMySavedTracks] = useState([]);\r\n  const [createPlaylistSearchTerm, setCreatePlaylistSearchTerm] = useState(\"\");\r\n  const [createPlaylistSearchData, setCreatePlaylistSearchData] = useState([]);\r\n  const [openSnackbar, setOpenSnackbar] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openAlert, setOpenAlert] = useState({});\r\n  const [selectPlaylistOpen, setSelectPlaylistOpen] = useState(false);\r\n\r\n  const handleCloseAlert = () => {\r\n    setOpenAlert({\r\n      message: openAlert.message,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    console.log(accessToken);\r\n    spotifyApi.setAccessToken(accessToken);\r\n    setCategory(\"Home\");\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMe().then(\r\n      function (data) {\r\n        console.log(\"Some information about the authenticated user\", data.body);\r\n        setCurrentUser(data.body);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    setWidth(document.body.offsetWidth);\r\n  });\r\n\r\n  // console.log(relatedArtists);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    getMyRecentPlayedSongs();\r\n    getMyTopArtists();\r\n    getMyTopTracks();\r\n    getMySavedTracks();\r\n\r\n    // window.onSpotifyWebPlaybackSDKReady = () => {\r\n    //   const player = new window.Spotify.Player({\r\n    //     name: \"Carly Rae Jepsen Player\",\r\n    //     getOAuthToken: (callback) => {\r\n    //       callback(accessToken);\r\n    //     },\r\n    //     volume: 0.5,\r\n    //   });\r\n\r\n    //   const playTrack = () => {\r\n    //     console.log(\"lol\");\r\n\r\n    //     player.connect().then((success) => {\r\n    //       if (success) {\r\n    //         console.log(\r\n    //           \"The Web Playback SDK successfully connected to Spotify!\"\r\n    //         );\r\n    //       }\r\n    //     });\r\n\r\n    //     player.addListener(\"ready\", async ({ device_id }) => {\r\n    //       const spotify_uri = \"spotify:track:7xGfFoTpQ2E7fRF5lN10tr\";\r\n    //       console.log(\"Connected with Device ID\", device_id);\r\n\r\n    //       const response = await fetch(\r\n    //         `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\r\n    //         {\r\n    //           method: \"PUT\",\r\n    //           body: JSON.stringify({ uris: [spotify_uri] }),\r\n    //           headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Authorization: `Bearer ${accessToken}`,\r\n    //           },\r\n    //         }\r\n    //       );\r\n\r\n    //       const data = await response.text();\r\n    //       console.log(data ? JSON.parse(data) : response);\r\n    //     });\r\n    //   };\r\n\r\n    //   const button = document.createElement(\"button\");\r\n    //   button.innerHTML = \"Play\";\r\n    //   button.addEventListener(\"click\", playTrack);\r\n    //   document.getElementById(\"root\").append(button);\r\n\r\n    //   const play = ({\r\n    //     spotify_uri,\r\n    //     playerInstance: {\r\n    //       _options: { getOAuthToken },\r\n    //     },\r\n    //   }) => {\r\n    //     getOAuthToken((access_token) => {\r\n    //   fetch(\r\n    //     `https://api.spotify.com/v1/me/player/play?device_id=${device_id}`,\r\n    //     {\r\n    //       method: \"PUT\",\r\n    //       body: JSON.stringify({ uris: [spotify_uri] }),\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //         Authorization: `Bearer ${access_token}`,\r\n    //       },\r\n    //     }\r\n    //   );\r\n    //     });\r\n    //   };\r\n    // };\r\n  }, [accessToken]);\r\n\r\n  const searchTracks = (searchterm) => {\r\n    if (!searchTerm) return;\r\n    let cancel = false;\r\n\r\n    spotifyApi.searchTracks(searchterm).then((res) => {\r\n      if (cancel) return;\r\n      setSearchData(res.body.tracks.items);\r\n      setCurrentSongPlayingId(currentSongPlayingId);\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (!searchTerm) return setSearchData([]);\r\n    if (!accessToken) return;\r\n    // let cancel = false;\r\n    searchTracks(searchTerm);\r\n    setShowSearchSongs(true);\r\n\r\n    // return () => (cancel = true);\r\n  }, [searchTerm, accessToken]);\r\n\r\n  const createPlaylistSearchTracks = (searchterm) => {\r\n    if (!searchterm) return;\r\n    let cancel = false;\r\n\r\n    spotifyApi.searchTracks(searchterm).then((res) => {\r\n      if (cancel) return;\r\n      setCreatePlaylistSearchData(res.body.tracks.items);\r\n      // console.log(res.body.tracks);\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    if (createPlaylistSearchTerm === \"\") setCreatePlaylistSearchData([]);\r\n    console.log(createPlaylistSearchTerm);\r\n    createPlaylistSearchTracks(createPlaylistSearchTerm);\r\n  }, [createPlaylistSearchTerm, accessToken]);\r\n\r\n  // console.log(newReleases);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    if (searchTerm === \"\") setSearchData([]);\r\n\r\n    if (category === \"Home\") {\r\n      getNewReleases();\r\n      getMusicCategories();\r\n      getMyRecentPlayedSongs();\r\n      getMyTopArtists();\r\n      getMyTopTracks();\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"Artists\") {\r\n      setShowArtistsCategory(true);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(false);\r\n      if (myTopArtists.length > 0) {\r\n        getArtist(myTopArtists[0].id);\r\n      }\r\n      getArtistRelatedArtists(artistDetails.id);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"New Releases\") {\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(true);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(false);\r\n      setAlbum(newReleases[0].id);\r\n      selectAlbum(newReleases[0].id);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"Saved Tracks\") {\r\n      getMySavedTracks();\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(true);\r\n      setShowMyPlaylists(false);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    } else if (category === \"My Playlists\") {\r\n      getMyPlaylists();\r\n      setShowArtistsCategory(false);\r\n      setShowNewReleasesCategory(false);\r\n      setShowSavedTracks(false);\r\n      setShowMyPlaylists(true);\r\n      setCategorySublist([]);\r\n      setSearchTerm(\"\");\r\n    }\r\n    getMyPlaylistsForSearchResults();\r\n    getMyRecentPlayedSongs();\r\n  }, [accessToken, category, currentUser]);\r\n\r\n  const selectCategorySublist = (album) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getPlaylistsForCategory(album.id, {\r\n        country: \"IN\",\r\n        limit: 20,\r\n        offset: 2,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          setCategorySublist(data.body.playlists.items);\r\n          setCategorySublistTitle({\r\n            id: album.id,\r\n            name: album.name,\r\n            image: album.icons[0].url,\r\n          });\r\n          selectCategoryPlaylist(data.body.playlists.items[0]);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getAudioAnalysisForTrack(\"3Qm86XLflmIXVm1wcwkgDK\").then(\r\n      function (data) {\r\n        console.log(data.body);\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n\r\n  const selectCategoryPlaylist = (playlist) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    spotifyApi\r\n      .getPlaylist(playlist.id)\r\n      .then(function (data) {\r\n        setAlbum(data.body);\r\n        setPlaylistTracks(playlist.tracks.total);\r\n\r\n        spotifyApi\r\n          .getPlaylistTracks(playlist.id, {\r\n            offset: 1,\r\n          })\r\n          .then((data) => {\r\n            setShowAlbumList(true);\r\n            setAlbumTracks(data.body);\r\n            setSearchData([]);\r\n            setIsLoading(false);\r\n          });\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const selectAlbum = (albumId) => {\r\n    if (!accessToken) return;\r\n    // console.log(albumId);\r\n    setIsLoading(true);\r\n\r\n    spotifyApi\r\n      .getAlbum(albumId)\r\n      .then(function (data) {\r\n        // console.log(data);\r\n        spotifyApi.getArtistAlbums(data.body.artists[0].id).then(\r\n          (data) => {\r\n            setCurrentSongArtistAlbums(data.body);\r\n            setIsLoading(false);\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n          }\r\n        );\r\n        setAlbum(data.body);\r\n        return data.body.tracks.items.map(function (t) {\r\n          return t.id;\r\n        });\r\n      })\r\n      .then(function (trackIds) {\r\n        return spotifyApi.getTracks(trackIds);\r\n      })\r\n      .then(function (data) {\r\n        // console.log(data.body);\r\n        // setShowAlbumList(true);\r\n\r\n        setAlbumTracks(data.body.tracks);\r\n        // setSearchData([]);\r\n        // setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchData.length > 0) {\r\n      spotifyApi\r\n        .getArtistAlbums(\r\n          chooseTrack ? chooseTrack.artists[0].id : searchData[0].artists[0].id\r\n        )\r\n        .then(\r\n          (data) => {\r\n            setCurrentSongArtistAlbums(data.body);\r\n            // console.log(searchData);\r\n            // setFloatingPlayerPlay(true);\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n          }\r\n        );\r\n    }\r\n  }, [searchData, chooseTrack]);\r\n\r\n  useEffect(() => {\r\n    if (!chooseTrack) return;\r\n    setFloatingPlayerPlay(true);\r\n  }, [chooseTrack]);\r\n\r\n  const getMyPlaylistsForSearchResults = () => {\r\n    if (!accessToken) return;\r\n    console.log(currentUser);\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me/playlists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.items);\r\n        setMyPlaylist(response.data.items);\r\n      });\r\n  };\r\n\r\n  const getNewReleases = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getNewReleases({ limit: 45, offset: 0, country: \"US\" })\r\n      .then((res) => {\r\n        setNewReleases(res.body.albums.items);\r\n        // console.log(res.body.albums.items);\r\n      });\r\n  };\r\n\r\n  const getMusicCategories = () => {\r\n    setShowArtistDetails(false);\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getCategories({\r\n        limit: 20,\r\n        offset: 0,\r\n        country: \"AU\",\r\n        locale: \"en_AU\",\r\n      })\r\n      .then(\r\n        function (data) {\r\n          console.log(\"get categories\", data.body);\r\n\r\n          setMusicCategories(data.body.categories.items);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  const getMyRecentPlayedSongs = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .getMyRecentlyPlayedTracks({\r\n        limit: 20,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          // Output items\r\n          // console.log(\"Your 40 most recently played tracks are:\");\r\n          setRecentlyPlayedSongs(data.body.items);\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  let filteredRecentlyPlayedSongs = recentlyPlayedSongs\r\n    .map((e) => e.track[\"id\"])\r\n    .map((e, i, final) => final.indexOf(e) === i && i)\r\n    .filter((obj) => recentlyPlayedSongs[obj])\r\n    .map((e) => recentlyPlayedSongs[e]);\r\n\r\n  const getMyTopArtists = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMyTopArtists({ limit: 32, offset: 1 }).then(\r\n      function (data) {\r\n        console.log(data);\r\n        if (data.body.items.length > 0) {\r\n          let topArtists = data.body.items;\r\n          setMyTopArtists(topArtists);\r\n          setArtistDetails(topArtists[0]);\r\n        }\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMyTopTracks = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMyTopTracks({ limit: 30, offset: 1 }).then(\r\n      function (data) {\r\n        let topTracks = data.body.items;\r\n        console.log(topTracks);\r\n        setMyTopTracks(topTracks);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getArtist = (artistId) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    // setShowArtistDetails(true);\r\n    spotifyApi.getArtistTopTracks(artistId, \"US\").then(\r\n      function (data) {\r\n        // console.log(data.body);\r\n        setArtistTopTracks(data.body);\r\n        getArtistRelatedArtists(artistId);\r\n\r\n        setAlbumTracks(data.body.tracks);\r\n        setSearchData([]);\r\n        setIsLoading(false);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n    spotifyApi.getArtist(artistId).then(\r\n      function (data) {\r\n        // console.log(\"Artist information\", data.body);\r\n        setArtistDetails(data.body);\r\n        setSearchData([]);\r\n      },\r\n      function (err) {\r\n        console.error(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getArtistRelatedArtists = (artistId) => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getArtistRelatedArtists(artistId).then(\r\n      function (data) {\r\n        // console.log(\"RelatedArtists\", data.body);\r\n        setRelatedArtists(data.body.artists);\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMySavedTracks = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.getMySavedTracks().then(\r\n      function (data) {\r\n        console.log(\"Done!\", data.body);\r\n        setMySavedTracks(data.body.items);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n\r\n    spotifyApi.getMySavedAlbums().then(\r\n      function (data) {\r\n        // Output items\r\n        console.log(\"Saved Albums\", data.body.items);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getMyPlaylists = () => {\r\n    if (!accessToken) return;\r\n    console.log(currentUser);\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me/playlists\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.items);\r\n        if (response.data.items.length > 0) {\r\n          setMyPlaylist(response.data.items);\r\n          spotifyApi\r\n            .getPlaylistTracks(response.data.items[0].id)\r\n            .then((data) => {\r\n              console.log(data);\r\n              if (data) {\r\n                setAlbumTracks(data.body);\r\n                setMyPlaylistTitle(response.data.items[0]);\r\n                console.log(data.body.items);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const selectMyPlaylist = (playlist) => {\r\n    if (!accessToken) return;\r\n    setIsLoading(true);\r\n    console.log(playlist);\r\n    spotifyApi\r\n      .getPlaylistTracks(playlist.id)\r\n      .then((data) => {\r\n        setAlbumTracks(data.body);\r\n        setMyPlaylistTitle(playlist);\r\n        console.log(data.body);\r\n      })\r\n      .then(() => setIsLoading(false));\r\n  };\r\n\r\n  const addTracksToMyPlaylist = (\r\n    playlistId,\r\n    myPlaylistTitle,\r\n    spotifyUri,\r\n    audioId\r\n  ) => {\r\n    if (!accessToken) return;\r\n    console.log(playlistId, myPlaylistTitle, spotifyUri, audioId);\r\n    spotifyApi.getPlaylistTracks(playlistId).then((data) => {\r\n      console.log(data.body.items);\r\n      if (\r\n        data.body.items.find((item) => item.track.id === audioId) === undefined\r\n      ) {\r\n        spotifyApi\r\n          .addTracksToPlaylist(playlistId, [spotifyUri])\r\n          .then((data) => {\r\n            console.log(\"Added tracks to playlist!\", data.body.snapshot_id);\r\n          })\r\n          .then(() => {\r\n            getMyPlaylists();\r\n          })\r\n          .then(() => {\r\n            selectMyPlaylist(myPlaylistTitle);\r\n            setOpenSnackbar({ message: \"Added to playlist..\", open: true });\r\n            setSelectPlaylistOpen(false);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        setOpenAlert({\r\n          message: \"Track already exists in this playlist..\",\r\n          open: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeTracksFromMyPlaylist = (playlistId, spotifyUri) => {\r\n    console.log(playlistId, spotifyUri);\r\n    if (!accessToken) return;\r\n    const tracks = [{ uri: spotifyUri }];\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(playlistId, tracks)\r\n      .then((data) => {\r\n        console.log(\"Track removed\", data.body.snapshot_id);\r\n      })\r\n      .then(() => {\r\n        getMyPlaylists();\r\n      })\r\n      .then(() =>\r\n        setOpenSnackbar({\r\n          message: \"Removed from playlist..\",\r\n          open: true,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addToSavedTracks = (track) => {\r\n    console.log(track.id);\r\n    spotifyApi.containsMySavedTracks([track.id]).then(\r\n      function (data) {\r\n        // An array is returned, where the first element corresponds to the first track ID in the query\r\n        var trackIsInYourMusic = data.body[0];\r\n        console.log(trackIsInYourMusic);\r\n        setAnchorEl(null);\r\n\r\n        if (trackIsInYourMusic) {\r\n          console.log(\"Track was found in the user's Your Music library\");\r\n          setOpenAlert({\r\n            message: \"Track already exists in your Saved Albums..\",\r\n            open: true,\r\n          });\r\n        } else {\r\n          console.log(\"Track was not found.\");\r\n          spotifyApi\r\n            .addToMySavedTracks([track.id])\r\n            .then((response) => {\r\n              console.log(\"Track added to saved albums\", response.body);\r\n              getMySavedTracks();\r\n            })\r\n            .then(() => {\r\n              setOpenSnackbar({\r\n                message: \"Added to saved tracks..\",\r\n                open: true,\r\n              });\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const removeTrackFromSavedTracks = (trackId) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .removeFromMySavedTracks([trackId])\r\n      .then((data) => {\r\n        console.log(data.body);\r\n        getMySavedTracks();\r\n      })\r\n      .then(() => {\r\n        setOpenSnackbar({\r\n          message: \"Removed from saved tracks..\",\r\n          open: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const createPlaylist = (title, description, longbase64uri) => {\r\n    if (!accessToken) return;\r\n    spotifyApi\r\n      .createPlaylist(title, {\r\n        description: description,\r\n        public: true,\r\n      })\r\n      .then(\r\n        function (data) {\r\n          console.log(\"Created playlist!\", data.body.id);\r\n          if (longbase64uri !== null) {\r\n            spotifyApi\r\n              .uploadCustomPlaylistCoverImage(\r\n                data.body.id,\r\n                longbase64uri.split(\",\")[1]\r\n              )\r\n              .then(\r\n                function (result) {\r\n                  console.log(\"Playlsit cover image uploaded!\", result.body);\r\n                },\r\n                function (err) {\r\n                  console.log(\"Something went wrong!\", err);\r\n                }\r\n              )\r\n              .then(() => getMyPlaylists());\r\n          }\r\n          getMyPlaylists();\r\n          // setOpenSnackbar(\"Playlist created successfully..\")\r\n        },\r\n        function (err) {\r\n          console.log(\"Something went wrong!\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  const pauseSong = () => {\r\n    if (!accessToken) return;\r\n    spotifyApi.pause().then(\r\n      function () {\r\n        console.log(\"Playback paused\");\r\n      },\r\n      function (err) {\r\n        //if the user making the request is non-premium, a 403 FORBIDDEN response code will be returned\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleCloseSnackbar}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div>\r\n        <div style={{ position: \"fixed\", width: \"100%\", zIndex: 1 }}>\r\n          <Header\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            setCategory={setCategory}\r\n            drawerWidth={drawerWidth}\r\n            mobileOpen={mobileOpen}\r\n            setMobileOpen={setMobileOpen}\r\n            width={width}\r\n            currentUser={currentUser}\r\n            setSearchTerm={setSearchTerm}\r\n          />\r\n        </div>\r\n        <Box\r\n          className=\"p-4 pt-14 md:p-10 md:pt-14 lg:p-10 lg:pt-14 \"\r\n          sx={{\r\n            display: { lg: \"flex\", md: \"block\", sm: \"block\", xs: \"block\" },\r\n          }}\r\n          style={\r\n            chooseTrack\r\n              ? {\r\n                  paddingBottom: 140,\r\n                }\r\n              : {\r\n                  paddingBottom: 0,\r\n                }\r\n          }\r\n        >\r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              width: {\r\n                lg: `calc(100% - ${drawerWidth + recentSongsWidth + 30}px)`,\r\n              },\r\n              ml: { sm: `${drawerWidth}px` },\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n\r\n                justifyContent: \"space-evenly\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={\r\n                  chooseTrack\r\n                    ? {\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                      }\r\n                    : {\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                      }\r\n                }\r\n              >\r\n                {showSearchSongs && searchTerm !== \"\" ? (\r\n                  <div\r\n                    style={{\r\n                      marginTop: 30,\r\n                    }}\r\n                  >\r\n                    <SearchResults\r\n                      searchTerm={searchTerm}\r\n                      searchData={searchData}\r\n                      chooseTrack={chooseTrack}\r\n                      setChooseTrack={setChooseTrack}\r\n                      currentSongPlayingId={currentSongPlayingId}\r\n                      floatingPlayerPlay={floatingPlayerPlay}\r\n                      setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                      setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                      setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                      playButtonPressedCount={playButtonPressedCount}\r\n                      addToSavedTracks={addToSavedTracks}\r\n                      anchorEl={anchorEl}\r\n                      setAnchorEl={setAnchorEl}\r\n                      myPlaylist={myPlaylist}\r\n                      addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                      selectPlaylistOpen={selectPlaylistOpen}\r\n                      setSelectPlaylistOpen={setSelectPlaylistOpen}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {categorySublist.length > 0 ? (\r\n                      <div>\r\n                        <CategoryPlaylist\r\n                          searchTerm={searchTerm}\r\n                          album={album}\r\n                          categorySublist={categorySublist}\r\n                          selectCategoryPlaylist={selectCategoryPlaylist}\r\n                          categorySublistTitle={categorySublistTitle}\r\n                          setCategorySublist={setCategorySublist}\r\n                          searchData={searchData}\r\n                          setChooseTrack={setChooseTrack}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          currentPlaylistPlayingId={currentPlaylistPlayingId}\r\n                          setCurrentPlaylistPlayingId={\r\n                            setCurrentPlaylistPlayingId\r\n                          }\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          isLoading={isLoading}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                        />\r\n                      </div>\r\n                    ) : showArtistDetails ? (\r\n                      <ArtistDetails\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        artistDetails={artistDetails}\r\n                        artistTopTracks={artistTopTracks}\r\n                        selectCategoryPlaylist={selectCategoryPlaylist}\r\n                        setShowArtistDetails={setShowArtistDetails}\r\n                        albumTracks={albumTracks}\r\n                        chooseTrack={chooseTrack}\r\n                        setChooseTrack={setChooseTrack}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        isLoading={isLoading}\r\n                        setIsLoading={setIsLoading}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        setSearchData={setSearchData}\r\n                        setAlbumTracks={setAlbumTracks}\r\n                      />\r\n                    ) : category === \"Home\" ? (\r\n                      <Home\r\n                        chooseTrack={chooseTrack}\r\n                        setChooseTrack={setChooseTrack}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        recentlyPlayedSongs={recentlyPlayedSongs}\r\n                        newReleases={newReleases}\r\n                        myTopArtists={myTopArtists}\r\n                        myTopTracks={myTopTracks}\r\n                        selectAlbum={selectAlbum}\r\n                        musicCategories={musicCategories}\r\n                        selectCategorySublist={selectCategorySublist}\r\n                        getArtist={getArtist}\r\n                        album={album}\r\n                        setShowAlbumList={setShowAlbumList}\r\n                        searchTerm={searchTerm}\r\n                        searchTracks={searchTracks}\r\n                        playlistTracks={playlistTracks}\r\n                        setSearchData={setSearchData}\r\n                        setAlbumTracks={setAlbumTracks}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        albumTracks={albumTracks}\r\n                      />\r\n                    ) : category === \"Artists\" ? (\r\n                      <div>\r\n                        <Artists\r\n                          width={width}\r\n                          myTopArtists={myTopArtists}\r\n                          getArtist={getArtist}\r\n                          getArtistRelatedArtists={getArtistRelatedArtists}\r\n                          artistDetails={artistDetails}\r\n                        />\r\n                        <ArtistDetails\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          artistDetails={artistDetails}\r\n                          artistTopTracks={artistTopTracks}\r\n                          selectCategoryPlaylist={selectCategoryPlaylist}\r\n                          setShowArtistDetails={setShowArtistDetails}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          isLoading={isLoading}\r\n                          setIsLoading={setIsLoading}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          relatedArtists={relatedArtists}\r\n                          getArtist={getArtist}\r\n                          getArtistRelatedArtists={getArtistRelatedArtists}\r\n                        />\r\n                      </div>\r\n                    ) : category === \"New Releases\" ? (\r\n                      <div>\r\n                        <NewReleases\r\n                          newReleases={newReleases}\r\n                          selectAlbum={selectAlbum}\r\n                          album={album}\r\n                          setShowAlbumList={setShowAlbumList}\r\n                          searchTerm={searchTerm}\r\n                          searchTracks={searchTracks}\r\n                          playlistTracks={playlistTracks}\r\n                          setSearchData={setSearchData}\r\n                          setAlbumTracks={setAlbumTracks}\r\n                          albumTracks={albumTracks}\r\n                          chooseTrack={chooseTrack}\r\n                          setChooseTrack={setChooseTrack}\r\n                          currentSongPlayingId={currentSongPlayingId}\r\n                          floatingPlayerPlay={floatingPlayerPlay}\r\n                          setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                          setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                          setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                          playButtonPressedCount={playButtonPressedCount}\r\n                          isLoading={isLoading}\r\n                        />\r\n                      </div>\r\n                    ) : category === \"Saved Tracks\" ? (\r\n                      <MySavedTracks\r\n                        createPlaylistSearchTerm={createPlaylistSearchTerm}\r\n                        setCreatePlaylistSearchTerm={\r\n                          setCreatePlaylistSearchTerm\r\n                        }\r\n                        createPlaylistSearchData={createPlaylistSearchData}\r\n                        addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                        addToSavedTracks={addToSavedTracks}\r\n                        mySavedTracks={mySavedTracks}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        setChooseTrack={setChooseTrack}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        removeTrackFromSavedTracks={removeTrackFromSavedTracks}\r\n                      />\r\n                    ) : category === \"My Playlists\" ? (\r\n                      <MyPlaylist\r\n                        createPlaylistSearchTerm={createPlaylistSearchTerm}\r\n                        setCreatePlaylistSearchTerm={\r\n                          setCreatePlaylistSearchTerm\r\n                        }\r\n                        createPlaylistSearchData={createPlaylistSearchData}\r\n                        setCreatePlaylistSearchData={\r\n                          setCreatePlaylistSearchData\r\n                        }\r\n                        chooseTrack={chooseTrack}\r\n                        myPlaylist={myPlaylist}\r\n                        myPlaylistTitle={myPlaylistTitle}\r\n                        selectMyPlaylist={selectMyPlaylist}\r\n                        setChooseTrack={setChooseTrack}\r\n                        currentSongPlayingId={currentSongPlayingId}\r\n                        floatingPlayerPlay={floatingPlayerPlay}\r\n                        setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                        setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                        setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                        playButtonPressedCount={playButtonPressedCount}\r\n                        addTracksToMyPlaylist={addTracksToMyPlaylist}\r\n                        removeTracksFromMyPlaylist={removeTracksFromMyPlaylist}\r\n                        createPlaylist={createPlaylist}\r\n                        albumTracks={albumTracks}\r\n                        isLoading={isLoading}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {chooseTrack ? (\r\n              <div\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: 0,\r\n                  zIndex: 1,\r\n                  right: 0,\r\n                  left: width < 582 ? 0 : drawerWidth,\r\n                  width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                }}\r\n              >\r\n                <div>\r\n                  <FloatingPlayer\r\n                    accessToken={accessToken}\r\n                    searchTerm={searchTerm}\r\n                    searchData={searchData}\r\n                    floatingPlayerPlay={floatingPlayerPlay}\r\n                    setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                    chooseTrack={chooseTrack}\r\n                    setChooseTrack={setChooseTrack}\r\n                    currentSongPlayingId={currentSongPlayingId}\r\n                    setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                    playerDetails={playerDetails}\r\n                    setPlayerDetails={setPlayerDetails}\r\n                    pauseSong={pauseSong}\r\n                    setSongProgress={setSongProgress}\r\n                    setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                    playButtonPressedCount={playButtonPressedCount}\r\n                    albumTracks={albumTracks}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n            }}\r\n          >\r\n            <RecentlyPlayed\r\n              recentlyPlayedSongs={recentlyPlayedSongs}\r\n              filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n              floatingPlayerPlay={floatingPlayerPlay}\r\n              setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n              currentSongPlayingId={currentSongPlayingId}\r\n              setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n              setChooseTrack={setChooseTrack}\r\n              setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n              playButtonPressedCount={playButtonPressedCount}\r\n              recentSongsWidth={recentSongsWidth}\r\n            />\r\n          </Box>\r\n          {searchTerm === \"\" ? (\r\n            <Box\r\n              sx={{\r\n                display: { xs: \"block\", sm: \"block\", md: \"block\", lg: \"none\" },\r\n                width: {\r\n                  lg: `calc(100% - ${drawerWidth + recentSongsWidth + 30}px)`,\r\n                },\r\n                ml: { sm: `${drawerWidth}px` },\r\n              }}\r\n              className=\"mt-10 \"\r\n            >\r\n              <RecentlyPlayedMobile\r\n                recentlyPlayedSongs={recentlyPlayedSongs}\r\n                filteredRecentlyPlayedSongs={filteredRecentlyPlayedSongs}\r\n                floatingPlayerPlay={floatingPlayerPlay}\r\n                setFloatingPlayerPlay={setFloatingPlayerPlay}\r\n                currentSongPlayingId={currentSongPlayingId}\r\n                setCurrentSongPlayingId={setCurrentSongPlayingId}\r\n                setChooseTrack={setChooseTrack}\r\n                setPlayButtonPressedCount={setPlayButtonPressedCount}\r\n                playButtonPressedCount={playButtonPressedCount}\r\n                recentSongsWidth={recentSongsWidth}\r\n              />\r\n            </Box>\r\n          ) : null}\r\n        </Box>\r\n      </div>\r\n      <Snackbar\r\n        open={openSnackbar.open}\r\n        autoHideDuration={2000}\r\n        onClose={handleCloseSnackbar}\r\n        action={action}\r\n        message={openSnackbar.message}\r\n      />\r\n      <Dialog\r\n        open={openAlert.open}\r\n        onClose={handleCloseAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"alert-dialog-title\"\r\n          style={{ fontSize: 16, textTransform: \"uppercase\", letterSpacing: 2 }}\r\n        >\r\n          Track found!\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"alert-dialog-description\"\r\n            style={{ fontSize: 14 }}\r\n          >\r\n            {openAlert.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAlert} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import Login from \"./components/Login/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n\n  return <div>{code ? <Dashboard code={code} /> : <Login />}</div>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}